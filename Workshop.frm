VERSION 5.00
Begin VB.Form WS 
   BorderStyle     =   3  'Fixed Dialog
   Caption         =   "Loto's Character Workshop"
   ClientHeight    =   14775
   ClientLeft      =   150
   ClientTop       =   780
   ClientWidth     =   28710
   BeginProperty Font 
      Name            =   "Verdana"
      Size            =   6.75
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "Workshop.frx":0000
   LinkTopic       =   "Form1"
   LockControls    =   -1  'True
   MaxButton       =   0   'False
   MinButton       =   0   'False
   ScaleHeight     =   14775
   ScaleWidth      =   28710
   StartUpPosition =   3  'Windows Default
   Begin VB.Frame frameTool 
      BorderStyle     =   0  'None
      Height          =   4260
      Index           =   1
      Left            =   16350
      TabIndex        =   226
      Top             =   3375
      Width           =   11640
      Begin VB.Timer timer_RealmAbilities 
         Enabled         =   0   'False
         Index           =   1
         Interval        =   25
         Left            =   2025
         Top             =   765
      End
      Begin VB.Timer timer_RealmAbilities 
         Enabled         =   0   'False
         Index           =   0
         Interval        =   25
         Left            =   1575
         Top             =   765
      End
      Begin VB.Label lbl_RA_PassiveL9 
         Alignment       =   2  'Center
         Caption         =   "9"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3930
         TabIndex        =   539
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL8 
         Alignment       =   2  'Center
         Caption         =   "8"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3750
         TabIndex        =   538
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL7 
         Alignment       =   2  'Center
         Caption         =   "7"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3570
         TabIndex        =   537
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL6 
         Alignment       =   2  'Center
         Caption         =   "6"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3390
         TabIndex        =   536
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_Info 
         Alignment       =   2  'Center
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   345
         Index           =   4
         Left            =   8670
         TabIndex        =   535
         Top             =   3765
         Width           =   2445
      End
      Begin VB.Label WorkshopLabel 
         Alignment       =   2  'Center
         BackColor       =   &H80000008&
         BackStyle       =   0  'Transparent
         Caption         =   "Points Remaining"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   31
         Left            =   8670
         TabIndex        =   534
         Top             =   3570
         Width           =   2445
      End
      Begin VB.Label lbl_RA_ClassName 
         Alignment       =   2  'Center
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   345
         Left            =   6210
         TabIndex        =   533
         Top             =   3765
         Visible         =   0   'False
         Width           =   2445
      End
      Begin VB.Label WorkshopLabel 
         Alignment       =   2  'Center
         BackStyle       =   0  'Transparent
         Caption         =   "Class Unique RR5"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   30
         Left            =   6210
         TabIndex        =   532
         Top             =   3570
         Width           =   2445
      End
      Begin VB.Label lbl_RA_ActiveL5 
         Alignment       =   2  'Center
         Caption         =   "5"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   9150
         TabIndex        =   531
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_ActiveL4 
         Alignment       =   2  'Center
         Caption         =   "4"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   8970
         TabIndex        =   530
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Shape WorkshopShape 
         Height          =   4305
         Index           =   1
         Left            =   -30
         Top             =   -30
         Width           =   6045
      End
      Begin VB.Label WorkshopLabel 
         Alignment       =   2  'Center
         Caption         =   "Effect"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   33
         Left            =   9495
         TabIndex        =   334
         Top             =   0
         Width           =   1125
      End
      Begin VB.Label WorkshopLabel 
         Alignment       =   2  'Center
         Caption         =   "Effect"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   32
         Left            =   4245
         TabIndex        =   333
         Top             =   0
         Width           =   1125
      End
      Begin VB.Label WorkshopLabel 
         Caption         =   "Active"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   29
         Left            =   6090
         TabIndex        =   332
         Top             =   0
         Width           =   615
      End
      Begin VB.Label lbl_RA_ActiveName 
         Caption         =   "Augmented Constitution"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   6090
         TabIndex        =   331
         Top             =   180
         Visible         =   0   'False
         Width           =   2190
      End
      Begin VB.Image cmd_RA_ActiveDec 
         Height          =   180
         Index           =   0
         Left            =   8295
         Picture         =   "Workshop.frx":0CCA
         Top             =   180
         Visible         =   0   'False
         Width           =   120
      End
      Begin VB.Image cmd_RA_ActiveInc 
         Height          =   180
         Index           =   0
         Left            =   9345
         Picture         =   "Workshop.frx":0E2E
         Top             =   180
         Visible         =   0   'False
         Width           =   120
      End
      Begin VB.Label lbl_RA_ActiveL1 
         Alignment       =   2  'Center
         Caption         =   "1"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   8445
         TabIndex        =   330
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_ActiveL2 
         Alignment       =   2  'Center
         Caption         =   "2"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   8625
         TabIndex        =   329
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_ActiveL3 
         Alignment       =   2  'Center
         Caption         =   "3"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   8805
         TabIndex        =   328
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_ActiveBonusValue 
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   9495
         TabIndex        =   327
         Top             =   180
         Visible         =   0   'False
         Width           =   1125
      End
      Begin VB.Label lbl_RA_ActiveCostValue 
         Caption         =   "Pts: 0"
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   10740
         TabIndex        =   326
         Top             =   180
         Visible         =   0   'False
         Width           =   570
      End
      Begin VB.Label lbl_RA_PassiveCostValue 
         Caption         =   "Pts: 0"
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   5400
         TabIndex        =   325
         Top             =   180
         Visible         =   0   'False
         Width           =   570
      End
      Begin VB.Label lbl_RA_PassiveBonusValue 
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   4245
         TabIndex        =   324
         Top             =   180
         Visible         =   0   'False
         Width           =   1125
      End
      Begin VB.Label lbl_RA_PassiveL5 
         Alignment       =   2  'Center
         Caption         =   "5"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3210
         TabIndex        =   323
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL4 
         Alignment       =   2  'Center
         Caption         =   "4"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   3030
         TabIndex        =   322
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL3 
         Alignment       =   2  'Center
         Caption         =   "3"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   2850
         TabIndex        =   321
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL2 
         Alignment       =   2  'Center
         Caption         =   "2"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   2670
         TabIndex        =   320
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Label lbl_RA_PassiveL1 
         Alignment       =   2  'Center
         Caption         =   "1"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   2490
         TabIndex        =   319
         Top             =   180
         Visible         =   0   'False
         Width           =   150
      End
      Begin VB.Image cmd_RA_PassiveInc 
         Height          =   180
         Index           =   0
         Left            =   4080
         Picture         =   "Workshop.frx":0F92
         Top             =   180
         Visible         =   0   'False
         Width           =   120
      End
      Begin VB.Image cmd_RA_PassiveDec 
         Height          =   180
         Index           =   0
         Left            =   2370
         Picture         =   "Workshop.frx":10F6
         Top             =   180
         Visible         =   0   'False
         Width           =   120
      End
      Begin VB.Label lbl_RA_PassiveName 
         Caption         =   "Augmented Constitution"
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   135
         TabIndex        =   318
         Top             =   180
         Visible         =   0   'False
         Width           =   2190
      End
      Begin VB.Label WorkshopLabel 
         Caption         =   "Passive"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   28
         Left            =   135
         TabIndex        =   317
         Top             =   0
         Width           =   750
      End
   End
   Begin VB.Timer TimerCheckUpdate 
      Interval        =   60000
      Left            =   17580
      Top             =   7140
   End
   Begin VB.Frame frame_SC_Skills 
      BorderStyle     =   0  'None
      Height          =   4005
      Left            =   11850
      TabIndex        =   525
      Top             =   300
      Width           =   4005
      Begin VB.ListBox list_Skills 
         Appearance      =   0  'Flat
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   1590
         ItemData        =   "Workshop.frx":125A
         Left            =   180
         List            =   "Workshop.frx":125C
         TabIndex        =   527
         TabStop         =   0   'False
         Top             =   300
         Width           =   3720
      End
      Begin VB.ListBox list_OtherBonus 
         Appearance      =   0  'Flat
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   1590
         ItemData        =   "Workshop.frx":125E
         Left            =   180
         List            =   "Workshop.frx":1260
         TabIndex        =   526
         TabStop         =   0   'False
         Top             =   2160
         Width           =   3720
      End
      Begin VB.Label WorkshopLabel 
         Caption         =   "Skills"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00400040&
         Height          =   210
         Index           =   19
         Left            =   180
         TabIndex        =   529
         Top             =   0
         Width           =   615
      End
      Begin VB.Label WorkshopLabel 
         Caption         =   "Other Bonuses"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00400040&
         Height          =   210
         Index           =   20
         Left            =   180
         TabIndex        =   528
         Top             =   1905
         Width           =   1275
      End
      Begin VB.Shape shape 
         BorderColor     =   &H8000000D&
         Height          =   3810
         Index           =   12
         Left            =   90
         Top             =   90
         Width           =   3885
      End
   End
   Begin VB.Frame frame_SC_Doll 
      BorderStyle     =   0  'None
      Height          =   3585
      Left            =   4320
      TabIndex        =   523
      Top             =   360
      Width           =   2865
      Begin VB.Image img_DollButton 
         Height          =   195
         Index           =   17
         Left            =   615
         Picture         =   "Workshop.frx":1262
         Stretch         =   -1  'True
         Tag             =   "Necklace"
         Top             =   75
         WhatsThisHelpID =   1
         Width           =   195
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   16
         Left            =   2040
         Picture         =   "Workshop.frx":15A6
         Tag             =   "Cloak"
         Top             =   75
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   15
         Left            =   2325
         Picture         =   "Workshop.frx":18EA
         Tag             =   "Head"
         Top             =   45
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   14
         Left            =   2325
         Picture         =   "Workshop.frx":252E
         Tag             =   "Hands"
         Top             =   645
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   13
         Left            =   2565
         Picture         =   "Workshop.frx":3172
         Tag             =   "Belt"
         Top             =   1290
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   12
         Left            =   2565
         Picture         =   "Workshop.frx":34B6
         Tag             =   "Right Ring"
         Top             =   1680
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   11
         Left            =   2565
         Picture         =   "Workshop.frx":37FA
         Tag             =   "Right Bracer"
         Top             =   2070
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   10
         Left            =   2325
         Picture         =   "Workshop.frx":3B3E
         Tag             =   "Feet"
         Top             =   2445
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   9
         Left            =   2205
         Picture         =   "Workshop.frx":4782
         Tag             =   "Ranged"
         Top             =   3060
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   8
         Left            =   1545
         Picture         =   "Workshop.frx":53C6
         Tag             =   "2 Handed"
         Top             =   3060
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   7
         Left            =   870
         Picture         =   "Workshop.frx":600A
         Stretch         =   -1  'True
         Tag             =   "Off Hand"
         Top             =   3060
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   6
         Left            =   210
         Picture         =   "Workshop.frx":6C4E
         Tag             =   "Main Hand"
         Top             =   3060
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   5
         Left            =   90
         Picture         =   "Workshop.frx":7892
         Tag             =   "Legs"
         Top             =   2445
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   4
         Left            =   90
         Picture         =   "Workshop.frx":84D6
         Tag             =   "Left Bracer"
         Top             =   2040
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   3
         Left            =   90
         Picture         =   "Workshop.frx":881A
         Tag             =   "Left Ring"
         Top             =   1680
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   1
         Left            =   90
         Picture         =   "Workshop.frx":8B5E
         Tag             =   "Arms"
         Top             =   645
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   2
         Left            =   90
         Picture         =   "Workshop.frx":97A2
         Tag             =   "Gem"
         Top             =   1290
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   0
         Left            =   90
         Picture         =   "Workshop.frx":9AE6
         Tag             =   "Torso"
         Top             =   45
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   18
         Left            =   915
         Picture         =   "Workshop.frx":A72A
         Tag             =   "Main Spare"
         Top             =   1800
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   21
         Left            =   1500
         Picture         =   "Workshop.frx":B36E
         Tag             =   "Ranged Spare"
         Top             =   2295
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   19
         Left            =   1500
         Picture         =   "Workshop.frx":BFB2
         Tag             =   "Off Hand Spare"
         Top             =   1800
         Width           =   480
      End
      Begin VB.Image img_DollButton 
         Height          =   480
         Index           =   20
         Left            =   915
         Picture         =   "Workshop.frx":CBF6
         Tag             =   "2 Handed Spare"
         Top             =   2295
         Width           =   480
      End
      Begin VB.Label lbl_LocationName 
         Alignment       =   2  'Center
         BackStyle       =   0  'Transparent
         Caption         =   "-"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   9
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00E0E0E0&
         Height          =   240
         Left            =   435
         TabIndex        =   524
         Top             =   765
         Width           =   2055
      End
      Begin VB.Image img_DollButton 
         Height          =   240
         Index           =   22
         Left            =   1305
         Picture         =   "Workshop.frx":D83A
         Tag             =   "Mythical"
         Top             =   45
         WhatsThisHelpID =   1
         Width           =   240
      End
      Begin VB.Image imgDoll 
         Height          =   3600
         Left            =   0
         Picture         =   "Workshop.frx":DB7E
         Top             =   0
         Width           =   2880
      End
   End
   Begin VB.Frame frame_SC_HitsPow 
      BorderStyle     =   0  'None
      Height          =   765
      Left            =   7290
      TabIndex        =   513
      Top             =   2520
      Width           =   2265
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "100"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   9
         Left            =   765
         TabIndex        =   522
         Top             =   510
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "400"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   8
         Left            =   765
         TabIndex        =   521
         Top             =   225
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Power"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   9
         Left            =   150
         TabIndex        =   520
         Top             =   510
         Width           =   540
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Hits"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   8
         Left            =   150
         TabIndex        =   519
         Top             =   225
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "200"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   8
         Left            =   1605
         TabIndex        =   518
         Top             =   225
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "100"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   9
         Left            =   1605
         TabIndex        =   517
         Top             =   510
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "200"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   8
         Left            =   1200
         TabIndex        =   516
         Top             =   225
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "100"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   9
         Left            =   1200
         TabIndex        =   515
         Top             =   510
         Width           =   330
      End
      Begin VB.Label WorkshopLabel 
         AutoSize        =   -1  'True
         Caption         =   "Hits and Power"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00400040&
         Height          =   165
         Index           =   22
         Left            =   45
         TabIndex        =   514
         Top             =   0
         Width           =   1275
      End
      Begin VB.Shape shape 
         BorderColor     =   &H8000000D&
         Height          =   645
         Index           =   8
         Left            =   0
         Top             =   90
         Width           =   2145
      End
   End
   Begin VB.Frame frame_SC_Attributes 
      BorderStyle     =   0  'None
      Height          =   2205
      Left            =   7290
      TabIndex        =   471
      Top             =   300
      Width           =   2265
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   7
         Left            =   960
         TabIndex        =   512
         Top             =   1935
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   6
         Left            =   960
         TabIndex        =   511
         Top             =   1695
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   5
         Left            =   960
         TabIndex        =   510
         Top             =   1455
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   960
         TabIndex        =   509
         Top             =   1215
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   960
         TabIndex        =   508
         Top             =   975
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   2
         Left            =   960
         TabIndex        =   507
         Top             =   735
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   1
         Left            =   960
         TabIndex        =   506
         Top             =   495
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   960
         TabIndex        =   505
         Top             =   255
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Str"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   90
         TabIndex        =   504
         Top             =   255
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Con"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   1
         Left            =   90
         TabIndex        =   503
         Top             =   495
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Dex"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   2
         Left            =   90
         TabIndex        =   502
         Top             =   735
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Qui"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   90
         TabIndex        =   501
         Top             =   975
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Int"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   90
         TabIndex        =   500
         Top             =   1215
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Emp"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   5
         Left            =   90
         TabIndex        =   499
         Top             =   1455
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Pie"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   6
         Left            =   90
         TabIndex        =   498
         Top             =   1695
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Cha"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   7
         Left            =   90
         TabIndex        =   497
         Top             =   1935
         Width           =   375
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   570
         TabIndex        =   496
         Top             =   255
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   1
         Left            =   570
         TabIndex        =   495
         Top             =   495
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   570
         TabIndex        =   494
         Top             =   975
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   2
         Left            =   570
         TabIndex        =   493
         Top             =   735
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   570
         TabIndex        =   492
         Top             =   1215
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   5
         Left            =   570
         TabIndex        =   491
         Top             =   1455
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   6
         Left            =   570
         TabIndex        =   490
         Top             =   1695
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "500"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   7
         Left            =   570
         TabIndex        =   489
         Top             =   1935
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   1350
         TabIndex        =   488
         Top             =   255
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   1
         Left            =   1350
         TabIndex        =   487
         Top             =   495
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   2
         Left            =   1350
         TabIndex        =   486
         Top             =   735
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   1350
         TabIndex        =   485
         Top             =   975
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   1350
         TabIndex        =   484
         Top             =   1215
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   5
         Left            =   1350
         TabIndex        =   483
         Top             =   1455
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   6
         Left            =   1350
         TabIndex        =   482
         Top             =   1695
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   7
         Left            =   1350
         TabIndex        =   481
         Top             =   1935
         Width           =   330
      End
      Begin VB.Label WorkshopLabel 
         AutoSize        =   -1  'True
         Caption         =   "Spellcrafted Attributes"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00400040&
         Height          =   195
         Index           =   23
         Left            =   45
         TabIndex        =   480
         Top             =   0
         Width           =   1905
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   1740
         TabIndex        =   479
         Top             =   255
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   1
         Left            =   1740
         TabIndex        =   478
         Top             =   495
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   2
         Left            =   1740
         TabIndex        =   477
         Top             =   735
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   1740
         TabIndex        =   476
         Top             =   975
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   1740
         TabIndex        =   475
         Top             =   1215
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   5
         Left            =   1740
         TabIndex        =   474
         Top             =   1455
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   6
         Left            =   1740
         TabIndex        =   473
         Top             =   1695
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_OverCap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   7
         Left            =   1740
         TabIndex        =   472
         Top             =   1935
         Width           =   330
      End
      Begin VB.Shape shape 
         BorderColor     =   &H8000000D&
         Height          =   2070
         Index           =   6
         Left            =   0
         Top             =   90
         Width           =   2145
      End
   End
   Begin VB.Frame frame_SC_Resists 
      BorderStyle     =   0  'None
      Height          =   2985
      Left            =   9570
      TabIndex        =   429
      Top             =   300
      Width           =   2265
      Begin VB.Label WorkshopLabel 
         Caption         =   "Spellcrafted Resists"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00400040&
         Height          =   210
         Index           =   21
         Left            =   180
         TabIndex        =   470
         Top             =   0
         Width           =   1695
      End
      Begin VB.Shape shape 
         BorderColor     =   &H8000000D&
         Height          =   2880
         Index           =   7
         Left            =   0
         Top             =   90
         Width           =   2205
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   18
         Left            =   1020
         TabIndex        =   469
         Top             =   2400
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   17
         Left            =   1020
         TabIndex        =   468
         Top             =   2130
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   16
         Left            =   1020
         TabIndex        =   467
         Top             =   1860
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   15
         Left            =   1020
         TabIndex        =   466
         Top             =   1590
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   14
         Left            =   1020
         TabIndex        =   465
         Top             =   1320
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   13
         Left            =   1020
         TabIndex        =   464
         Top             =   1050
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   12
         Left            =   1020
         TabIndex        =   463
         Top             =   780
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   11
         Left            =   1020
         TabIndex        =   462
         Top             =   510
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   10
         Left            =   1020
         TabIndex        =   461
         Top             =   240
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Matter"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   15
         Left            =   240
         TabIndex        =   460
         Top             =   1590
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Cold"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   14
         Left            =   240
         TabIndex        =   459
         Top             =   1320
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Heat"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   13
         Left            =   240
         TabIndex        =   458
         Top             =   1050
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Slash"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   11
         Left            =   240
         TabIndex        =   457
         Top             =   510
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Body"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   16
         Left            =   240
         TabIndex        =   456
         Top             =   1860
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Spirit"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   17
         Left            =   240
         TabIndex        =   455
         Top             =   2130
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Energy"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   18
         Left            =   240
         TabIndex        =   454
         Top             =   2400
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Thrust"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   12
         Left            =   240
         TabIndex        =   453
         Top             =   780
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Crush"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   10
         Left            =   240
         TabIndex        =   452
         Top             =   240
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   10
         Left            =   1410
         TabIndex        =   451
         Top             =   240
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   11
         Left            =   1410
         TabIndex        =   450
         Top             =   510
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   12
         Left            =   1410
         TabIndex        =   449
         Top             =   780
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   13
         Left            =   1410
         TabIndex        =   448
         Top             =   1050
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   14
         Left            =   1410
         TabIndex        =   447
         Top             =   1320
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   15
         Left            =   1410
         TabIndex        =   446
         Top             =   1590
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   16
         Left            =   1410
         TabIndex        =   445
         Top             =   1860
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   17
         Left            =   1410
         TabIndex        =   444
         Top             =   2130
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   18
         Left            =   1410
         TabIndex        =   443
         Top             =   2400
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Name 
         Caption         =   "Essence"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   19
         Left            =   240
         TabIndex        =   442
         Top             =   2670
         Width           =   690
      End
      Begin VB.Label lbl_Attribute_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   19
         Left            =   1020
         TabIndex        =   441
         Top             =   2670
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Usable 
         Alignment       =   2  'Center
         Caption         =   "0"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   19
         Left            =   1410
         TabIndex        =   440
         Top             =   2670
         Width           =   315
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   10
         Left            =   1800
         TabIndex        =   439
         Top             =   240
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   11
         Left            =   1800
         TabIndex        =   438
         Top             =   510
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   12
         Left            =   1800
         TabIndex        =   437
         Top             =   780
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   13
         Left            =   1800
         TabIndex        =   436
         Top             =   1050
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   14
         Left            =   1800
         TabIndex        =   435
         Top             =   1320
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   15
         Left            =   1800
         TabIndex        =   434
         Top             =   1590
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   16
         Left            =   1800
         TabIndex        =   433
         Top             =   1860
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   17
         Left            =   1800
         TabIndex        =   432
         Top             =   2130
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   18
         Left            =   1800
         TabIndex        =   431
         Top             =   2400
         Width           =   330
      End
      Begin VB.Label lbl_Attribute_Cap_Value 
         Alignment       =   2  'Center
         Caption         =   "50"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   19
         Left            =   1800
         TabIndex        =   430
         Top             =   2670
         Width           =   330
      End
   End
   Begin VB.Frame frameTool 
      BorderStyle     =   0  'None
      ForeColor       =   &H8000000D&
      Height          =   4260
      Index           =   0
      Left            =   11070
      TabIndex        =   376
      Top             =   9090
      Width           =   11640
      Begin VB.Frame frameTrainer 
         BorderStyle     =   0  'None
         Height          =   345
         Index           =   2
         Left            =   6210
         TabIndex        =   425
         Top             =   0
         Width           =   4545
         Begin VB.Label lbl_SpecPoints 
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   0
            Left            =   120
            TabIndex        =   428
            Top             =   90
            Width           =   3765
         End
         Begin VB.Label WorkshopLabel 
            Caption         =   "Auto-Train Levels:"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   24
            Left            =   60
            TabIndex        =   427
            Top             =   360
            Width           =   1575
         End
         Begin VB.Image cmd_AutoTrain 
            Height          =   180
            Index           =   0
            Left            =   1920
            Top             =   360
            Width           =   195
         End
         Begin VB.Image cmd_AutoTrain 
            Height          =   180
            Index           =   1
            Left            =   3420
            Top             =   360
            Width           =   195
         End
         Begin VB.Label lbl_SpecPoints 
            Alignment       =   2  'Center
            Caption         =   "None"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   1
            Left            =   2145
            TabIndex        =   426
            Tag             =   "1"
            Top             =   360
            Width           =   1245
         End
      End
      Begin VB.VScrollBar vscroll_SpellClass 
         Height          =   3795
         LargeChange     =   100
         Left            =   10620
         Max             =   1
         Min             =   540
         SmallChange     =   100
         TabIndex        =   422
         Top             =   420
         Value           =   1
         Visible         =   0   'False
         Width           =   180
      End
      Begin VB.Frame frameTrainer 
         BorderStyle     =   0  'None
         Height          =   3825
         Index           =   1
         Left            =   6180
         TabIndex        =   403
         Top             =   390
         Width           =   4425
         Begin VB.Label lbl_SpellClass 
            AutoSize        =   -1  'True
            Caption         =   "Bolt Damage"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   0
            Left            =   90
            TabIndex        =   420
            Top             =   30
            Visible         =   0   'False
            Width           =   1110
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   15
            Left            =   4140
            TabIndex        =   419
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   14
            Left            =   3868
            TabIndex        =   418
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   13
            Left            =   3596
            TabIndex        =   417
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   12
            Left            =   3324
            TabIndex        =   416
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   11
            Left            =   3052
            TabIndex        =   415
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   10
            Left            =   2780
            TabIndex        =   414
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   9
            Left            =   2508
            TabIndex        =   413
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   8
            Left            =   2236
            TabIndex        =   412
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   7
            Left            =   1964
            TabIndex        =   411
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   6
            Left            =   1692
            TabIndex        =   410
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   5
            Left            =   1420
            TabIndex        =   409
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   4
            Left            =   1148
            TabIndex        =   408
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   3
            Left            =   876
            TabIndex        =   407
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   2
            Left            =   604
            TabIndex        =   406
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   1
            Left            =   332
            TabIndex        =   405
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_SpellDetail 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   0
            Left            =   60
            TabIndex        =   404
            Top             =   240
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Shape shapeSpellClass 
            BorderColor     =   &H8000000D&
            Height          =   375
            Index           =   0
            Left            =   30
            Shape           =   4  'Rounded Rectangle
            Top             =   120
            Visible         =   0   'False
            Width           =   4365
         End
      End
      Begin VB.Frame frameTrainer 
         BorderStyle     =   0  'None
         Height          =   4245
         Index           =   0
         Left            =   0
         TabIndex        =   377
         Top             =   0
         Width           =   6135
         Begin VB.TextBox txt_SkillLevel 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H00E0E0E0&
            ForeColor       =   &H00800000&
            Height          =   270
            Index           =   0
            Left            =   2550
            MaxLength       =   2
            TabIndex        =   423
            Top             =   15
            Width           =   435
         End
         Begin VB.Timer timer_Skills 
            Enabled         =   0   'False
            Index           =   1
            Interval        =   100
            Left            =   840
            Top             =   720
         End
         Begin VB.Timer timer_Skills 
            Enabled         =   0   'False
            Index           =   0
            Interval        =   100
            Left            =   390
            Top             =   720
         End
         Begin VB.Shape WorkshopShape 
            Height          =   4305
            Index           =   0
            Left            =   -30
            Top             =   -30
            Width           =   6165
         End
         Begin VB.Shape shape_SpellBar 
            BackColor       =   &H8000000D&
            BackStyle       =   1  'Opaque
            Height          =   195
            Index           =   0
            Left            =   150
            Shape           =   4  'Rounded Rectangle
            Top             =   630
            Visible         =   0   'False
            Width           =   5940
         End
         Begin VB.Label lbl_SkillSpecial 
            AutoSize        =   -1  'True
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   0
            Left            =   4875
            TabIndex        =   421
            Top             =   30
            Visible         =   0   'False
            Width           =   60
         End
         Begin VB.Label lbl_SpecSpent 
            AutoSize        =   -1  'True
            Caption         =   "Spent: 0"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   0
            Left            =   3345
            TabIndex        =   402
            Top             =   30
            Visible         =   0   'False
            Width           =   735
         End
         Begin VB.Label lbl_SkillLevel 
            Alignment       =   2  'Center
            Caption         =   "1"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H8000000D&
            Height          =   180
            Index           =   0
            Left            =   2550
            TabIndex        =   401
            Top             =   30
            Visible         =   0   'False
            Width           =   450
         End
         Begin VB.Image cmd_addSkillLevel 
            Height          =   180
            Index           =   0
            Left            =   2985
            Top             =   90
            Visible         =   0   'False
            Width           =   195
         End
         Begin VB.Image cmd_subSkillLevel 
            Height          =   180
            Index           =   0
            Left            =   2370
            Top             =   90
            Visible         =   0   'False
            Width           =   195
         End
         Begin VB.Label lbl_SkillName 
            AutoSize        =   -1  'True
            Caption         =   "Large Weaponry"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   195
            Index           =   0
            Left            =   90
            TabIndex        =   400
            Top             =   60
            Visible         =   0   'False
            Width           =   1410
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   20
            Left            =   5505
            TabIndex        =   399
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   21
            Left            =   5790
            TabIndex        =   398
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   19
            Left            =   5235
            TabIndex        =   397
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   17
            Left            =   4695
            TabIndex        =   396
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   18
            Left            =   4965
            TabIndex        =   395
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   16
            Left            =   4425
            TabIndex        =   394
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   15
            Left            =   4155
            TabIndex        =   393
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   13
            Left            =   3615
            TabIndex        =   392
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   11
            Left            =   3075
            TabIndex        =   391
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   14
            Left            =   3885
            TabIndex        =   390
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   12
            Left            =   3345
            TabIndex        =   389
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   10
            Left            =   2805
            TabIndex        =   388
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   9
            Left            =   2535
            TabIndex        =   387
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   8
            Left            =   2265
            TabIndex        =   386
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   7
            Left            =   1980
            TabIndex        =   385
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   6
            Left            =   1710
            TabIndex        =   384
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   5
            Left            =   1440
            TabIndex        =   383
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   4
            Left            =   1170
            TabIndex        =   382
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   3
            Left            =   900
            TabIndex        =   381
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   2
            Left            =   630
            TabIndex        =   380
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   1
            Left            =   360
            TabIndex        =   379
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Label lbl_Skill 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            Caption         =   "50"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   225
            Index           =   0
            Left            =   90
            TabIndex        =   378
            Top             =   300
            Visible         =   0   'False
            Width           =   240
         End
         Begin VB.Shape shape_Skill 
            BorderColor     =   &H8000000D&
            Height          =   375
            Index           =   0
            Left            =   30
            Shape           =   4  'Rounded Rectangle
            Top             =   180
            Visible         =   0   'False
            Width           =   6045
         End
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   240
      Index           =   0
      Left            =   4425
      TabIndex        =   220
      Top             =   4065
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   0
         Left            =   1680
         TabIndex        =   12
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   0
         Left            =   0
         TabIndex        =   13
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   1
      Left            =   19845
      TabIndex        =   371
      Top             =   210
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   1
         Left            =   0
         TabIndex        =   373
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   1
         Left            =   1680
         TabIndex        =   372
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   18
      Left            =   19845
      TabIndex        =   368
      Top             =   3450
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   18
         Left            =   0
         TabIndex        =   370
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   18
         Left            =   1680
         TabIndex        =   369
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   21
      Left            =   19845
      TabIndex        =   365
      Top             =   4530
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   21
         Left            =   0
         TabIndex        =   367
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   21
         Left            =   1680
         TabIndex        =   366
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   10
      Left            =   19845
      TabIndex        =   362
      Top             =   2370
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   10
         Left            =   0
         TabIndex        =   364
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   10
         Left            =   1680
         TabIndex        =   363
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   9
      Left            =   19845
      TabIndex        =   359
      Top             =   2010
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   9
         Left            =   0
         TabIndex        =   361
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   9
         Left            =   1680
         TabIndex        =   360
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   8
      Left            =   19845
      TabIndex        =   356
      Top             =   1650
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   8
         Left            =   0
         TabIndex        =   358
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   8
         Left            =   1680
         TabIndex        =   357
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   7
      Left            =   19845
      TabIndex        =   353
      Top             =   1290
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   7
         Left            =   0
         TabIndex        =   355
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   7
         Left            =   1680
         TabIndex        =   354
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   6
      Left            =   19845
      TabIndex        =   350
      Top             =   930
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   6
         Left            =   0
         TabIndex        =   352
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   6
         Left            =   1680
         TabIndex        =   351
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   5
      Left            =   19845
      TabIndex        =   347
      Top             =   570
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   5
         Left            =   0
         TabIndex        =   349
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   5
         Left            =   1680
         TabIndex        =   348
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   19
      Left            =   19845
      TabIndex        =   344
      Top             =   3810
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   19
         Left            =   0
         TabIndex        =   346
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   19
         Left            =   1680
         TabIndex        =   345
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   20
      Left            =   19845
      TabIndex        =   341
      Top             =   4170
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   20
         Left            =   0
         TabIndex        =   343
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   20
         Left            =   1680
         TabIndex        =   342
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   14
      Left            =   19845
      TabIndex        =   338
      Top             =   2730
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   14
         Left            =   0
         TabIndex        =   340
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   14
         Left            =   1680
         TabIndex        =   339
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frame_DropCraft 
      BorderStyle     =   0  'None
      Height          =   270
      Index           =   15
      Left            =   19845
      TabIndex        =   335
      Top             =   3090
      Visible         =   0   'False
      Width           =   2490
      Begin VB.OptionButton opt_PlayerCraft 
         Caption         =   "Player Crafted"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   15
         Left            =   0
         TabIndex        =   337
         TabStop         =   0   'False
         Tag             =   "True"
         Top             =   0
         Value           =   -1  'True
         Width           =   1575
      End
      Begin VB.OptionButton opt_Drop 
         Caption         =   "Drop"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   255
         Index           =   15
         Left            =   1680
         TabIndex        =   336
         TabStop         =   0   'False
         Tag             =   "False"
         Top             =   0
         Width           =   825
      End
   End
   Begin VB.Frame frameTool 
      BorderStyle     =   0  'None
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   4260
      Index           =   5
      Left            =   90
      TabIndex        =   75
      Top             =   9090
      Visible         =   0   'False
      Width           =   11640
      Begin VB.CommandButton cmdCopyRingBracer 
         Caption         =   "Copy To"
         Height          =   315
         Left            =   6825
         TabIndex        =   374
         Top             =   3390
         Visible         =   0   'False
         Width           =   2175
      End
      Begin VB.ComboBox cmb_GemSelect_DP9 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   83
         TabStop         =   0   'False
         Top             =   2873
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP8 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   84
         TabStop         =   0   'False
         Top             =   2557
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP3 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   88
         TabStop         =   0   'False
         Top             =   977
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP2 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   77
         TabStop         =   0   'False
         Top             =   661
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP1 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   76
         TabStop         =   0   'False
         Top             =   345
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.Frame frame_ItemRealm 
         BorderStyle     =   0  'None
         Height          =   465
         Left            =   6525
         TabIndex        =   215
         Top             =   495
         Width           =   3165
         Begin VB.OptionButton opt_Alb 
            Caption         =   "Alb"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H000000C0&
            Height          =   285
            Index           =   0
            Left            =   90
            TabIndex        =   219
            TabStop         =   0   'False
            Top             =   90
            Width           =   600
         End
         Begin VB.OptionButton opt_Hib 
            Caption         =   "Hib"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00008000&
            Height          =   285
            Index           =   0
            Left            =   900
            TabIndex        =   218
            TabStop         =   0   'False
            Top             =   90
            Width           =   600
         End
         Begin VB.OptionButton opt_Mid 
            Caption         =   "Mid"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800000&
            Height          =   285
            Index           =   0
            Left            =   1710
            TabIndex        =   217
            TabStop         =   0   'False
            Top             =   90
            Width           =   600
         End
         Begin VB.OptionButton opt_All 
            Caption         =   "All"
            BeginProperty Font 
               Name            =   "Verdana"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800080&
            Height          =   285
            Index           =   0
            Left            =   2520
            TabIndex        =   216
            TabStop         =   0   'False
            Top             =   90
            Width           =   600
         End
      End
      Begin VB.ComboBox cmb_GemEffect_DP1 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   109
         TabStop         =   0   'False
         Top             =   345
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.TextBox txt_ItemSPD_DP 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   7185
         MaxLength       =   4
         TabIndex        =   118
         TabStop         =   0   'False
         Top             =   2250
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.TextBox txt_AFDPS_DP 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   7185
         MaxLength       =   4
         TabIndex        =   117
         TabStop         =   0   'False
         Top             =   1860
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.TextBox txt_ItemName_DP 
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   6450
         MaxLength       =   50
         TabIndex        =   116
         TabStop         =   0   'False
         Top             =   1380
         Visible         =   0   'False
         Width           =   3720
      End
      Begin VB.CommandButton cmd_ClearItem_DP 
         Caption         =   "&Clear"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   9015
         TabIndex        =   115
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.CommandButton cmd_LoadItem_DP 
         Caption         =   "&Load"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   7920
         TabIndex        =   114
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.CommandButton cmd_SaveItem_DP 
         Caption         =   "&Save"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   6825
         TabIndex        =   113
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.TextBox txt_ItemLevel_DP 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   8610
         MaxLength       =   4
         TabIndex        =   112
         TabStop         =   0   'False
         Top             =   1860
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.TextBox txt_ItemQuality 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   8610
         MaxLength       =   4
         TabIndex        =   111
         TabStop         =   0   'False
         Text            =   "100"
         Top             =   2250
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.CheckBox chk_Equip_DP 
         Appearance      =   0  'Flat
         Caption         =   "Equipped"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   9585
         TabIndex        =   110
         TabStop         =   0   'False
         Top             =   135
         Visible         =   0   'False
         Width           =   1080
      End
      Begin VB.TextBox txt_GemAmount_DP4 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   100
         TabStop         =   0   'False
         Top             =   1293
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP3 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   99
         TabStop         =   0   'False
         Top             =   977
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP5 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   98
         TabStop         =   0   'False
         Top             =   1609
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP6 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   97
         TabStop         =   0   'False
         Top             =   1925
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP8 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   96
         TabStop         =   0   'False
         Top             =   2557
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP7 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   95
         TabStop         =   0   'False
         Top             =   2241
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP10 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   94
         TabStop         =   0   'False
         Top             =   3189
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP9 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   93
         TabStop         =   0   'False
         Top             =   2873
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP11 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   92
         TabStop         =   0   'False
         Top             =   3505
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP12 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   91
         TabStop         =   0   'False
         Top             =   3825
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP2 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   79
         TabStop         =   0   'False
         Top             =   661
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.TextBox txt_GemAmount_DP1 
         Alignment       =   2  'Center
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5715
         MaxLength       =   3
         TabIndex        =   78
         TabStop         =   0   'False
         Top             =   345
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.ComboBox cmb_GemEffect_DP2 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   108
         TabStop         =   0   'False
         Top             =   661
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP3 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   107
         TabStop         =   0   'False
         Top             =   977
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP4 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   106
         TabStop         =   0   'False
         Top             =   1293
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP5 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   212
         TabStop         =   0   'False
         Top             =   1609
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP6 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   105
         TabStop         =   0   'False
         Top             =   1925
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP7 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   104
         TabStop         =   0   'False
         Top             =   2241
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP8 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   103
         TabStop         =   0   'False
         Top             =   2557
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP9 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   102
         TabStop         =   0   'False
         Top             =   2873
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP10 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   101
         TabStop         =   0   'False
         Top             =   3189
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP11 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   89
         TabStop         =   0   'False
         Top             =   3505
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemEffect_DP12 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2835
         Style           =   2  'Dropdown List
         TabIndex        =   90
         TabStop         =   0   'False
         Top             =   3825
         Visible         =   0   'False
         Width           =   2835
      End
      Begin VB.ComboBox cmb_GemSelect_DP4 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   87
         TabStop         =   0   'False
         Top             =   1293
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP5 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   213
         TabStop         =   0   'False
         Top             =   1609
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP6 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   86
         TabStop         =   0   'False
         Top             =   1925
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP7 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   85
         TabStop         =   0   'False
         Top             =   2241
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP10 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   82
         TabStop         =   0   'False
         Top             =   3189
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP11 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   80
         TabStop         =   0   'False
         Top             =   3505
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.ComboBox cmb_GemSelect_DP12 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   81
         TabStop         =   0   'False
         Top             =   3825
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.Label lbl_ItemStatusDP 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   6930
         TabIndex        =   424
         Top             =   3030
         Width           =   1965
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Item's Realm"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   20
         Left            =   6570
         TabIndex        =   211
         Top             =   135
         Width           =   1140
      End
      Begin VB.Label DP_Labels 
         Alignment       =   2  'Center
         BackStyle       =   0  'Transparent
         Caption         =   "Type"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   12
         Left            =   825
         TabIndex        =   210
         Top             =   135
         Visible         =   0   'False
         Width           =   1935
      End
      Begin VB.Label DP_Labels 
         Alignment       =   2  'Center
         BackStyle       =   0  'Transparent
         Caption         =   "Amount"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   13
         Left            =   5685
         TabIndex        =   209
         Top             =   135
         Visible         =   0   'False
         Width           =   645
      End
      Begin VB.Shape shape 
         BorderColor     =   &H8000000D&
         Height          =   645
         Index           =   10
         Left            =   6480
         Top             =   405
         Width           =   3255
      End
      Begin VB.Label DP_Labels 
         Alignment       =   1  'Right Justify
         BackStyle       =   0  'Transparent
         Caption         =   "Quality"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   15
         Left            =   7875
         TabIndex        =   136
         Top             =   2265
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         Alignment       =   1  'Right Justify
         BackStyle       =   0  'Transparent
         Caption         =   "Level"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   16
         Left            =   7875
         TabIndex        =   135
         Top             =   1860
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         Alignment       =   1  'Right Justify
         BackStyle       =   0  'Transparent
         Caption         =   "Speed"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   19
         Left            =   6405
         TabIndex        =   134
         Top             =   2265
         Visible         =   0   'False
         Width           =   705
      End
      Begin VB.Label DP_Labels 
         Alignment       =   1  'Right Justify
         BackStyle       =   0  'Transparent
         Caption         =   "AF/DPS"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   18
         Left            =   6405
         TabIndex        =   133
         Top             =   1860
         Visible         =   0   'False
         Width           =   705
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Item Name:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   17
         Left            =   6450
         TabIndex        =   132
         Top             =   1170
         Visible         =   0   'False
         Width           =   900
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 11:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   10
         Left            =   75
         TabIndex        =   131
         Top             =   3510
         Visible         =   0   'False
         Width           =   705
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 12:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   11
         Left            =   75
         TabIndex        =   130
         Top             =   3825
         Visible         =   0   'False
         Width           =   705
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 10:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   9
         Left            =   75
         TabIndex        =   129
         Top             =   3195
         Visible         =   0   'False
         Width           =   705
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 9:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   8
         Left            =   75
         TabIndex        =   128
         Top             =   2880
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 8:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   7
         Left            =   75
         TabIndex        =   127
         Top             =   2565
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 7:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   6
         Left            =   75
         TabIndex        =   126
         Top             =   2250
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 6:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   5
         Left            =   75
         TabIndex        =   125
         Top             =   1935
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 5:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   4
         Left            =   75
         TabIndex        =   124
         Top             =   1620
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 4:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   3
         Left            =   75
         TabIndex        =   123
         Top             =   1305
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 3:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   2
         Left            =   75
         TabIndex        =   122
         Top             =   990
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 2:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   1
         Left            =   75
         TabIndex        =   121
         Top             =   675
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Label DP_Labels 
         BackStyle       =   0  'Transparent
         Caption         =   "Slot 1:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   75
         TabIndex        =   120
         Top             =   345
         Visible         =   0   'False
         Width           =   660
      End
      Begin VB.Image cmd_ItemQuality_UP 
         Height          =   165
         Index           =   0
         Left            =   9195
         Top             =   2250
         Visible         =   0   'False
         Width           =   390
      End
      Begin VB.Image cmd_ItemQuality_DOWN 
         Height          =   165
         Index           =   0
         Left            =   9195
         Top             =   2415
         Visible         =   0   'False
         Width           =   390
      End
      Begin VB.Label lbl_ItemUtilityDP_Value 
         BackStyle       =   0  'Transparent
         Caption         =   "Utility:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   240
         Index           =   0
         Left            =   6450
         TabIndex        =   119
         Top             =   2655
         Visible         =   0   'False
         Width           =   2895
      End
      Begin VB.Label DP_Labels 
         Alignment       =   2  'Center
         BackStyle       =   0  'Transparent
         Caption         =   "Effect"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   14
         Left            =   2835
         TabIndex        =   208
         Top             =   135
         Visible         =   0   'False
         Width           =   2565
      End
   End
   Begin VB.Frame frameTool 
      BackColor       =   &H00404040&
      BorderStyle     =   0  'None
      Height          =   4260
      Index           =   3
      Left            =   22740
      TabIndex        =   228
      Top             =   90
      Width           =   10800
   End
   Begin VB.Frame frameTool 
      BorderStyle     =   0  'None
      Height          =   4260
      Index           =   2
      Left            =   21900
      TabIndex        =   227
      Top             =   8325
      Width           =   11640
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Warlord"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   7
         Left            =   8205
         TabIndex        =   236
         Top             =   2130
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Warguard"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   79
            Left            =   135
            TabIndex        =   316
            Tag             =   "Point blank area effect shout that reduces damage of melee attacks on nearby allies by 25%. "
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Leadership"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   78
            Left            =   135
            TabIndex        =   315
            Tag             =   $"Workshop.frx":2F7C2
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Defending Martyr"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   77
            Left            =   135
            TabIndex        =   314
            Tag             =   "Point blank area effect heal that costs the user 90% of their hit points, but heals all allies for 1000 hit points. "
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Cleansing Aura"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   76
            Left            =   135
            TabIndex        =   313
            Tag             =   $"Workshop.frx":2F89B
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Energizing Aura"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   75
            Left            =   135
            TabIndex        =   312
            Tag             =   $"Workshop.frx":2F965
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Guided Strike"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   74
            Left            =   135
            TabIndex        =   311
            Tag             =   $"Workshop.frx":2F9EC
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Resillient Will"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   73
            Left            =   135
            TabIndex        =   310
            Tag             =   $"Workshop.frx":2FA8F
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Cowering Bellow"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   72
            Left            =   135
            TabIndex        =   309
            Tag             =   "Point blank area effect shout that sends realm enemy monsters running."
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Bolstering Battlecry"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   71
            Left            =   135
            TabIndex        =   308
            Tag             =   "Point blank area effect shout that heals allies' health, power and fatigue by 10% (Maximum number of targets effected is 16.) "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Siege Master"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   70
            Left            =   135
            TabIndex        =   307
            Tag             =   "Reduces all siege times (load/aim/fire) by 30%"
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Stormlord"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   6
         Left            =   5470
         TabIndex        =   235
         Top             =   2130
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Arcing Power"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   69
            Left            =   135
            TabIndex        =   306
            Tag             =   $"Workshop.frx":2FB2E
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Energy Tempest"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   68
            Left            =   135
            TabIndex        =   305
            Tag             =   "Storm that wracks the enemy with essence damage. "
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Sense Dulling Cloud"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   67
            Left            =   135
            TabIndex        =   304
            Tag             =   "Storm that mentally weakens enemies while they are inside it. The effect fades quickly once the enemy leaves the effect. "
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Choking Vapors"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   66
            Left            =   135
            TabIndex        =   303
            Tag             =   $"Workshop.frx":2FBBC
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Focusing Winds"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   65
            Left            =   135
            TabIndex        =   302
            Tag             =   "Cast on a friendly storm, focusing on it to hold it in place. "
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Mental Siphon"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   64
            Left            =   135
            TabIndex        =   301
            Tag             =   "Storm that drains power from enemies who stand inside it."
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Inebriating Fumes"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   63
            Left            =   135
            TabIndex        =   300
            Tag             =   "Storm that reduces coordination of enemies while they are inside it. The effect fades quickly once the enemy leaves the effect. "
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Enervating Gas"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   62
            Left            =   135
            TabIndex        =   299
            Tag             =   "Storm that drains fatigue from enemies who stand inside it. "
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Vacuum Vortex"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   61
            Left            =   135
            TabIndex        =   298
            Tag             =   "Ground targeted effect that pushes any storms near the ground target directly away from that point. 350 radius. "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Dazzling Array"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   60
            Left            =   135
            TabIndex        =   297
            Tag             =   "Beneficial storm that makes it harder for enemies to hit allies within it. "
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Spymaster"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   5
         Left            =   2735
         TabIndex        =   234
         Top             =   2130
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Blanket of Camouflage"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   59
            Left            =   135
            TabIndex        =   296
            Tag             =   "Conceal your group in stealth. Moving, casting or chanting will break the effect for non-stealthers. "
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Essence Flare"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   58
            Left            =   135
            TabIndex        =   295
            Tag             =   "Summons PBAE Mez poison. "
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Siege Wrecker"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   57
            Left            =   135
            TabIndex        =   294
            Tag             =   $"Workshop.frx":2FC47
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Lookout"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   56
            Left            =   135
            TabIndex        =   293
            Tag             =   $"Workshop.frx":2FCDC
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Poisonspike"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   55
            Left            =   135
            TabIndex        =   292
            Tag             =   "Rune that poisons enemies when it detonates. Breaks stealth when cast. "
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Tanglesnare"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   54
            Left            =   135
            TabIndex        =   291
            Tag             =   "Rune that snares enemies when it detonates. Breaks stealth when cast. "
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Sabotage"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   53
            Left            =   135
            TabIndex        =   290
            Tag             =   "Short range ability that destroys a targeted ward. "
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Enduring Poison"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   52
            Left            =   135
            TabIndex        =   289
            Tag             =   "15% chance poison won't be removed from weapon on a resist. "
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Decoy"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   51
            Left            =   135
            TabIndex        =   288
            Tag             =   "Summon random epic dressed realmmate with one hit point and no offense to distract opponents. "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Pickpocket"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   50
            Left            =   135
            TabIndex        =   287
            Tag             =   "Bonus to PvE Coin. "
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Sojourner"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   4
         Left            =   0
         TabIndex        =   233
         Top             =   2130
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Mass Gateway"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   49
            Left            =   135
            TabIndex        =   286
            Tag             =   "Teleport your group to your world bindpoint. If any group member is combat, this spell will fail. 1000 range. "
            Top             =   1845
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Phase Shift"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   48
            Left            =   135
            TabIndex        =   285
            Tag             =   "Self buff that provides nigh-invulnerability to spells and melee for a short duration. "
            Top             =   1665
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Forceful Zephyr"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   47
            Left            =   135
            TabIndex        =   284
            Tag             =   $"Workshop.frx":2FDBA
            Top             =   1485
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Resistance of the Ancients"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   46
            Left            =   135
            TabIndex        =   283
            Tag             =   "Blesses the group with resistance to Essence magic. "
            Top             =   1305
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Gateway"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   45
            Left            =   135
            TabIndex        =   282
            Tag             =   "Teleport to your world bindpoint. This spell will fail if you are in combat. "
            Top             =   1125
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Ancient Transmuter"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   44
            Left            =   135
            TabIndex        =   281
            Tag             =   "Summon a vendor to sell to and buy basic supplies."
            Top             =   945
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Unmake Crystalseed"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   43
            Left            =   135
            TabIndex        =   280
            Tag             =   "Destroys the targeted rune, and any runes immediately nearby."
            Top             =   765
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Reveal Crystalseed"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   42
            Left            =   135
            TabIndex        =   279
            Tag             =   "Reveals all enemy runes around your ground target. "
            Top             =   585
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Unending Breath"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   41
            Left            =   135
            TabIndex        =   278
            Tag             =   "Bless your group with the ability to breath underwater."
            Top             =   405
            Width           =   2235
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Unburdened Warrior"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   40
            Left            =   135
            TabIndex        =   277
            Tag             =   "25% bonus to Encumbrance. "
            Top             =   225
            Width           =   2235
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Perfecter"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   3
         Left            =   8205
         TabIndex        =   232
         Top             =   -45
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Rampant Healing"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   39
            Left            =   135
            TabIndex        =   276
            Tag             =   "Self buff that gives the next group heal cast a radius. "
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Dissonating Ward"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   38
            Left            =   135
            TabIndex        =   275
            Tag             =   "Ward that drains power from enemies who stand within its radius."
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Restore the Soul"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   37
            Left            =   135
            TabIndex        =   274
            Tag             =   "Cure resurrection illness. "
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Leaping Health"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   36
            Left            =   135
            TabIndex        =   273
            Tag             =   "Self buff that adds a radius to the next single target heal. "
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Determination Field"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   35
            Left            =   135
            TabIndex        =   272
            Tag             =   "Ward that helps reduce the effect of crowd control spells on allies within it. "
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Font of Power"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   34
            Left            =   135
            TabIndex        =   271
            Tag             =   "Ward that regenerates power for up to 40 allies who stand inside it. "
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Greatness"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   33
            Left            =   135
            TabIndex        =   270
            Tag             =   "Increases concentration pool by 20% "
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Sphere Rejuvenation"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   32
            Left            =   135
            TabIndex        =   269
            Tag             =   "Ward that regenerates health for up to 40 allies who rest within it. "
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Purify Vision"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   31
            Left            =   135
            TabIndex        =   268
            Tag             =   "Dispel nearsight."
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Purging Wave"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   30
            Left            =   135
            TabIndex        =   267
            Tag             =   "Cure all members of your group who are diseased. 2000 range. "
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Convoker"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   2
         Left            =   5470
         TabIndex        =   231
         Top             =   -45
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Crystal Titan"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   29
            Left            =   135
            TabIndex        =   266
            Tag             =   "Ground targeted pet summon that has to grow to full strength before pummeling enemies. Hits for 1200 per swing. "
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Summoning Mastery"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   28
            Left            =   135
            TabIndex        =   265
            Tag             =   $"Workshop.frx":2FE9A
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Brittle Guard"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   27
            Left            =   135
            TabIndex        =   264
            Tag             =   "Summon a guardian who will intercept incoming melee attacks for you. Only one brittle guard can be summoned at a time. "
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Dissonance Trap"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   26
            Left            =   135
            TabIndex        =   263
            Tag             =   "Rune that does 40% essence damage to the enemy when it detonates. "
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Battlewarder"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   25
            Left            =   135
            TabIndex        =   262
            Tag             =   $"Workshop.frx":2FF21
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Summon Warcrystal"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   24
            Left            =   135
            TabIndex        =   261
            Tag             =   "Summon a powerful piece of siege ammunition."
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Speedwarp"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   23
            Left            =   135
            TabIndex        =   260
            Tag             =   "Ward that negates the effects of speed boosts for enemies who pass through it. "
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Power Trap"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   22
            Left            =   135
            TabIndex        =   259
            Tag             =   "Rune that drains power from enemies when it detonates (works only on enemies that have a power pool). "
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Prescience Node"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   21
            Left            =   135
            TabIndex        =   258
            Tag             =   "Ground targeted ward (1000 radius) that can make enemy stealthers visible, without removing their stealth. "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Summon Wood"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   20
            Left            =   135
            TabIndex        =   257
            Tag             =   "A Spell that summons 100 random material boards of wood usable for upgrading and repairing keep doors and walls. "
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Battlemaster"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   1
         Left            =   2735
         TabIndex        =   230
         Top             =   -45
         Width           =   2535
         Begin VB.Label lbl_ML 
            Caption         =   "10: Essence Shatter"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   19
            Left            =   135
            TabIndex        =   256
            Tag             =   $"Workshop.frx":2FFD1
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Essence Dampen"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   18
            Left            =   135
            TabIndex        =   255
            Tag             =   "Style that procs a point blank area of effect that reduces the agility of enemy targets by 15%. "
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Bodyguard"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   17
            Left            =   135
            TabIndex        =   254
            Tag             =   $"Workshop.frx":3005D
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Essence Sear"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   16
            Left            =   135
            TabIndex        =   253
            Tag             =   "Style that procs a point blank area of effect resistance debuff of 15% to Essence magic. Chains off Essence Flames "
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Throw Weapon"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   15
            Left            =   135
            TabIndex        =   252
            Tag             =   "A ranged attack using melee damage formulas; cannot attack with normal melee for 10 seconds afterwards. "
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Essence Flames"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   14
            Left            =   135
            TabIndex        =   251
            Tag             =   "Style that procs a buff, giving the subject a 10% chance to gain bonus essence damage when attacking in melee combat. "
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Grapple"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   13
            Left            =   135
            TabIndex        =   250
            Tag             =   $"Workshop.frx":30128
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Power Leak"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   12
            Left            =   135
            TabIndex        =   249
            Tag             =   $"Workshop.frx":30206
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Faultfinder"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   11
            Left            =   135
            TabIndex        =   248
            Tag             =   "Style that gives a 20% damage hit bonus against objects such as siege equipment. "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "1: Sapping Strike"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   10
            Left            =   135
            TabIndex        =   247
            Tag             =   $"Workshop.frx":302A3
            Top             =   225
            Width           =   2205
         End
      End
      Begin VB.Frame frameMLSpec 
         Appearance      =   0  'Flat
         Caption         =   "Banelord"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   2130
         Index           =   0
         Left            =   0
         TabIndex        =   229
         Top             =   -45
         Width           =   2535
         Begin VB.Label lbl_ML 
            Height          =   180
            Index           =   9
            Left            =   135
            TabIndex        =   246
            Top             =   1845
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "10: Banespike"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   8
            Left            =   135
            TabIndex        =   245
            Tag             =   "Point blank area effect shout that boosts the damage of attacks from nearby allies by 15%. "
            Top             =   1665
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "9: Demoralization"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   7
            Left            =   135
            TabIndex        =   244
            Tag             =   $"Workshop.frx":30339
            Top             =   1485
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "8: Agony Transmission"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   6
            Left            =   135
            TabIndex        =   243
            Tag             =   $"Workshop.frx":303E7
            Top             =   1305
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "7: Chaotic Power"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   5
            Left            =   135
            TabIndex        =   242
            Tag             =   $"Workshop.frx":304A6
            Top             =   1125
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "6: Snaring Tendrils of Power"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   4
            Left            =   135
            TabIndex        =   241
            Tag             =   $"Workshop.frx":30539
            Top             =   945
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "5: Tactical Insight"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   3
            Left            =   135
            TabIndex        =   240
            Tag             =   $"Workshop.frx":305DC
            Top             =   765
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "4: Inexorable Defeat"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   2
            Left            =   135
            TabIndex        =   239
            Tag             =   $"Workshop.frx":3066D
            Top             =   585
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "3: Oppression"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   1
            Left            =   135
            TabIndex        =   238
            Tag             =   "Point blank area effect shout that decreases enemies' maximum encumbrance by 75%.(Maximum number of enemies affected is 16.) "
            Top             =   405
            Width           =   2205
         End
         Begin VB.Label lbl_ML 
            Caption         =   "2: Primal Agony"
            ForeColor       =   &H00800000&
            Height          =   180
            Index           =   0
            Left            =   135
            TabIndex        =   237
            Tag             =   $"Workshop.frx":306F4
            Top             =   225
            Width           =   2205
         End
      End
   End
   Begin VB.Frame frameGender 
      BorderStyle     =   0  'None
      Height          =   240
      Left            =   1140
      TabIndex        =   214
      Top             =   990
      Width           =   1635
      Begin VB.OptionButton opt_Gender 
         Caption         =   "Male"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   240
         Index           =   0
         Left            =   45
         TabIndex        =   2
         Top             =   0
         Width           =   705
      End
      Begin VB.OptionButton opt_Gender 
         Caption         =   "Female"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   240
         Index           =   1
         Left            =   765
         TabIndex        =   3
         Top             =   0
         Width           =   930
      End
   End
   Begin VB.Frame frameTool 
      BorderStyle     =   0  'None
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   4260
      Index           =   4
      Left            =   4260
      TabIndex        =   14
      Top             =   4530
      Visible         =   0   'False
      Width           =   11640
      Begin VB.CheckBox chk_Equip_SC 
         Appearance      =   0  'Flat
         Caption         =   "Equipped"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   9585
         TabIndex        =   375
         TabStop         =   0   'False
         Top             =   135
         Visible         =   0   'False
         Width           =   1080
      End
      Begin VB.ComboBox cmb_TinctureSelectSC 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":30795
         Left            =   825
         List            =   "Workshop.frx":30797
         Style           =   2  'Dropdown List
         TabIndex        =   223
         TabStop         =   0   'False
         Top             =   3180
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.ComboBox cmb_TinctureEffectSC 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":30799
         Left            =   2025
         List            =   "Workshop.frx":3079B
         Style           =   2  'Dropdown List
         TabIndex        =   222
         TabStop         =   0   'False
         Top             =   3180
         Visible         =   0   'False
         Width           =   4200
      End
      Begin VB.ComboBox cmb_GemAmountSC4 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   3930
         Style           =   2  'Dropdown List
         TabIndex        =   28
         TabStop         =   0   'False
         Top             =   2070
         Visible         =   0   'False
         Width           =   765
      End
      Begin VB.ComboBox cmb_GemAmountSC3 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   3930
         Style           =   2  'Dropdown List
         TabIndex        =   33
         TabStop         =   0   'False
         Top             =   1770
         Visible         =   0   'False
         Width           =   765
      End
      Begin VB.ComboBox cmb_GemSelectSC4 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   25
         TabStop         =   0   'False
         Top             =   2070
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.ComboBox cmb_GemSelectSC3 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   34
         TabStop         =   0   'False
         Top             =   1770
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.Frame frame_ConfigItemSCA 
         BorderStyle     =   0  'None
         Caption         =   "Configure Item Level"
         ForeColor       =   &H00800000&
         Height          =   1890
         Left            =   7455
         TabIndex        =   35
         Top             =   525
         Visible         =   0   'False
         Width           =   3480
         Begin VB.OptionButton opt_ConfigureItem_Armor 
            Caption         =   "Armor"
            ForeColor       =   &H00800000&
            Height          =   195
            Left            =   75
            TabIndex        =   40
            TabStop         =   0   'False
            Tag             =   "1"
            Top             =   180
            Width           =   990
         End
         Begin VB.OptionButton opt_ConfigureItem_Cloth 
            Caption         =   "Cloth"
            ForeColor       =   &H00800000&
            Height          =   195
            Left            =   75
            TabIndex        =   39
            TabStop         =   0   'False
            Tag             =   "2"
            Top             =   495
            Width           =   990
         End
         Begin VB.OptionButton opt_ConfigureItem_Weapon 
            Caption         =   "Weapon"
            ForeColor       =   &H00800000&
            Height          =   195
            Left            =   75
            TabIndex        =   38
            TabStop         =   0   'False
            Tag             =   "3"
            Top             =   810
            Width           =   990
         End
         Begin VB.OptionButton opt_ConfigureItem_Shield 
            Caption         =   "Shield"
            ForeColor       =   &H00800000&
            Height          =   195
            Left            =   75
            TabIndex        =   37
            TabStop         =   0   'False
            Tag             =   "4"
            Top             =   1125
            Width           =   990
         End
         Begin VB.OptionButton opt_ConfigureItem_RFShield 
            Caption         =   "Reinforced Shield"
            ForeColor       =   &H00800000&
            Height          =   195
            Left            =   75
            TabIndex        =   36
            TabStop         =   0   'False
            Tag             =   "5"
            Top             =   1440
            Width           =   1665
         End
         Begin VB.ComboBox cmb_ShieldType 
            BackColor       =   &H8000000F&
            CausesValidation=   0   'False
            Enabled         =   0   'False
            ForeColor       =   &H00800000&
            Height          =   300
            ItemData        =   "Workshop.frx":3079D
            Left            =   1215
            List            =   "Workshop.frx":3079F
            Style           =   2  'Dropdown List
            TabIndex        =   10
            TabStop         =   0   'False
            Top             =   1080
            Width           =   1290
         End
         Begin VB.TextBox txt_ConfigItem_AFDPS 
            Alignment       =   2  'Center
            Appearance      =   0  'Flat
            BackColor       =   &H8000000F&
            ForeColor       =   &H00800000&
            Height          =   270
            Left            =   1860
            TabIndex        =   11
            TabStop         =   0   'False
            Top             =   495
            Width           =   630
         End
         Begin VB.Shape shape 
            BackColor       =   &H8000000F&
            BorderColor     =   &H8000000D&
            Height          =   1740
            Index           =   13
            Left            =   0
            Top             =   0
            Width           =   3465
         End
         Begin VB.Label lbl_ConfigItem_AFDPS 
            Caption         =   "AF:"
            ForeColor       =   &H00800000&
            Height          =   180
            Left            =   1230
            TabIndex        =   43
            Top             =   495
            Width           =   390
         End
         Begin VB.Label lbl_Level 
            Caption         =   "Level:"
            ForeColor       =   &H00800000&
            Height          =   180
            Left            =   1200
            TabIndex        =   42
            Top             =   180
            Width           =   465
         End
         Begin VB.Label lbl_ConfigItem_Level 
            Alignment       =   2  'Center
            ForeColor       =   &H8000000D&
            Height          =   180
            Left            =   1875
            TabIndex        =   41
            Tag             =   "1"
            Top             =   180
            Width           =   630
         End
      End
      Begin VB.ComboBox cmb_GemEffectSC4 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2025
         Style           =   2  'Dropdown List
         TabIndex        =   32
         TabStop         =   0   'False
         Top             =   2070
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.ComboBox cmb_GemEffectSC3 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2025
         Style           =   2  'Dropdown List
         TabIndex        =   31
         TabStop         =   0   'False
         Top             =   1770
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.ComboBox cmb_GemEffectSC2 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2025
         Style           =   2  'Dropdown List
         TabIndex        =   30
         TabStop         =   0   'False
         Top             =   1470
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.ComboBox cmb_GemEffectSC1 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2025
         Style           =   2  'Dropdown List
         TabIndex        =   29
         TabStop         =   0   'False
         Top             =   1170
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.ComboBox cmb_GemAmountSC2 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   3930
         Style           =   2  'Dropdown List
         TabIndex        =   27
         TabStop         =   0   'False
         Top             =   1470
         Visible         =   0   'False
         Width           =   765
      End
      Begin VB.ComboBox cmb_GemAmountSC1 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":307A1
         Left            =   3930
         List            =   "Workshop.frx":307B1
         Style           =   2  'Dropdown List
         TabIndex        =   26
         TabStop         =   0   'False
         Top             =   1170
         Visible         =   0   'False
         Width           =   765
      End
      Begin VB.ComboBox cmb_GemSelectSC2 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   825
         Style           =   2  'Dropdown List
         TabIndex        =   24
         TabStop         =   0   'False
         Top             =   1470
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.ComboBox cmb_GemSelectSC1 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":307C5
         Left            =   825
         List            =   "Workshop.frx":307C7
         Style           =   2  'Dropdown List
         TabIndex        =   23
         TabStop         =   0   'False
         Top             =   1170
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.CommandButton cmd_LoadItem_SC 
         Caption         =   "&Load"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   7920
         TabIndex        =   22
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.CommandButton cmd_ClearItem_SC 
         Caption         =   "&Clear"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   9015
         TabIndex        =   21
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.ComboBox cmb_ItemQuality 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":307C9
         Left            =   1575
         List            =   "Workshop.frx":307CB
         Style           =   2  'Dropdown List
         TabIndex        =   20
         TabStop         =   0   'False
         Top             =   285
         Visible         =   0   'False
         Width           =   780
      End
      Begin VB.TextBox txt_ItemLevel_SC 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   3630
         TabIndex        =   19
         TabStop         =   0   'False
         Top             =   285
         Visible         =   0   'False
         Width           =   390
      End
      Begin VB.CommandButton cmd_SaveItem_SC 
         Caption         =   "&Save"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   315
         Index           =   0
         Left            =   6825
         TabIndex        =   18
         TabStop         =   0   'False
         Top             =   3795
         Visible         =   0   'False
         Width           =   1095
      End
      Begin VB.ComboBox cmb_GemSelectSC5 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         ItemData        =   "Workshop.frx":307CD
         Left            =   825
         List            =   "Workshop.frx":307CF
         Style           =   2  'Dropdown List
         TabIndex        =   17
         TabStop         =   0   'False
         Top             =   2625
         Width           =   1530
      End
      Begin VB.ComboBox cmb_GemEffectSC5 
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   2445
         Style           =   2  'Dropdown List
         TabIndex        =   16
         TabStop         =   0   'False
         Top             =   2625
         Width           =   3105
      End
      Begin VB.TextBox txt_GemAmountSC5 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H8000000F&
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   5640
         TabIndex        =   15
         TabStop         =   0   'False
         Top             =   2625
         Width           =   525
      End
      Begin VB.Line WorkshopLine 
         BorderColor     =   &H8000000C&
         Index           =   5
         X1              =   825
         X2              =   6200
         Y1              =   3030
         Y2              =   3030
      End
      Begin VB.Line WorkshopLine 
         BorderColor     =   &H80000009&
         Index           =   4
         X1              =   825
         X2              =   6200
         Y1              =   2520
         Y2              =   2520
      End
      Begin VB.Line WorkshopLine 
         BorderColor     =   &H8000000C&
         Index           =   3
         X1              =   825
         X2              =   6200
         Y1              =   2490
         Y2              =   2490
      End
      Begin VB.Line WorkshopLine 
         BorderColor     =   &H80000009&
         Index           =   6
         X1              =   825
         X2              =   6200
         Y1              =   3060
         Y2              =   3060
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Tinc:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   16
         Left            =   75
         TabIndex        =   225
         Top             =   3180
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label lbl_TinctureNameSC 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6480
         TabIndex        =   224
         Top             =   3180
         Visible         =   0   'False
         Width           =   4905
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Tincture Cost:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   18
         Left            =   3000
         TabIndex        =   221
         Top             =   3675
         Width           =   1215
      End
      Begin VB.Label lbl_ItemCostSC 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   315
         Index           =   0
         Left            =   1140
         TabIndex        =   74
         Top             =   3675
         Visible         =   0   'False
         Width           =   1560
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Item Cost:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   17
         Left            =   75
         TabIndex        =   73
         Top             =   3675
         Visible         =   0   'False
         Width           =   930
      End
      Begin VB.Label lbl_TinctureCostSC 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   315
         Index           =   0
         Left            =   4350
         TabIndex        =   72
         Top             =   3675
         Visible         =   0   'False
         Width           =   1200
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Gem 3:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   13
         Left            =   75
         TabIndex        =   71
         Top             =   1770
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Imbue Points"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   3
         Left            =   6300
         TabIndex        =   70
         Top             =   135
         Visible         =   0   'False
         Width           =   615
      End
      Begin VB.Label lbl_ImbuePTS_Total_SC 
         Alignment       =   1  'Right Justify
         Caption         =   "0.00 /"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   0
         Left            =   5265
         TabIndex        =   69
         Top             =   135
         Visible         =   0   'False
         Width           =   615
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Overcharge:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   2
         Left            =   5220
         TabIndex        =   68
         Top             =   465
         Visible         =   0   'False
         Width           =   1080
      End
      Begin VB.Label lbl_Overcharge_SC 
         Caption         =   "None"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6360
         TabIndex        =   67
         Top             =   465
         Visible         =   0   'False
         Width           =   3810
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Utility:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   4
         Left            =   7095
         TabIndex        =   66
         Top             =   135
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.Label lbl_ItemUtility_Value 
         Caption         =   "0.00"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   7695
         TabIndex        =   65
         Top             =   135
         Visible         =   0   'False
         Width           =   465
      End
      Begin VB.Image cmd_SetItemLevel_SC 
         Height          =   315
         Index           =   0
         Left            =   4080
         Top             =   360
         Visible         =   0   'False
         Width           =   315
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Gem 1:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   11
         Left            =   75
         TabIndex        =   64
         Top             =   1170
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Gem 2:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   12
         Left            =   75
         TabIndex        =   63
         Top             =   1470
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Gem 4:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   14
         Left            =   75
         TabIndex        =   62
         Top             =   2070
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Type:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   5
         Left            =   1155
         TabIndex        =   61
         Top             =   870
         Visible         =   0   'False
         Width           =   480
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Amount:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   6
         Left            =   3990
         TabIndex        =   60
         Top             =   870
         Visible         =   0   'False
         Width           =   735
      End
      Begin VB.Label SC_Labels 
         Alignment       =   2  'Center
         Caption         =   "Effect:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   7
         Left            =   2025
         TabIndex        =   59
         Top             =   870
         Visible         =   0   'False
         Width           =   1815
      End
      Begin VB.Label SC_Labels 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   315
         Index           =   8
         Left            =   75
         TabIndex        =   58
         Top             =   3990
         Visible         =   0   'False
         Width           =   10650
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Points:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   9
         Left            =   5025
         TabIndex        =   57
         Top             =   870
         Visible         =   0   'False
         Width           =   585
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Name:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   10
         Left            =   6300
         TabIndex        =   56
         Top             =   870
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.Label lbl_GemPtsSC1 
         Alignment       =   2  'Center
         Caption         =   "50.5"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5025
         TabIndex        =   55
         Tag             =   "0"
         Top             =   1170
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.Label lbl_GemPtsSC2 
         Alignment       =   2  'Center
         Caption         =   "50.5"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5025
         TabIndex        =   54
         Tag             =   "0"
         Top             =   1470
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.Label lbl_GemPtsSC3 
         Alignment       =   2  'Center
         Caption         =   "50.5"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5025
         TabIndex        =   53
         Tag             =   "0"
         Top             =   1770
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.Label lbl_GemPtsSC4 
         Alignment       =   2  'Center
         Caption         =   "50.5"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   0
         Left            =   5025
         TabIndex        =   52
         Tag             =   "0"
         Top             =   2070
         Visible         =   0   'False
         Width           =   540
      End
      Begin VB.Label lbl_GemNameSC1 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6300
         TabIndex        =   51
         Top             =   1170
         Visible         =   0   'False
         Width           =   3915
      End
      Begin VB.Label lbl_GemNameSC2 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6300
         TabIndex        =   50
         Top             =   1470
         Visible         =   0   'False
         Width           =   3915
      End
      Begin VB.Label lbl_GemNameSC3 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6300
         TabIndex        =   49
         Top             =   1770
         Visible         =   0   'False
         Width           =   3915
      End
      Begin VB.Label lbl_GemNameSC4 
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   6300
         TabIndex        =   48
         Top             =   2070
         Visible         =   0   'False
         Width           =   3915
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Item Quality:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   0
         Left            =   375
         TabIndex        =   47
         Top             =   285
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Item Level:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   315
         Index           =   1
         Left            =   2610
         TabIndex        =   46
         Top             =   285
         Visible         =   0   'False
         Width           =   1005
      End
      Begin VB.Label lbl_ImbuePTS_Avail_SC 
         Caption         =   "32"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   180
         Index           =   0
         Left            =   5925
         TabIndex        =   45
         Top             =   135
         Visible         =   0   'False
         Width           =   390
      End
      Begin VB.Label SC_Labels 
         Caption         =   "Slot 5:"
         BeginProperty Font 
            Name            =   "Verdana"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   300
         Index           =   15
         Left            =   75
         TabIndex        =   44
         Top             =   2625
         Width           =   735
      End
   End
   Begin VB.TextBox txt_RealmPoints 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   285
      Left            =   2280
      MaxLength       =   11
      TabIndex        =   9
      Top             =   5670
      Width           =   1710
   End
   Begin VB.TextBox txt_Level 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   285
      Left            =   1710
      MaxLength       =   4
      TabIndex        =   6
      Text            =   "5"
      Top             =   1965
      Width           =   450
   End
   Begin VB.ComboBox cmb_Realm 
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   315
      ItemData        =   "Workshop.frx":307D1
      Left            =   1125
      List            =   "Workshop.frx":307DE
      Style           =   2  'Dropdown List
      TabIndex        =   1
      Top             =   615
      Width           =   2160
   End
   Begin VB.ComboBox cmb_Race 
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   315
      Left            =   1125
      Style           =   2  'Dropdown List
      TabIndex        =   4
      Top             =   1275
      Width           =   2160
   End
   Begin VB.ComboBox cmb_Class 
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   315
      Left            =   1125
      Style           =   2  'Dropdown List
      TabIndex        =   5
      Top             =   1620
      Width           =   2160
   End
   Begin VB.TextBox txt_CharacterName 
      Appearance      =   0  'Flat
      BackColor       =   &H8000000F&
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   300
      Left            =   1125
      MaxLength       =   50
      TabIndex        =   0
      Top             =   300
      Width           =   2160
   End
   Begin VB.TextBox txt_RealmRank 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      BackColor       =   &H8000000F&
      ForeColor       =   &H00800000&
      Height          =   270
      Left            =   2640
      MaxLength       =   2
      TabIndex        =   7
      Top             =   5310
      Width           =   465
   End
   Begin VB.TextBox txt_RealmLevel 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      BackColor       =   &H8000000F&
      ForeColor       =   &H00800000&
      Height          =   270
      Left            =   3480
      MaxLength       =   1
      TabIndex        =   8
      Top             =   5310
      Width           =   465
   End
   Begin VB.Image cmd_RecalculateRealmRankInfo 
      Height          =   240
      Index           =   0
      Left            =   1800
      Top             =   5310
      Width           =   240
   End
   Begin VB.Image cmd_RecalculateRealmRankInfo 
      Height          =   240
      Index           =   1
      Left            =   1800
      Top             =   5670
      Width           =   240
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Template Utility"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   225
      Index           =   26
      Left            =   17175
      TabIndex        =   206
      Top             =   5355
      Visible         =   0   'False
      Width           =   1425
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Template Cost"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   9.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   285
      Index           =   25
      Left            =   7455
      TabIndex        =   205
      Top             =   3675
      Width           =   1755
   End
   Begin VB.Label lbl_TemplateCost 
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   9.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   285
      Left            =   9255
      TabIndex        =   203
      Top             =   3675
      Width           =   2325
   End
   Begin VB.Label lbl_SuitUtilityValue 
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Left            =   18855
      TabIndex        =   202
      Top             =   5355
      Visible         =   0   'False
      Width           =   2445
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   4380
      Index           =   11
      Left            =   4200
      Top             =   4470
      Width           =   11760
   End
   Begin VB.Label WorkshopLabel 
      AutoSize        =   -1  'True
      Caption         =   "Messages"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   195
      Index           =   27
      Left            =   120
      TabIndex        =   207
      Top             =   6930
      Width           =   825
   End
   Begin VB.Label lbl_Multipurpose 
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H000000FF&
      Height          =   1575
      Left            =   120
      TabIndex        =   204
      Top             =   7260
      Width           =   3855
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Name"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   1
      Left            =   420
      TabIndex        =   201
      Top             =   360
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Magic Stats"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   180
      Index           =   18
      Left            =   12315
      TabIndex        =   200
      Top             =   13635
      Width           =   1005
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   765
      Index           =   4
      Left            =   10770
      Top             =   13755
      Width           =   3075
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Realm Points"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   12
      Left            =   360
      TabIndex        =   199
      Top             =   5670
      Width           =   1365
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Realm Stats"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   180
      Index           =   9
      Left            =   120
      TabIndex        =   198
      Top             =   4770
      Width           =   555
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Realm Title"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   10
      Left            =   360
      TabIndex        =   197
      Top             =   5070
      Width           =   1590
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Realm Spec Pts"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   15
      Left            =   360
      TabIndex        =   196
      Top             =   6510
      Width           =   1590
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Realm Rank"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   11
      Left            =   360
      TabIndex        =   195
      Top             =   5310
      Width           =   1365
   End
   Begin VB.Label WorkshopLabel 
      Alignment       =   2  'Center
      Caption         =   "RR:"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   16
      Left            =   2280
      TabIndex        =   194
      Top             =   5310
      Width           =   360
   End
   Begin VB.Label WorkshopLabel 
      Alignment       =   2  'Center
      Caption         =   "RL:"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   17
      Left            =   3120
      TabIndex        =   193
      Top             =   5310
      Width           =   360
   End
   Begin VB.Label lbl_RA_Info 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   3
      Left            =   2280
      TabIndex        =   192
      Top             =   6510
      Width           =   1605
   End
   Begin VB.Label lbl_RA_Info 
      Alignment       =   2  'Center
      Caption         =   "-"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   0
      Left            =   2280
      TabIndex        =   191
      Top             =   5070
      Width           =   1605
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Points to Next RL"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   13
      Left            =   360
      TabIndex        =   190
      Top             =   6030
      Width           =   1590
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Points to Next RR"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   14
      Left            =   360
      TabIndex        =   189
      Top             =   6270
      Width           =   1590
   End
   Begin VB.Label lbl_RA_Info 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   1
      Left            =   2280
      TabIndex        =   188
      Top             =   6030
      Width           =   1605
   End
   Begin VB.Label lbl_RA_Info 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   2
      Left            =   2280
      TabIndex        =   187
      Top             =   6270
      Width           =   1605
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Crush"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   0
      Left            =   450
      TabIndex        =   186
      Top             =   3915
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Thrust"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   2
      Left            =   450
      TabIndex        =   185
      Top             =   4365
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Energy"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   8
      Left            =   2700
      TabIndex        =   184
      Top             =   4365
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Spirit"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   7
      Left            =   2700
      TabIndex        =   183
      Top             =   4140
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Body"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   6
      Left            =   2700
      TabIndex        =   182
      Top             =   3915
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Slash"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   1
      Left            =   450
      TabIndex        =   181
      Top             =   4140
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Heat"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   3
      Left            =   1575
      TabIndex        =   180
      Top             =   3915
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Cold"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   4
      Left            =   1575
      TabIndex        =   179
      Top             =   4140
      Width           =   675
   End
   Begin VB.Label lbl_ResistName 
      Caption         =   "Matter"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   5
      Left            =   1575
      TabIndex        =   178
      Top             =   4365
      Width           =   675
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   0
      Left            =   1125
      TabIndex        =   177
      Top             =   3915
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   1
      Left            =   1125
      TabIndex        =   176
      Top             =   4140
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   2
      Left            =   1125
      TabIndex        =   175
      Top             =   4365
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   3
      Left            =   2250
      TabIndex        =   174
      Top             =   3915
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   4
      Left            =   2250
      TabIndex        =   173
      Top             =   4140
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   5
      Left            =   2250
      TabIndex        =   172
      Top             =   4365
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   6
      Left            =   3375
      TabIndex        =   171
      Top             =   3915
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   7
      Left            =   3375
      TabIndex        =   170
      Top             =   4140
      Width           =   315
   End
   Begin VB.Label lbl_ResistValue 
      Alignment       =   2  'Center
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   225
      Index           =   8
      Left            =   3375
      TabIndex        =   169
      Top             =   4365
      Width           =   315
   End
   Begin VB.Label WorkshopLabel 
      AutoSize        =   -1  'True
      Caption         =   "Resists"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   195
      Index           =   8
      Left            =   120
      TabIndex        =   168
      Top             =   3660
      Width           =   600
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Str"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   0
      Left            =   810
      TabIndex        =   167
      Top             =   2655
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Con"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   1
      Left            =   810
      TabIndex        =   166
      Top             =   2880
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Dex"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   2
      Left            =   810
      TabIndex        =   165
      Top             =   3075
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Qui"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   3
      Left            =   810
      TabIndex        =   164
      Top             =   3300
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Int"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   4
      Left            =   2385
      TabIndex        =   163
      Top             =   2655
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Emp"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   5
      Left            =   2385
      TabIndex        =   162
      Top             =   2880
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Cha"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   7
      Left            =   2385
      TabIndex        =   161
      Top             =   3300
      Width           =   420
   End
   Begin VB.Label lbl_StatName 
      Appearance      =   0  'Flat
      Caption         =   "Pie"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   6
      Left            =   2385
      TabIndex        =   160
      Top             =   3075
      Width           =   420
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   0
      Left            =   1350
      TabIndex        =   159
      Top             =   2655
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   7
      Left            =   2925
      TabIndex        =   158
      Top             =   3300
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   2
      Left            =   1350
      TabIndex        =   157
      Top             =   3075
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   1
      Left            =   1350
      TabIndex        =   156
      Top             =   2880
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   3
      Left            =   1350
      TabIndex        =   155
      Top             =   3300
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   6
      Left            =   2925
      TabIndex        =   154
      Top             =   3075
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   4
      Left            =   2925
      TabIndex        =   153
      Top             =   2655
      Width           =   465
   End
   Begin VB.Label lbl_StatValue 
      Alignment       =   2  'Center
      Appearance      =   0  'Flat
      Caption         =   "0"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   180
      Index           =   5
      Left            =   2925
      TabIndex        =   152
      Top             =   2880
      Width           =   465
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   6
      Left            =   2805
      Top             =   3075
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   7
      Left            =   2805
      Top             =   3300
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   5
      Left            =   2805
      Top             =   2880
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   4
      Left            =   2805
      Top             =   2655
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   3
      Left            =   1815
      Top             =   3300
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   2
      Left            =   1815
      Top             =   3075
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   1
      Left            =   1815
      Top             =   2880
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   0
      Left            =   1230
      Top             =   2655
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   3
      Left            =   1230
      Top             =   3300
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   2
      Left            =   1230
      Top             =   3075
      Width           =   120
   End
   Begin VB.Image cmd_SubStat 
      Height          =   180
      Index           =   1
      Left            =   1230
      Top             =   2880
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   6
      Left            =   3390
      Top             =   3075
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   7
      Left            =   3390
      Top             =   3300
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   5
      Left            =   3390
      Top             =   2880
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   4
      Left            =   3390
      Top             =   2655
      Width           =   120
   End
   Begin VB.Image cmd_AddStat 
      Height          =   180
      Index           =   0
      Left            =   1815
      Top             =   2655
      Width           =   120
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   0
      Left            =   585
      TabIndex        =   151
      Top             =   2655
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   1
      Left            =   585
      TabIndex        =   150
      Top             =   2880
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   2
      Left            =   585
      TabIndex        =   149
      Top             =   3075
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   3
      Left            =   585
      TabIndex        =   148
      Top             =   3300
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   4
      Left            =   2205
      TabIndex        =   147
      Top             =   2655
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   5
      Left            =   2205
      TabIndex        =   146
      Top             =   2880
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "P"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   6
      Left            =   2205
      TabIndex        =   145
      Top             =   3075
      Width           =   135
   End
   Begin VB.Label lbl_PST 
      Alignment       =   2  'Center
      Caption         =   "S"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00008000&
      Height          =   180
      Index           =   7
      Left            =   2205
      TabIndex        =   144
      Top             =   3300
      Width           =   135
   End
   Begin VB.Image cmd_CharacterLevel 
      Height          =   165
      Index           =   1
      Left            =   2205
      Top             =   2025
      Width           =   195
   End
   Begin VB.Image cmd_CharacterLevel 
      Height          =   165
      Index           =   0
      Left            =   1470
      Top             =   2025
      Width           =   195
   End
   Begin VB.Label WorkshopLabel 
      Appearance      =   0  'Flat
      Caption         =   "Level"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   6
      Left            =   420
      TabIndex        =   143
      Top             =   2010
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      Appearance      =   0  'Flat
      Caption         =   "Realm"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   2
      Left            =   420
      TabIndex        =   142
      Top             =   675
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      Appearance      =   0  'Flat
      Caption         =   "Race"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   4
      Left            =   420
      TabIndex        =   141
      Top             =   1335
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      Appearance      =   0  'Flat
      Caption         =   "Class"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   5
      Left            =   420
      TabIndex        =   140
      Top             =   1635
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      Caption         =   "Gender"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   3
      Left            =   420
      TabIndex        =   139
      Top             =   1020
      Width           =   615
   End
   Begin VB.Label WorkshopLabel 
      AutoSize        =   -1  'True
      Caption         =   "Character Information"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   195
      Index           =   0
      Left            =   120
      TabIndex        =   138
      Top             =   45
      Width           =   1920
   End
   Begin VB.Label WorkshopLabel 
      AutoSize        =   -1  'True
      Caption         =   "Character Attributes (Points: 0)"
      BeginProperty Font 
         Name            =   "Verdana"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00400040&
      Height          =   195
      Index           =   7
      Left            =   120
      TabIndex        =   137
      Top             =   2400
      Width           =   2700
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   945
      Index           =   2
      Left            =   30
      Top             =   3750
      Width           =   4095
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   1095
      Index           =   1
      Left            =   30
      Top             =   2490
      Width           =   4095
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   2175
      Index           =   0
      Left            =   30
      Top             =   150
      Width           =   4095
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   1845
      Index           =   9
      Left            =   30
      Top             =   7020
      Width           =   4095
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   1965
      Index           =   3
      Left            =   30
      Top             =   4860
      Width           =   4095
   End
   Begin VB.Shape shape 
      BorderColor     =   &H8000000D&
      Height          =   4230
      Index           =   5
      Left            =   4200
      Top             =   150
      Width           =   11760
   End
   Begin VB.Menu mnuFile 
      Caption         =   "&File"
      Begin VB.Menu mnuNew 
         Caption         =   "&New"
         Shortcut        =   ^N
      End
      Begin VB.Menu mnuFileBreak1 
         Caption         =   "-"
      End
      Begin VB.Menu mnuOpen 
         Caption         =   "&Open"
         Shortcut        =   ^O
      End
      Begin VB.Menu mnuImport 
         Caption         =   "&Import"
         Shortcut        =   ^I
      End
      Begin VB.Menu mnuRecent 
         Caption         =   "&Recent"
         Begin VB.Menu mnuRecentFile 
            Caption         =   "-"
            Index           =   0
         End
      End
      Begin VB.Menu mnuFileBreak2 
         Caption         =   "-"
      End
      Begin VB.Menu mnuSave 
         Caption         =   "&Save"
         Shortcut        =   ^S
      End
      Begin VB.Menu mnuSaveAs 
         Caption         =   "Save &As"
         Shortcut        =   ^A
      End
      Begin VB.Menu mnuFileBreak3 
         Caption         =   "-"
      End
      Begin VB.Menu mnuExit 
         Caption         =   "E&xit"
         Shortcut        =   ^Q
      End
   End
   Begin VB.Menu mnuTools 
      Caption         =   "&Tools"
      Begin VB.Menu mnuCB 
         Caption         =   "Character &Builder"
         Shortcut        =   ^B
      End
      Begin VB.Menu mnuSpellcraft 
         Caption         =   "Spe&llcraft Calculator"
         Shortcut        =   ^L
      End
      Begin VB.Menu mnuRealmAbility 
         Caption         =   "Realm &Abilities"
         Shortcut        =   ^R
      End
      Begin VB.Menu mnuMasterLevel 
         Caption         =   "&Master Levels"
         Shortcut        =   ^M
      End
      Begin VB.Menu mnuChampLevel 
         Caption         =   "&Champion Levels"
         Enabled         =   0   'False
         Shortcut        =   ^H
      End
      Begin VB.Menu mnuToolsBreak1 
         Caption         =   "-"
      End
      Begin VB.Menu mnuItemDB 
         Caption         =   "Item &Database"
         Enabled         =   0   'False
      End
      Begin VB.Menu mnuSaveAllItems 
         Caption         =   "Save All &Items"
      End
      Begin VB.Menu mnuToolsBreak2 
         Caption         =   "-"
      End
      Begin VB.Menu mnuSwapGems 
         Caption         =   "Swap Gems With..."
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Chest"
            Index           =   1
         End
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Arms"
            Index           =   2
         End
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Head"
            Index           =   3
         End
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Legs"
            Index           =   4
         End
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Hands"
            Index           =   5
         End
         Begin VB.Menu mnuSwpArmor 
            Caption         =   "Feet"
            Index           =   6
         End
         Begin VB.Menu mnuSwpBreak1 
            Caption         =   "-"
         End
         Begin VB.Menu mnuSwpWeap 
            Caption         =   "Main Hand"
            Index           =   1
         End
         Begin VB.Menu mnuSwpWeap 
            Caption         =   "Off Hand"
            Index           =   2
         End
         Begin VB.Menu mnuSwpWeap 
            Caption         =   "2 Handed"
            Index           =   3
         End
         Begin VB.Menu mnuSwpWeap 
            Caption         =   "Ranged"
            Index           =   4
         End
         Begin VB.Menu mnuSwpBreak2 
            Caption         =   "-"
         End
         Begin VB.Menu mnuSwpSpare 
            Caption         =   "Main Hand Spare"
            Index           =   1
         End
         Begin VB.Menu mnuSwpSpare 
            Caption         =   "Off Hand Spare"
            Index           =   2
         End
         Begin VB.Menu mnuSwpSpare 
            Caption         =   "2 Handed Spare"
            Index           =   3
         End
         Begin VB.Menu mnuSwpSpare 
            Caption         =   "Ranged Spare"
            Index           =   4
         End
      End
      Begin VB.Menu mnuSetCraftBars 
         Caption         =   "Setup Craft Bars"
      End
   End
   Begin VB.Menu mnuReports 
      Caption         =   "&Reports"
      Begin VB.Menu mnuConfiguration 
         Caption         =   "&Configuration"
      End
      Begin VB.Menu mnuMaterials 
         Caption         =   "Materials"
      End
   End
   Begin VB.Menu mnuOptions 
      Caption         =   "&Options"
      Begin VB.Menu mnuSettings 
         Caption         =   "&Settings"
         Shortcut        =   ^{F1}
      End
      Begin VB.Menu mnuDisplayOptions 
         Caption         =   "&Display Options"
         Begin VB.Menu mnuBonusDisplay 
            Caption         =   "&Spellcrafted Bonus"
            Index           =   0
            Shortcut        =   ^T
         End
         Begin VB.Menu mnuBonusDisplay 
            Caption         =   "&Distance to Cap"
            Index           =   1
            Shortcut        =   ^D
         End
      End
   End
   Begin VB.Menu mnuHelp 
      Caption         =   "&Help"
      Begin VB.Menu mnuAbout 
         Caption         =   "&About"
         Shortcut        =   {F2}
      End
      Begin VB.Menu mnuHelpBreak1 
         Caption         =   "-"
      End
      Begin VB.Menu mnuPatchNotes 
         Caption         =   "&Patch Notes"
         Shortcut        =   {F3}
      End
      Begin VB.Menu mnuHelpBreak2 
         Caption         =   "-"
      End
      Begin VB.Menu mnuCheckUpdates 
         Caption         =   "&Check for Updates"
         Shortcut        =   {F4}
      End
   End
   Begin VB.Menu mnuSystray 
      Caption         =   "Systray"
      Begin VB.Menu mnuPopupRestore 
         Caption         =   "Restore"
      End
      Begin VB.Menu mnuPopupQuit 
         Caption         =   "Quit"
      End
   End
End
Attribute VB_Name = "WS"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit

Private UPDATING_REALMPOINTS As Boolean

Private CHARACTERBUILDER_ACTIVE As Boolean
Private CHAMPIONLEVEL_ACTIVE As Boolean
Private REALMABILITY_ACTIVE As Boolean
Private MASTERLEVEL_ACTIVE As Boolean

Private CURRENT_LOCATION As Integer

Private CLICKED_SKILL_UP As Boolean
Private TYPED_SKILL_UP As Boolean
Private TRAINER_LOADING As Boolean

Private Type MULTIPURPOSE_TYPE
    Header As String
    Message As String
    FontBold As Boolean
    FontSize As Long
    ForeColor As Long
End Type

Private Const VALUE_OVER As Long = 1
Private Const VALUE_UNDER As Long = 2
Private Const VALUE_EQUAL As Long = 3

Private Const MAX_RAS As Long = 40

Private Const FRAME_CB As Long = 0
Private Const FRAME_RA As Long = 1
Private Const FRAME_ML As Long = 2
Private Const FRAME_CL As Long = 3
Private Const FRAME_SC As Long = 4
Private Const FRAME_DP As Long = 5

Private Const WS_SAVE_FLAG As Long = 1
Private Const WS_SAVEAS_FLAG As Long = 0

Private Const WS_MULTIPURPOSE_TITLE_INDEX As Integer = 27

Private CURRENT_RA_ACTIVE_COUNT As Long
Private CURRENT_RA_PASSIVE_COUNT As Long

Private CURRENT_STYLE_COUNT As Long
Private CURRENT_SPELL_COUNT As Long
Private CURRENT_SPELL_CLASS_VIEW_COUNT As Long

Private PREVIOUS_MULTIPURPOSE As MULTIPURPOSE_TYPE

'----------------------------------------------------
'scrollable skill trainer variables
Private Const originPos As Long = 390
Private Const originHeight As Long = 3825

Private Const shapeSkillOffset As Long = 50
Private Const frameTopOffset As Long = 90
Private Const formHeightOffset As Long = 405

Private Sub LoadRealmAbilities(tToon As TOON_TYPE)

    Dim i As Long
    
    With tToon
    
        'reset the ra Index counts
        CURRENT_RA_ACTIVE_COUNT = 0
        CURRENT_RA_PASSIVE_COUNT = 0
        
        Do While .REALM_ABILITIES(i) <> WS_NO_VALUE

            If (.REALM_ABILITIES(i) - RA_CLASS) >= 0 Then
                'its a class unique RA
                Call SetUniqueRealmAbilityInfo(.REALM_ABILITIES(i), _
                                               lbl_RA_ClassName)
                                               
            ElseIf (.REALM_ABILITIES(i) - RA_ACTIVE) >= 0 Then
                'its an active RA
                
                If CURRENT_RA_ACTIVE_COUNT <> 0 Then
                    Load lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT)
                    Load cmd_RA_ActiveDec(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveL1(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveL2(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveL3(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveL4(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveL5(CURRENT_RA_ACTIVE_COUNT)
                    
                    Load cmd_RA_ActiveInc(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveBonusValue(CURRENT_RA_ACTIVE_COUNT)
                    Load lbl_RA_ActiveCostValue(CURRENT_RA_ACTIVE_COUNT)
                    
                    lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT - 1).Top + lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT - 1).Height
                    cmd_RA_ActiveDec(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveL1(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveL2(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveL3(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveL4(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveL5(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    
                    cmd_RA_ActiveInc(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveBonusValue(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                    lbl_RA_ActiveCostValue(CURRENT_RA_ACTIVE_COUNT).Top = lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Top
                End If
                   
                Call SetActiveRealmAbilityInfo(.REALM_ABILITIES(i), _
                                               lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveL1(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveL2(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveL3(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveL4(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveL5(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveCostValue(CURRENT_RA_ACTIVE_COUNT), _
                                               lbl_RA_ActiveBonusValue(CURRENT_RA_ACTIVE_COUNT), _
                                               cmd_RA_ActiveInc(CURRENT_RA_ACTIVE_COUNT), _
                                               cmd_RA_ActiveDec(CURRENT_RA_ACTIVE_COUNT))
                                               
                lbl_RA_ActiveName(CURRENT_RA_ACTIVE_COUNT).Visible = True
                cmd_RA_ActiveDec(CURRENT_RA_ACTIVE_COUNT).Visible = True
                
                lbl_RA_ActiveL1(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveL2(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveL3(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveL4(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveL5(CURRENT_RA_ACTIVE_COUNT).Visible = True
                
                cmd_RA_ActiveInc(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveBonusValue(CURRENT_RA_ACTIVE_COUNT).Visible = True
                lbl_RA_ActiveCostValue(CURRENT_RA_ACTIVE_COUNT).Visible = True
                           
                CURRENT_RA_ACTIVE_COUNT = CURRENT_RA_ACTIVE_COUNT + 1
                
            ElseIf (.REALM_ABILITIES(i) - RA_PASSIVE) >= 0 Then
                'its a passive RA
                
                If CURRENT_RA_PASSIVE_COUNT <> 0 Then
                    Load lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT)
                    Load cmd_RA_PassiveDec(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL1(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL2(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL3(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL4(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL5(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL6(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL7(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL8(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveL9(CURRENT_RA_PASSIVE_COUNT)
                    
                    Load cmd_RA_PassiveInc(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveBonusValue(CURRENT_RA_PASSIVE_COUNT)
                    Load lbl_RA_PassiveCostValue(CURRENT_RA_PASSIVE_COUNT)
                
                    lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT - 1).Top + lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT - 1).Height
                    cmd_RA_PassiveDec(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL1(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL2(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL3(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL4(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL5(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL6(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL7(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL8(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveL9(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    cmd_RA_PassiveInc(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveBonusValue(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                    lbl_RA_PassiveCostValue(CURRENT_RA_PASSIVE_COUNT).Top = lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Top
                End If
                
                'set the values of attributes of passive ra controls
                Call SetPassiveRealmAbilityInfo(.REALM_ABILITIES(i), _
                                                lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL1(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL2(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL3(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL4(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL5(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL6(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL7(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL8(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveL9(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveCostValue(CURRENT_RA_PASSIVE_COUNT), _
                                                lbl_RA_PassiveBonusValue(CURRENT_RA_PASSIVE_COUNT), _
                                                cmd_RA_PassiveInc(CURRENT_RA_PASSIVE_COUNT), _
                                                cmd_RA_PassiveDec(CURRENT_RA_PASSIVE_COUNT))
                                                
                lbl_RA_PassiveName(CURRENT_RA_PASSIVE_COUNT).Visible = True
                cmd_RA_PassiveDec(CURRENT_RA_PASSIVE_COUNT).Visible = True
                
                lbl_RA_PassiveL1(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL2(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL3(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL4(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL5(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL6(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL7(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL8(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveL9(CURRENT_RA_PASSIVE_COUNT).Visible = True
                
                cmd_RA_PassiveInc(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveBonusValue(CURRENT_RA_PASSIVE_COUNT).Visible = True
                lbl_RA_PassiveCostValue(CURRENT_RA_PASSIVE_COUNT).Visible = True

                CURRENT_RA_PASSIVE_COUNT = CURRENT_RA_PASSIVE_COUNT + 1
                
            End If
                                
            i = i + 1
        Loop
        
        lbl_RA_ClassName.Visible = True
        
    End With 'ttoon
    
End Sub

Private Sub UnLoadRealmAbilities()

    Dim i As Long
    
    
    lbl_RA_ActiveName(0).Caption = vbNullString
    lbl_RA_ActiveBonusValue(0).Caption = vbNullString
    lbl_RA_ActiveCostValue(0).Caption = vbNullString
    lbl_RA_ActiveCostValue(0).Tag = 0
    
    lbl_RA_ActiveName(0).Visible = False
    cmd_RA_ActiveDec(0).Visible = False
    lbl_RA_ActiveL1(0).Visible = False
    lbl_RA_ActiveL1(0).ForeColor = &H800000
    lbl_RA_ActiveL1(0).FontBold = False
    lbl_RA_ActiveL2(0).Visible = False
    lbl_RA_ActiveL2(0).ForeColor = &H800000
    lbl_RA_ActiveL2(0).FontBold = False
    lbl_RA_ActiveL3(0).Visible = False
    lbl_RA_ActiveL3(0).ForeColor = &H800000
    lbl_RA_ActiveL3(0).FontBold = False
    lbl_RA_ActiveL4(0).Visible = False
    lbl_RA_ActiveL4(0).ForeColor = &H800000
    lbl_RA_ActiveL4(0).FontBold = False
    lbl_RA_ActiveL5(0).Visible = False
    lbl_RA_ActiveL5(0).ForeColor = &H800000
    lbl_RA_ActiveL5(0).FontBold = False
    cmd_RA_ActiveInc(0).Visible = False
    lbl_RA_ActiveBonusValue(0).Visible = False
    lbl_RA_ActiveCostValue(0).Visible = False
    
    lbl_RA_PassiveName(0).Caption = vbNullString
    lbl_RA_PassiveBonusValue(0).Caption = vbNullString
    lbl_RA_PassiveCostValue(0).Caption = vbNullString
    lbl_RA_PassiveCostValue(0).Tag = 0
    
    lbl_RA_PassiveName(0).Visible = False
    cmd_RA_PassiveDec(0).Visible = False
    lbl_RA_PassiveL1(0).Visible = False
    lbl_RA_PassiveL1(0).ForeColor = &H800000
    lbl_RA_PassiveL1(0).FontBold = False
    lbl_RA_PassiveL2(0).Visible = False
    lbl_RA_PassiveL2(0).ForeColor = &H800000
    lbl_RA_PassiveL2(0).FontBold = False
    lbl_RA_PassiveL3(0).Visible = False
    lbl_RA_PassiveL3(0).ForeColor = &H800000
    lbl_RA_PassiveL3(0).FontBold = False
    lbl_RA_PassiveL4(0).Visible = False
    lbl_RA_PassiveL4(0).ForeColor = &H800000
    lbl_RA_PassiveL4(0).FontBold = False
    lbl_RA_PassiveL5(0).Visible = False
    lbl_RA_PassiveL5(0).ForeColor = &H800000
    lbl_RA_PassiveL5(0).FontBold = False
    lbl_RA_PassiveL6(0).Visible = False
    lbl_RA_PassiveL6(0).ForeColor = &H800000
    lbl_RA_PassiveL6(0).FontBold = False
    lbl_RA_PassiveL7(0).Visible = False
    lbl_RA_PassiveL7(0).ForeColor = &H800000
    lbl_RA_PassiveL7(0).FontBold = False
    lbl_RA_PassiveL8(0).Visible = False
    lbl_RA_PassiveL8(0).ForeColor = &H800000
    lbl_RA_PassiveL8(0).FontBold = False
    lbl_RA_PassiveL9(0).Visible = False
    lbl_RA_PassiveL9(0).ForeColor = &H800000
    lbl_RA_PassiveL9(0).FontBold = False
    cmd_RA_PassiveInc(0).Visible = False
    lbl_RA_PassiveBonusValue(0).Visible = False
    lbl_RA_PassiveCostValue(0).Visible = False
    
    lbl_RA_ClassName.Caption = vbNullString
    lbl_RA_ClassName.Visible = False
    
    For i = 1 To (CURRENT_RA_ACTIVE_COUNT - 1)
        Unload lbl_RA_ActiveName(i)
        Unload cmd_RA_ActiveDec(i)
        Unload lbl_RA_ActiveL1(i)
        Unload lbl_RA_ActiveL2(i)
        Unload lbl_RA_ActiveL3(i)
        Unload lbl_RA_ActiveL4(i)
        Unload lbl_RA_ActiveL5(i)
        Unload cmd_RA_ActiveInc(i)
        Unload lbl_RA_ActiveBonusValue(i)
        Unload lbl_RA_ActiveCostValue(i)
    Next i
    
    For i = 1 To (CURRENT_RA_PASSIVE_COUNT - 1)
        Unload lbl_RA_PassiveName(i)
        Unload cmd_RA_PassiveDec(i)
        Unload lbl_RA_PassiveL1(i)
        Unload lbl_RA_PassiveL2(i)
        Unload lbl_RA_PassiveL3(i)
        Unload lbl_RA_PassiveL4(i)
        Unload lbl_RA_PassiveL5(i)
        Unload lbl_RA_PassiveL6(i)
        Unload lbl_RA_PassiveL7(i)
        Unload lbl_RA_PassiveL8(i)
        Unload lbl_RA_PassiveL9(i)
        Unload cmd_RA_PassiveInc(i)
        Unload lbl_RA_PassiveBonusValue(i)
        Unload lbl_RA_PassiveCostValue(i)
    Next i
    
    CURRENT_RA_ACTIVE_COUNT = 0
    CURRENT_RA_PASSIVE_COUNT = 0
    
End Sub

Private Sub SavePreviousMultipurpose()

    PREVIOUS_MULTIPURPOSE.Header = WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption
    PREVIOUS_MULTIPURPOSE.Message = lbl_Multipurpose.Caption
    PREVIOUS_MULTIPURPOSE.FontBold = lbl_Multipurpose.FontBold
    PREVIOUS_MULTIPURPOSE.FontSize = lbl_Multipurpose.FontSize
    PREVIOUS_MULTIPURPOSE.ForeColor = lbl_Multipurpose.ForeColor
    
End Sub

Private Sub LoadPreviousMultipurpose()

    WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = PREVIOUS_MULTIPURPOSE.Header
    lbl_Multipurpose.Caption = PREVIOUS_MULTIPURPOSE.Message
    lbl_Multipurpose.FontBold = PREVIOUS_MULTIPURPOSE.FontBold
    lbl_Multipurpose.FontSize = PREVIOUS_MULTIPURPOSE.FontSize
    lbl_Multipurpose.ForeColor = PREVIOUS_MULTIPURPOSE.ForeColor
        
End Sub

Public Sub InitWorkshop(ByRef ProgressBar As Control, ByRef StatusBar As Control)

    Dim Ctr As Long
    Dim Pos As Long

    'Init variables
    APPLICATION_PRE_START = True
    
    On Error Resume Next
    
    If (SPLASH_LOADING) Then
        
        'hide workshop until more loading is completed
        WS.Visible = False
               
        '----------------------------------------------------------------------------------------------
        'resize spellcraft window for user
        Me.Width = WS_MAX_WIDTH
        Me.Height = WS_MAX_HEIGHT
        '----------------------------------------------------------------------------------------------
        Pos = Val(GetRegValue(HKEY_LOCAL_MACHINE, REGKEY, "WSX"))
        If (Pos = 0) Or (Pos = REG_KEY_NOT_EXISTS) Then Pos = (Screen.Width \ 2) - (WS.Width \ 2)
        WS.Left = Pos
        
        Pos = Val(GetRegValue(HKEY_LOCAL_MACHINE, REGKEY, "WSY"))
        If (Pos = 0) Or (Pos = REG_KEY_NOT_EXISTS) Then Pos = (Screen.Height \ 2) - (WS.Height \ 2)
        WS.Top = Pos
        '----------------------------------------------------------------------------------------------
        'set spellcraft item and drop item frame position
        frameTool(FRAME_SC).Top = WS_FRAME_TOP
        frameTool(FRAME_DP).Top = WS_FRAME_TOP
        
        frameTool(FRAME_SC).Left = WS_FRAME_LEFT
        frameTool(FRAME_DP).Left = WS_FRAME_LEFT
        
        frameTool(FRAME_CB).Top = 1500 + WS_FRAME_TOP + frameTool(FRAME_SC).Height
        frameTool(FRAME_CB).Left = WS_FRAME_LEFT
        
        frameTool(FRAME_RA).Top = 1500 + WS_FRAME_TOP + frameTool(FRAME_SC).Height
        frameTool(FRAME_RA).Left = WS_FRAME_LEFT
        
        frameTool(FRAME_ML).Top = 1500 + WS_FRAME_TOP + frameTool(FRAME_SC).Height
        frameTool(FRAME_ML).Left = WS_FRAME_LEFT
        
        frameTool(FRAME_CL).Top = 1500 + WS_FRAME_TOP + frameTool(FRAME_SC).Height
        frameTool(FRAME_CL).Left = WS_FRAME_LEFT
        
        frameTrainer(1).Tag = WS_NO_VALUE
        
        For Ctr = WS_DOLL_CHEST To WS_DOLL_MYTHICAL
            frame_DropCraft(Ctr).Left = 4425
            frame_DropCraft(Ctr).Top = 4065
        Next Ctr
        
        'set paper doll image position
        imgDoll.Top = WS_DOLL_TOP
        imgDoll.Left = WS_DOLL_LEFT
        imgDoll.Width = WS_DOLL_WIDTH
        imgDoll.Height = WS_DOLL_HEIGHT
        '----------------------------------------------------------------------------------------------
        'load the disabled background image
        Set imgDoll.Picture = LoadResPicture("DISABLED_DOLL", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'load images on doll
        Set img_DollButton(WS_DOLL_CHEST).Picture = LoadResPicture("CHEST_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_ARMS).Picture = LoadResPicture("ARMS_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_GEM).Picture = LoadResPicture("GEM_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_LRING).Picture = LoadResPicture("RING_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_LWRIST).Picture = LoadResPicture("BRACER_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_LEGS).Picture = LoadResPicture("LEGS_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_RHAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_LHAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_2HAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_RANGED).Picture = LoadResPicture("RANGED_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_FEET).Picture = LoadResPicture("FEET_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_RWRIST).Picture = LoadResPicture("BRACER_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_RRING).Picture = LoadResPicture("RING_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_WAIST).Picture = LoadResPicture("BELT_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_HANDS).Picture = LoadResPicture("HANDS_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_HEAD).Picture = LoadResPicture("HEAD_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_CLOAK).Picture = LoadResPicture("CLOAK_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_NECK).Picture = LoadResPicture("NECK_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_MYTHICAL).Picture = LoadResPicture("GEM_UP", vbResBitmap)
        
        Set img_DollButton(WS_DOLL_RIGHTSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_LEFTSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_2HANDSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
        Set img_DollButton(WS_DOLL_RANGEDSPARE).Picture = LoadResPicture("RANGED_UP", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'level up and down arrow graphics
        Set cmd_CharacterLevel(0).Picture = LoadResPicture("LARGE_LEFT_UP", vbResBitmap)
        Set cmd_CharacterLevel(1).Picture = LoadResPicture("LARGE_RIGHT_UP", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'character attribute left/right arrow graphics
        For Ctr = 0 To 7
            Set cmd_SubStat(Ctr).Picture = LoadResPicture("SLEFT_UP", vbResBitmap)
            Set cmd_AddStat(Ctr).Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
        Next Ctr
        
        '----------------------------------------------------------------------------------------------
        'skill up and down arrow graphics :: this is temporary for beta - will create new proc for this
        Set cmd_subSkillLevel(0).Picture = LoadResPicture("DOUBLE_LEFT_UP", vbResBitmap)
        Set cmd_addSkillLevel(0).Picture = LoadResPicture("DOUBLE_RIGHT_UP", vbResBitmap)
        
        Set cmd_AutoTrain(0).Picture = LoadResPicture("DOUBLE_LEFT_UP", vbResBitmap)
        Set cmd_AutoTrain(1).Picture = LoadResPicture("DOUBLE_RIGHT_UP", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'load arrow images for item level and item quality on Index 0
        Set cmd_SetItemLevel_SC(0).Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
        Set cmd_ItemQuality_UP(0).Picture = LoadResPicture("SUP_UP", vbResBitmap)
        Set cmd_ItemQuality_DOWN(0).Picture = LoadResPicture("SDOWN_UP", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'load arrow images for realm point recalc
        
        Set cmd_RecalculateRealmRankInfo(0).Picture = LoadResPicture("LARGE_RIGHT_UP", vbResBitmap)
        Set cmd_RecalculateRealmRankInfo(1).Picture = LoadResPicture("LARGE_RIGHT_UP", vbResBitmap)
        
        '----------------------------------------------------------------------------------------------
        'since a "new" template is loaded on startup - disable Save until SaveAs enables it
        mnuSave.Enabled = False
        mnuSystray.Visible = False
        
        '----------------------------------------------------------------------------------------------
        'set bonus option
        Call mnuBonusDisplay_Click(SC_SETTINGS.BONUS_OPTION)
        
        '----------------------------------------------------------------------------------------------
        'load the recent file history menu
        Call LoadRecentHistory
        
        '----------------------------------------------------------------------------------------------
        'setup the current location (chest=0)
        CURRENT_LOCATION = 0
        
        '----------------------------------------------------------------------------------------------
        'load the frames
        Call LoadFrames(ProgressBar, StatusBar)
        
        '----------------------------------------------------------------------------------------------
        'set basic toon info
        cmb_Realm.ListIndex = TOON.REALM
        
        txt_Level.Text = TOON.LEVEL
                
        'Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        '----------------------------------------------------------------------------------------------
        'show the chestpiece location
        Call ShowSCLocation(WS_DOLL_CHEST)
        Call ShowSCLabels
        
        Call InitFrameZero
                
        cmb_ItemQuality(WS_DOLL_CHEST).ListIndex = 4
        txt_ItemLevel_SC(WS_DOLL_CHEST).Text = "51"
        chk_Equip_SC(WS_DOLL_CHEST).Value = 1
        
        WS.Visible = True
        
        Call SetInitialControls(ProgressBar, StatusBar)
        
        Call DisableWorkshop
        '----------------------------------------------------------------------------------------------
        'LAST THING BEFORE ENDING THIS PROCEDURE
        APPLICATION_PRE_START = False
                
    End If

End Sub

Private Sub EnableWorkshop()
'working as intended 10/23/06

    Dim i As Integer
    
    WORKSHOP_ENABLED = True
    
    Select Case TOON.REALM
        Case 0
            Set imgDoll.Picture = LoadResPicture("DOLL_ALB", vbResBitmap)
        Case 1
            Set imgDoll.Picture = LoadResPicture("DOLL_HIB", vbResBitmap)
        Case 2
            Set imgDoll.Picture = LoadResPicture("DOLL_MID", vbResBitmap)
    End Select
    
    Set img_DollButton(WS_DOLL_ARMS).Picture = LoadResPicture("ARMS_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_HEAD).Picture = LoadResPicture("HEAD_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_LEGS).Picture = LoadResPicture("LEGS_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_FEET).Picture = LoadResPicture("FEET_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_HANDS).Picture = LoadResPicture("HANDS_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_CHEST).Picture = LoadResPicture("CHEST_UP", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_RHAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_LHAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_2HAND).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_RANGED).Picture = LoadResPicture("RANGED_UP", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_RIGHTSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_LEFTSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_2HANDSPARE).Picture = LoadResPicture("WEAPON_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_RANGEDSPARE).Picture = LoadResPicture("RANGED_UP", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_WAIST).Picture = LoadResPicture("BELT_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_GEM).Picture = LoadResPicture("GEM_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_RRING).Picture = LoadResPicture("RING_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_LRING).Picture = LoadResPicture("RING_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_RWRIST).Picture = LoadResPicture("BRACER_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_LWRIST).Picture = LoadResPicture("BRACER_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_CLOAK).Picture = LoadResPicture("CLOAK_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_NECK).Picture = LoadResPicture("NECK_UP", vbResBitmap)
    Set img_DollButton(WS_DOLL_MYTHICAL).Picture = LoadResPicture("GEM_UP", vbResBitmap)
    
    On Error Resume Next
       
    For i = 0 To 22
        opt_Drop(i).Enabled = True
        opt_PlayerCraft(i).Enabled = True
        
        chk_Equip_SC(i).Enabled = True
        chk_Equip_DP(i).Enabled = True
        
        cmb_ItemQuality(i).Enabled = True
        txt_ItemLevel_SC(i).Enabled = True
        cmb_GemSelectSC1(i).Enabled = True
        cmb_GemSelectSC2(i).Enabled = True
        cmb_GemSelectSC3(i).Enabled = True
        cmb_GemSelectSC4(i).Enabled = True
        
        cmb_GemEffectSC1(i).Enabled = True
        cmb_GemEffectSC2(i).Enabled = True
        cmb_GemEffectSC3(i).Enabled = True
        cmb_GemEffectSC4(i).Enabled = True
        
        cmb_GemAmountSC1(i).Enabled = True
        cmb_GemAmountSC2(i).Enabled = True
        cmb_GemAmountSC3(i).Enabled = True
        cmb_GemAmountSC4(i).Enabled = True
        
        cmb_GemSelectSC5(i).Enabled = True
        cmb_GemEffectSC5(i).Enabled = True
        txt_GemAmountSC5(i).Enabled = True
        
        cmb_TinctureSelectSC(i).Enabled = True
        cmb_TinctureEffectSC(i).Enabled = True
        
        cmd_SaveItem_SC(i).Enabled = True
        cmd_LoadItem_SC(i).Enabled = True
        cmd_ClearItem_SC(i).Enabled = True
        
        cmb_GemSelect_DP1(i).Enabled = True
        cmb_GemEffect_DP1(i).Enabled = True
        txt_GemAmount_DP1(i).Enabled = True
        
        cmb_GemSelect_DP2(i).Enabled = True
        cmb_GemEffect_DP2(i).Enabled = True
        txt_GemAmount_DP2(i).Enabled = True
        
        cmb_GemSelect_DP3(i).Enabled = True
        cmb_GemEffect_DP3(i).Enabled = True
        txt_GemAmount_DP3(i).Enabled = True
        
        cmb_GemSelect_DP4(i).Enabled = True
        cmb_GemEffect_DP4(i).Enabled = True
        txt_GemAmount_DP4(i).Enabled = True
        
        cmb_GemSelect_DP5(i).Enabled = True
        cmb_GemEffect_DP5(i).Enabled = True
        txt_GemAmount_DP5(i).Enabled = True
        
        cmb_GemSelect_DP6(i).Enabled = True
        cmb_GemEffect_DP6(i).Enabled = True
        txt_GemAmount_DP6(i).Enabled = True
        
        cmb_GemSelect_DP7(i).Enabled = True
        cmb_GemEffect_DP7(i).Enabled = True
        txt_GemAmount_DP7(i).Enabled = True
        
        cmb_GemSelect_DP8(i).Enabled = True
        cmb_GemEffect_DP8(i).Enabled = True
        txt_GemAmount_DP8(i).Enabled = True
        
        cmb_GemSelect_DP9(i).Enabled = True
        cmb_GemEffect_DP9(i).Enabled = True
        txt_GemAmount_DP9(i).Enabled = True
        
        cmb_GemSelect_DP10(i).Enabled = True
        cmb_GemEffect_DP10(i).Enabled = True
        txt_GemAmount_DP10(i).Enabled = True
        
        cmb_GemSelect_DP11(i).Enabled = True
        cmb_GemEffect_DP11(i).Enabled = True
        txt_GemAmount_DP11(i).Enabled = True
        
        cmb_GemSelect_DP12(i).Enabled = True
        cmb_GemEffect_DP12(i).Enabled = True
        txt_GemAmount_DP12(i).Enabled = True
        
        opt_Alb(i).Enabled = True
        opt_Hib(i).Enabled = True
        opt_Mid(i).Enabled = True
        opt_All(i).Enabled = True
        
        txt_ItemName_DP(i).Enabled = True
        txt_AFDPS_DP(i).Enabled = True
        txt_ItemLevel_DP(i).Enabled = True
        txt_ItemSPD_DP(i).Enabled = True
        txt_ItemQuality(i).Enabled = True
        
        cmd_SaveItem_DP(i).Enabled = True
        cmd_LoadItem_DP(i).Enabled = True
        cmd_ClearItem_DP(i).Enabled = True
        
        list_Skills.Enabled = True
        list_OtherBonus.Enabled = True
        
    Next i

    CURRENT_LOCATION = ClickDollButton(WS_DOLL_CHEST, WS_DOLL_ARMS, img_DollButton(WS_DOLL_CHEST), lbl_LocationName)
    
End Sub

Private Sub CheckWorkshop()
'working as intended 10/23/06
'procedure expectation:
'checks to see if the minimal amount of information has been supplied by the user
'if so, it activates the rest of the workshop for use
'else it keeps controls disabled

    If (cmb_Realm.Text <> vbNullString) And (cmb_Race.Text <> vbNullString) And _
        (cmb_Class.Text <> vbNullString) And (txt_Level.Text <> vbNullString) Then
        
        Call EnableWorkshop
    Else
        Call DisableWorkshop
    End If
    
End Sub

Private Sub DisableWorkshop()
'working as intended 10/23/06
    
    Dim i As Integer
    
    WORKSHOP_ENABLED = False
        
    Set imgDoll.Picture = LoadResPicture("DISABLED_DOLL", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_ARMS).Picture = LoadResPicture("DISABLED_ARMS", vbResBitmap)
    Set img_DollButton(WS_DOLL_HEAD).Picture = LoadResPicture("DISABLED_HEAD", vbResBitmap)
    Set img_DollButton(WS_DOLL_LEGS).Picture = LoadResPicture("DISABLED_LEGS", vbResBitmap)
    Set img_DollButton(WS_DOLL_FEET).Picture = LoadResPicture("DISABLED_FEET", vbResBitmap)
    Set img_DollButton(WS_DOLL_HANDS).Picture = LoadResPicture("DISABLED_HANDS", vbResBitmap)
    Set img_DollButton(WS_DOLL_CHEST).Picture = LoadResPicture("DISABLED_CHEST", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_RHAND).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_LHAND).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_2HAND).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_RANGED).Picture = LoadResPicture("DISABLED_RANGED", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_RIGHTSPARE).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_LEFTSPARE).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_2HANDSPARE).Picture = LoadResPicture("DISABLED_WEAPON", vbResBitmap)
    Set img_DollButton(WS_DOLL_RANGEDSPARE).Picture = LoadResPicture("DISABLED_RANGED", vbResBitmap)
    
    Set img_DollButton(WS_DOLL_WAIST).Picture = LoadResPicture("DISABLED_BELT", vbResBitmap)
    Set img_DollButton(WS_DOLL_GEM).Picture = LoadResPicture("DISABLED_GEM", vbResBitmap)
    Set img_DollButton(WS_DOLL_RRING).Picture = LoadResPicture("DISABLED_RING", vbResBitmap)
    Set img_DollButton(WS_DOLL_LRING).Picture = LoadResPicture("DISABLED_RING", vbResBitmap)
    Set img_DollButton(WS_DOLL_RWRIST).Picture = LoadResPicture("DISABLED_BRACER", vbResBitmap)
    Set img_DollButton(WS_DOLL_LWRIST).Picture = LoadResPicture("DISABLED_BRACER", vbResBitmap)
    Set img_DollButton(WS_DOLL_CLOAK).Picture = LoadResPicture("DISABLED_CLOAK", vbResBitmap)
    Set img_DollButton(WS_DOLL_NECK).Picture = LoadResPicture("DISABLED_NECK", vbResBitmap)
    Set img_DollButton(WS_DOLL_MYTHICAL).Picture = LoadResPicture("DISABLED_GEM", vbResBitmap)
    
    On Error Resume Next
       
    For i = 0 To 22
        opt_Drop(i).Enabled = False
        opt_PlayerCraft(i).Enabled = False
        
        chk_Equip_SC(i).Enabled = False
        chk_Equip_DP(i).Enabled = False
        
        cmb_ItemQuality(i).Enabled = False
        txt_ItemLevel_SC(i).Enabled = False
        cmb_GemSelectSC1(i).Enabled = False
        cmb_GemSelectSC2(i).Enabled = False
        cmb_GemSelectSC3(i).Enabled = False
        cmb_GemSelectSC4(i).Enabled = False
        
        cmb_GemEffectSC1(i).Enabled = False
        cmb_GemEffectSC2(i).Enabled = False
        cmb_GemEffectSC3(i).Enabled = False
        cmb_GemEffectSC4(i).Enabled = False
        
        cmb_GemAmountSC1(i).Enabled = False
        cmb_GemAmountSC2(i).Enabled = False
        cmb_GemAmountSC3(i).Enabled = False
        cmb_GemAmountSC4(i).Enabled = False
        
        cmb_GemSelectSC5(i).Enabled = False
        cmb_GemEffectSC5(i).Enabled = False
        txt_GemAmountSC5(i).Enabled = False
        
        cmb_TinctureSelectSC(i).Enabled = False
        cmb_TinctureEffectSC(i).Enabled = False
        
        cmd_SaveItem_SC(i).Enabled = False
        cmd_LoadItem_SC(i).Enabled = False
        cmd_ClearItem_SC(i).Enabled = False
        
        cmb_GemSelect_DP1(i).Enabled = False
        cmb_GemEffect_DP1(i).Enabled = False
        txt_GemAmount_DP1(i).Enabled = False
        
        cmb_GemSelect_DP2(i).Enabled = False
        cmb_GemEffect_DP2(i).Enabled = False
        txt_GemAmount_DP2(i).Enabled = False
        
        cmb_GemSelect_DP3(i).Enabled = False
        cmb_GemEffect_DP3(i).Enabled = False
        txt_GemAmount_DP3(i).Enabled = False
        
        cmb_GemSelect_DP4(i).Enabled = False
        cmb_GemEffect_DP4(i).Enabled = False
        txt_GemAmount_DP4(i).Enabled = False
        
        cmb_GemSelect_DP5(i).Enabled = False
        cmb_GemEffect_DP5(i).Enabled = False
        txt_GemAmount_DP5(i).Enabled = False
        
        cmb_GemSelect_DP6(i).Enabled = False
        cmb_GemEffect_DP6(i).Enabled = False
        txt_GemAmount_DP6(i).Enabled = False
        
        cmb_GemSelect_DP7(i).Enabled = False
        cmb_GemEffect_DP7(i).Enabled = False
        txt_GemAmount_DP7(i).Enabled = False
        
        cmb_GemSelect_DP8(i).Enabled = False
        cmb_GemEffect_DP8(i).Enabled = False
        txt_GemAmount_DP8(i).Enabled = False
        
        cmb_GemSelect_DP9(i).Enabled = False
        cmb_GemEffect_DP9(i).Enabled = False
        txt_GemAmount_DP9(i).Enabled = False
        
        cmb_GemSelect_DP10(i).Enabled = False
        cmb_GemEffect_DP10(i).Enabled = False
        txt_GemAmount_DP10(i).Enabled = False
        
        cmb_GemSelect_DP11(i).Enabled = False
        cmb_GemEffect_DP11(i).Enabled = False
        txt_GemAmount_DP11(i).Enabled = False
        
        cmb_GemSelect_DP12(i).Enabled = False
        cmb_GemEffect_DP12(i).Enabled = False
        txt_GemAmount_DP12(i).Enabled = False
        
        opt_Alb(i).Enabled = False
        opt_Hib(i).Enabled = False
        opt_Mid(i).Enabled = False
        opt_All(i).Enabled = False
        
        txt_ItemName_DP(i).Enabled = False
        txt_AFDPS_DP(i).Enabled = False
        txt_ItemLevel_DP(i).Enabled = False
        txt_ItemSPD_DP(i).Enabled = False
        txt_ItemQuality(i).Enabled = False
        
        cmd_SaveItem_DP(i).Enabled = False
        cmd_LoadItem_DP(i).Enabled = False
        cmd_ClearItem_DP(i).Enabled = False
        
        list_Skills.Enabled = False
        list_OtherBonus.Enabled = False
        
    Next i
    

End Sub

Private Sub SetInitialControls(Progress As Label, Status As Label)

    Status.Caption = "Setting Controls"
    
    txt_CharacterName.SetFocus
    Progress.Width = Progress.Width + SP_SM_PROGRESS_CHANGE
    
    txt_CharacterName.TabIndex = 0
    cmb_Realm.TabIndex = 1
    opt_Gender(0).TabIndex = 2
    opt_Gender(1).TabIndex = 3
    cmb_Race.TabIndex = 4
    cmb_Class.TabIndex = 5
    txt_Level.TabIndex = 6
    txt_RealmRank.TabIndex = 7
    txt_RealmLevel.TabIndex = 8
    txt_RealmPoints.TabIndex = 9
    
    Progress.Width = Progress.Width + SP_SM_PROGRESS_CHANGE
    
End Sub

Private Sub SetControlTabstops(Index As Integer, bDrop As Boolean)

    On Error Resume Next
    
    Dim Ctr As Integer
    Dim bFlag As Boolean
    
    If TEMPLATE_LOADING = False Then
        For Ctr = 0 To 21
                
            'set crafted tabstops
            cmb_ItemQuality(Ctr).TabStop = False
            txt_ItemLevel_SC(Ctr).TabStop = False
            
            chk_Equip_SC(Ctr).TabStop = False
            
            cmb_GemSelectSC1(Ctr).TabStop = False
            cmb_GemEffectSC1(Ctr).TabStop = False
            cmb_GemAmountSC1(Ctr).TabStop = False
            
            cmb_GemSelectSC2(Ctr).TabStop = False
            cmb_GemEffectSC2(Ctr).TabStop = False
            cmb_GemAmountSC2(Ctr).TabStop = False
            
            cmb_GemSelectSC3(Ctr).TabStop = False
            cmb_GemEffectSC3(Ctr).TabStop = False
            cmb_GemAmountSC3(Ctr).TabStop = False
            
            cmb_GemSelectSC4(Ctr).TabStop = False
            cmb_GemEffectSC4(Ctr).TabStop = False
            cmb_GemAmountSC4(Ctr).TabStop = False
            
            cmb_GemSelectSC5(Ctr).TabStop = False
            cmb_GemEffectSC5(Ctr).TabStop = False
            txt_GemAmountSC5(Ctr).TabStop = False
            
            cmb_TinctureSelectSC(Ctr).TabStop = False
            cmb_TinctureEffectSC(Ctr).TabStop = False
            
            cmd_SaveItem_SC(Ctr).TabStop = False
            cmd_LoadItem_SC(Ctr).TabStop = False
            cmd_ClearItem_SC(Ctr).TabStop = False
            
            'set drop tabstops
            chk_Equip_DP(Ctr).TabStop = False
            
            cmb_GemSelect_DP1(Ctr).TabStop = False
            cmb_GemEffect_DP1(Ctr).TabStop = False
            txt_GemAmount_DP1(Ctr).TabStop = False
            
            cmb_GemSelect_DP2(Ctr).TabStop = False
            cmb_GemEffect_DP2(Ctr).TabStop = False
            txt_GemAmount_DP2(Ctr).TabStop = False
            
            cmb_GemSelect_DP3(Ctr).TabStop = False
            cmb_GemEffect_DP3(Ctr).TabStop = False
            txt_GemAmount_DP3(Ctr).TabStop = False
            
            cmb_GemSelect_DP4(Ctr).TabStop = False
            cmb_GemEffect_DP4(Ctr).TabStop = False
            txt_GemAmount_DP4(Ctr).TabStop = False
            
            cmb_GemSelect_DP5(Ctr).TabStop = False
            cmb_GemEffect_DP5(Ctr).TabStop = False
            txt_GemAmount_DP5(Ctr).TabStop = False
            
            cmb_GemSelect_DP6(Ctr).TabStop = False
            cmb_GemEffect_DP6(Ctr).TabStop = False
            txt_GemAmount_DP6(Ctr).TabStop = False
            
            cmb_GemSelect_DP7(Ctr).TabStop = False
            cmb_GemEffect_DP7(Ctr).TabStop = False
            txt_GemAmount_DP7(Ctr).TabStop = False
            
            cmb_GemSelect_DP8(Ctr).TabStop = False
            cmb_GemEffect_DP8(Ctr).TabStop = False
            txt_GemAmount_DP8(Ctr).TabStop = False
            
            cmb_GemSelect_DP9(Ctr).TabStop = False
            cmb_GemEffect_DP9(Ctr).TabStop = False
            txt_GemAmount_DP9(Ctr).TabStop = False
            
            cmb_GemSelect_DP10(Ctr).TabStop = False
            cmb_GemEffect_DP10(Ctr).TabStop = False
            txt_GemAmount_DP10(Ctr).TabStop = False
            
            cmb_GemSelect_DP11(Ctr).TabStop = False
            cmb_GemEffect_DP11(Ctr).TabStop = False
            txt_GemAmount_DP11(Ctr).TabStop = False
            
            cmb_GemSelect_DP12(Ctr).TabStop = False
            cmb_GemEffect_DP12(Ctr).TabStop = False
            txt_GemAmount_DP12(Ctr).TabStop = False
            
            opt_Alb(Ctr).TabStop = False
            opt_Hib(Ctr).TabStop = False
            opt_Mid(Ctr).TabStop = False
            opt_All(Ctr).TabStop = False
            
            txt_ItemName_DP(Ctr).TabStop = False
            txt_AFDPS_DP(Ctr).TabStop = False
            txt_ItemLevel_DP(Ctr).TabStop = False
            txt_ItemSPD_DP(Ctr).TabStop = False
            txt_ItemQuality(Ctr).TabStop = False
            
            cmd_SaveItem_DP(Ctr).TabStop = False
            cmd_LoadItem_DP(Ctr).TabStop = False
            cmd_ClearItem_DP(Ctr).TabStop = False
            
        Next Ctr
        
        If bDrop Then
        
            'set drop tabstops
            chk_Equip_DP(Index).TabStop = True
            
            cmb_GemSelect_DP1(Index).TabStop = True
            cmb_GemEffect_DP1(Index).TabStop = True
            txt_GemAmount_DP1(Index).TabStop = True
            
            cmb_GemSelect_DP2(Index).TabStop = True
            cmb_GemEffect_DP2(Index).TabStop = True
            txt_GemAmount_DP2(Index).TabStop = True
            
            cmb_GemSelect_DP3(Index).TabStop = True
            cmb_GemEffect_DP3(Index).TabStop = True
            txt_GemAmount_DP3(Index).TabStop = True
            
            cmb_GemSelect_DP4(Index).TabStop = True
            cmb_GemEffect_DP4(Index).TabStop = True
            txt_GemAmount_DP4(Index).TabStop = True
            
            cmb_GemSelect_DP5(Index).TabStop = True
            cmb_GemEffect_DP5(Index).TabStop = True
            txt_GemAmount_DP5(Index).TabStop = True
            
            cmb_GemSelect_DP6(Index).TabStop = True
            cmb_GemEffect_DP6(Index).TabStop = True
            txt_GemAmount_DP6(Index).TabStop = True
            
            cmb_GemSelect_DP7(Index).TabStop = True
            cmb_GemEffect_DP7(Index).TabStop = True
            txt_GemAmount_DP7(Index).TabStop = True
            
            cmb_GemSelect_DP8(Index).TabStop = True
            cmb_GemEffect_DP8(Index).TabStop = True
            txt_GemAmount_DP8(Index).TabStop = True
            
            cmb_GemSelect_DP9(Index).TabStop = True
            cmb_GemEffect_DP9(Index).TabStop = True
            txt_GemAmount_DP9(Index).TabStop = True
            
            cmb_GemSelect_DP10(Index).TabStop = True
            cmb_GemEffect_DP10(Index).TabStop = True
            txt_GemAmount_DP10(Index).TabStop = True
            
            cmb_GemSelect_DP11(Index).TabStop = True
            cmb_GemEffect_DP11(Index).TabStop = True
            txt_GemAmount_DP11(Index).TabStop = True
            
            cmb_GemSelect_DP12(Index).TabStop = True
            cmb_GemEffect_DP12(Index).TabStop = True
            txt_GemAmount_DP12(Index).TabStop = True
            
            opt_Alb(Index).TabStop = True
            opt_Hib(Index).TabStop = True
            opt_Mid(Index).TabStop = True
            opt_All(Index).TabStop = True
            
            txt_ItemName_DP(Index).TabStop = True
            txt_AFDPS_DP(Index).TabStop = True
            txt_ItemLevel_DP(Index).TabStop = True
            txt_ItemSPD_DP(Index).TabStop = True
            txt_ItemQuality(Index).TabStop = True
            
            cmd_SaveItem_DP(Index).TabStop = True
            cmd_LoadItem_DP(Index).TabStop = True
            cmd_ClearItem_DP(Index).TabStop = True
            
            'set the tabstops on and new indicies for the drop item
            cmb_GemSelect_DP1(Index).SetFocus
            
            chk_Equip_DP(Index).TabIndex = 10
                        
            cmb_GemSelect_DP1(Index).TabIndex = 11
            cmb_GemEffect_DP1(Index).TabIndex = 12
            txt_GemAmount_DP1(Index).TabIndex = 13
            
            cmb_GemSelect_DP2(Index).TabIndex = 14
            cmb_GemEffect_DP2(Index).TabIndex = 15
            txt_GemAmount_DP2(Index).TabIndex = 16
            
            cmb_GemSelect_DP3(Index).TabIndex = 17
            cmb_GemEffect_DP3(Index).TabIndex = 18
            txt_GemAmount_DP3(Index).TabIndex = 19
            
            cmb_GemSelect_DP4(Index).TabIndex = 20
            cmb_GemEffect_DP4(Index).TabIndex = 21
            txt_GemAmount_DP4(Index).TabIndex = 22
            
            cmb_GemSelect_DP5(Index).TabIndex = 23
            cmb_GemEffect_DP5(Index).TabIndex = 24
            txt_GemAmount_DP5(Index).TabIndex = 25
            
            cmb_GemSelect_DP6(Index).TabIndex = 26
            cmb_GemEffect_DP6(Index).TabIndex = 27
            txt_GemAmount_DP6(Index).TabIndex = 28
            
            cmb_GemSelect_DP7(Index).TabIndex = 29
            cmb_GemEffect_DP7(Index).TabIndex = 30
            txt_GemAmount_DP7(Index).TabIndex = 31
            
            cmb_GemSelect_DP8(Index).TabIndex = 32
            cmb_GemEffect_DP8(Index).TabIndex = 33
            txt_GemAmount_DP8(Index).TabIndex = 34
            
            cmb_GemSelect_DP9(Index).TabIndex = 35
            cmb_GemEffect_DP9(Index).TabIndex = 36
            txt_GemAmount_DP9(Index).TabIndex = 37
            
            cmb_GemSelect_DP10(Index).TabIndex = 38
            cmb_GemEffect_DP10(Index).TabIndex = 39
            txt_GemAmount_DP10(Index).TabIndex = 40
            
            cmb_GemSelect_DP11(Index).TabIndex = 41
            cmb_GemEffect_DP11(Index).TabIndex = 42
            txt_GemAmount_DP11(Index).TabIndex = 43
            
            cmb_GemSelect_DP12(Index).TabIndex = 44
            cmb_GemEffect_DP12(Index).TabIndex = 45
            txt_GemAmount_DP12(Index).TabIndex = 46
            
            opt_Alb(Index).TabIndex = 47
            opt_Hib(Index).TabIndex = 48
            opt_Mid(Index).TabIndex = 49
            opt_All(Index).TabIndex = 50
            
            txt_ItemName_DP(Index).TabIndex = 51
            txt_AFDPS_DP(Index).TabIndex = 52
            txt_ItemLevel_DP(Index).TabIndex = 53
            txt_ItemSPD_DP(Index).TabIndex = 54
            txt_ItemQuality(Index).TabIndex = 55
            
            cmd_SaveItem_DP(Index).TabIndex = 56
            cmd_LoadItem_DP(Index).TabIndex = 57
            cmd_ClearItem_DP(Index).TabIndex = 58
            
        Else
        
            'set crafted tabstops
            cmb_ItemQuality(Index).TabStop = True
            txt_ItemLevel_SC(Index).TabStop = True
            
            chk_Equip_SC(Index).TabStop = True
            
            cmb_GemSelectSC1(Index).TabStop = True
            cmb_GemEffectSC1(Index).TabStop = True
            cmb_GemAmountSC1(Index).TabStop = True
            
            cmb_GemSelectSC2(Index).TabStop = True
            cmb_GemEffectSC2(Index).TabStop = True
            cmb_GemAmountSC2(Index).TabStop = True
            
            cmb_GemSelectSC3(Index).TabStop = True
            cmb_GemEffectSC3(Index).TabStop = True
            cmb_GemAmountSC3(Index).TabStop = True
            
            cmb_GemSelectSC4(Index).TabStop = True
            cmb_GemEffectSC4(Index).TabStop = True
            cmb_GemAmountSC4(Index).TabStop = True
            
            cmb_GemSelectSC5(Index).TabStop = True
            cmb_GemEffectSC5(Index).TabStop = True
            txt_GemAmountSC5(Index).TabStop = True
            
            cmb_TinctureSelectSC(Index).TabStop = True
            cmb_TinctureEffectSC(Index).TabStop = True
            
            cmd_SaveItem_SC(Index).TabStop = True
            cmd_LoadItem_SC(Index).TabStop = True
            cmd_ClearItem_SC(Index).TabStop = True
            
            'set the tabstops on and new indicies for the sc item
            cmb_GemSelectSC1(Index).SetFocus
            
            cmb_ItemQuality(Index).TabIndex = 10
            txt_ItemLevel_SC(Index).TabIndex = 11
            
            chk_Equip_SC(Index).TabIndex = 12
            
            cmb_GemSelectSC1(Index).TabIndex = 13
            cmb_GemEffectSC1(Index).TabIndex = 14
            cmb_GemAmountSC1(Index).TabIndex = 15
            
            cmb_GemSelectSC2(Index).TabIndex = 16
            cmb_GemEffectSC2(Index).TabIndex = 17
            cmb_GemAmountSC2(Index).TabIndex = 18
            
            cmb_GemSelectSC3(Index).TabIndex = 19
            cmb_GemEffectSC3(Index).TabIndex = 20
            cmb_GemAmountSC3(Index).TabIndex = 21
            
            cmb_GemSelectSC4(Index).TabIndex = 22
            cmb_GemEffectSC4(Index).TabIndex = 23
            cmb_GemAmountSC4(Index).TabIndex = 24
            
            cmb_GemSelectSC5(Index).TabIndex = 25
            cmb_GemEffectSC5(Index).TabIndex = 26
            txt_GemAmountSC5(Index).TabIndex = 27
            
            cmb_TinctureSelectSC(Index).TabIndex = 28
            cmb_TinctureEffectSC(Index).TabIndex = 29
            
            cmd_SaveItem_SC(Index).TabIndex = 30
            cmd_LoadItem_SC(Index).TabIndex = 31
            cmd_ClearItem_SC(Index).TabIndex = 32
                
        End If
    End If
End Sub

Public Sub RefreshAttributeLabels()
    
    Dim Ctr As Integer
    Dim lResult As Long
    Dim lMaxResist As Long
    
    lMaxResist = ((TOON.LEVEL / 2) + 1)
    
    For Ctr = WS_ATTR_STR To WS_ATTR_CHA
        
        If Ctr < WS_ATTR_INT Then
            lbl_StatValue(Ctr).Caption = TOON.STAT_MATRIX((Ctr + 1), SM_LOC_BASE) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_CREATION) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_LEVEL) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_BUFFS) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_REALMABILITY) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_VAMPIIR_BUFF)

        Else
            lbl_StatValue(Ctr).Caption = TOON.STAT_MATRIX((Ctr + 1), SM_LOC_BASE) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_CREATION) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_LEVEL) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_BUFFS) _
                                       + TOON.STAT_MATRIX((Ctr + 1), SM_LOC_VAMPIIR_BUFF)
        End If
        
        Select Case Ctr
            Case WS_ATTR_STR
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.STR
            Case WS_ATTR_CON
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.CON
            Case WS_ATTR_DEX
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.DEX
            Case WS_ATTR_QUI
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.QUI
            Case WS_ATTR_INT
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.INT
            Case WS_ATTR_EMP
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.EMP
            Case WS_ATTR_PIE
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.PIE
            Case WS_ATTR_CHA
                lbl_StatValue(Ctr).Caption = Val(lbl_StatValue(Ctr).Caption) + TOON.CHA
        End Select
        
    Next Ctr
    
    If (TOON.pStat = SM_INT Or TOON.sStat = SM_INT Or TOON.tStat = SM_INT) Then
        lbl_StatValue(WS_ATTR_INT).Caption = Val(lbl_StatValue(WS_ATTR_INT).Caption) + TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY)
    ElseIf (TOON.pStat = SM_EMP Or TOON.sStat = SM_EMP Or TOON.tStat = SM_EMP) And (TOON.pStat <> SM_CHA) Then
        lbl_StatValue(WS_ATTR_EMP).Caption = Val(lbl_StatValue(WS_ATTR_EMP).Caption) + TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY)
    ElseIf (TOON.pStat = SM_PIE Or TOON.sStat = SM_PIE Or TOON.tStat = SM_PIE) Then
        lbl_StatValue(WS_ATTR_PIE).Caption = Val(lbl_StatValue(WS_ATTR_PIE).Caption) + TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY)
    ElseIf (TOON.pStat = SM_CHA Or TOON.sStat = SM_CHA Or TOON.tStat = SM_CHA) Then
        lbl_StatValue(WS_ATTR_CHA).Caption = Val(lbl_StatValue(WS_ATTR_CHA).Caption) + TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY)
    End If
    
    
    lbl_ResistValue(0).Tag = TOON.STAT_MATRIX(SM_CRUSH_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(0).Tag) + SumColumn(SM_CRUSH_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(0).Tag) + lMaxResist) Then
        lbl_ResistValue(0) = (Val(lbl_ResistValue(0).Tag) + lMaxResist)
    Else
        lbl_ResistValue(0) = lResult
    End If
    
    lbl_ResistValue(1).Tag = TOON.STAT_MATRIX(SM_SLASH_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(1).Tag) + SumColumn(SM_SLASH_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(1).Tag) + lMaxResist) Then
        lbl_ResistValue(1) = (Val(lbl_ResistValue(1).Tag) + lMaxResist)
    Else
        lbl_ResistValue(1) = lResult
    End If
    
    lbl_ResistValue(2).Tag = TOON.STAT_MATRIX(SM_THRUST_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(2).Tag) + SumColumn(SM_THRUST_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(2).Tag) + lMaxResist) Then
        lbl_ResistValue(2) = (Val(lbl_ResistValue(2).Tag) + lMaxResist)
    Else
        lbl_ResistValue(2) = lResult
    End If
    
    lbl_ResistValue(3).Tag = TOON.STAT_MATRIX(SM_HEAT_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(3).Tag) + SumColumn(SM_HEAT_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(3).Tag) + lMaxResist) Then
        lbl_ResistValue(3) = (Val(lbl_ResistValue(3).Tag) + lMaxResist)
    Else
        lbl_ResistValue(3) = lResult
    End If
    
    lbl_ResistValue(4).Tag = TOON.STAT_MATRIX(SM_COLD_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(4).Tag) + SumColumn(SM_COLD_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(4).Tag) + lMaxResist) Then
        lbl_ResistValue(4) = (Val(lbl_ResistValue(4).Tag) + lMaxResist)
    Else
        lbl_ResistValue(4) = lResult
    End If
    
    lbl_ResistValue(5).Tag = TOON.STAT_MATRIX(SM_MATTER_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(5).Tag) + SumColumn(SM_MATTER_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(5).Tag) + lMaxResist) Then
        lbl_ResistValue(5) = (Val(lbl_ResistValue(5).Tag) + lMaxResist)
    Else
        lbl_ResistValue(5) = lResult
    End If
    
    lbl_ResistValue(6).Tag = TOON.STAT_MATRIX(SM_BODY_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(6).Tag) + SumColumn(SM_BODY_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(6).Tag) + lMaxResist) Then
        lbl_ResistValue(6) = (Val(lbl_ResistValue(6).Tag) + lMaxResist)
    Else
        lbl_ResistValue(6) = lResult
    End If
    
    lbl_ResistValue(7).Tag = TOON.STAT_MATRIX(SM_SPIRIT_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(7).Tag) + SumColumn(SM_SPIRIT_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(7).Tag) + lMaxResist) Then
        lbl_ResistValue(7) = (Val(lbl_ResistValue(7).Tag) + lMaxResist)
    Else
        lbl_ResistValue(7) = lResult
    End If
    
    lbl_ResistValue(8).Tag = TOON.STAT_MATRIX(SM_ENERGY_RESIST, SM_LOC_BASE)
    lResult = Val(lbl_ResistValue(8).Tag) + SumColumn(SM_ENERGY_RESIST, SM_LOC_BASE)
    If lResult > (Val(lbl_ResistValue(8).Tag) + lMaxResist) Then
        lbl_ResistValue(8) = (Val(lbl_ResistValue(8).Tag) + lMaxResist)
    Else
        lbl_ResistValue(8) = lResult
    End If
    
    For Ctr = 0 To 8
        If Val(lbl_ResistValue(Ctr).Tag) <> 0 Then
            lbl_ResistValue(Ctr).FontBold = True
            lbl_ResistName(Ctr).FontBold = True
            lbl_ResistValue(Ctr).ToolTipText = "Racial Resist +" & lbl_ResistValue(Ctr).Tag
            lbl_ResistName(Ctr).ToolTipText = "Racial Resist +" & lbl_ResistValue(Ctr).Tag
        Else
            lbl_ResistValue(Ctr).FontBold = False
            lbl_ResistName(Ctr).FontBold = False
            lbl_ResistValue(Ctr).ToolTipText = vbNullString
            lbl_ResistName(Ctr).ToolTipText = vbNullString
        End If
    Next Ctr

End Sub

Private Sub ResetAttributeLabels()
    
    Dim Ctr As Integer
    
    lbl_StatName(0).Caption = "Str"
    lbl_StatName(1).Caption = "Con"
    lbl_StatName(2).Caption = "Dex"
    lbl_StatName(3).Caption = "Qui"
    lbl_StatName(4).Caption = "Int"
    lbl_StatName(5).Caption = "Emp"
    lbl_StatName(6).Caption = "Pie"
    lbl_StatName(7).Caption = "Cha"
    
    For Ctr = lbl_StatValue.LBound To lbl_StatValue.UBound
        lbl_StatName(Ctr).FontBold = False
        lbl_StatValue(Ctr).FontBold = False
        lbl_StatValue(Ctr).Tag = 0
        lbl_StatValue(Ctr).ForeColor = &H800000
        lbl_StatValue(Ctr).Caption = vbNullString
        lbl_PST(Ctr).Caption = vbNullString
    Next Ctr
    
    For Ctr = lbl_StatValue.LBound To lbl_ResistValue.UBound
        lbl_ResistName(Ctr).FontBold = False
        lbl_ResistName(Ctr).Tag = 0
        lbl_ResistValue(Ctr).FontBold = False
        lbl_ResistValue(Ctr) = 0
    Next Ctr
    
End Sub

Private Sub RefreshMasterLevel(tToon As TOON_TYPE)

    Dim i As Long
    
    On Error Resume Next
    
    For i = 0 To 7
        frameMLSpec(i).FontBold = False
        frameMLSpec(i).ForeColor = &H800000
    Next i
    
    For i = 0 To 79
        lbl_ML(i).FontBold = False
    Next i
    
    If (tToon.ML_OPTION_1 <> WS_NO_VALUE) And (tToon.ML_OPTION_2 <> WS_NO_VALUE) Then
        frameMLSpec(tToon.ML_OPTION_1).FontBold = True
        frameMLSpec(tToon.ML_OPTION_2).FontBold = True
        
        frameMLSpec(tToon.ML_OPTION_1).ForeColor = &H8000&      'green
        frameMLSpec(tToon.ML_OPTION_2).ForeColor = &H8000&      'green
        
        For i = (tToon.ML_OPTION_1 * 10) To ((tToon.ML_OPTION_1 * 10) + 9)
            lbl_ML(i).FontBold = True
        Next i
        
        For i = (tToon.ML_OPTION_2 * 10) To ((tToon.ML_OPTION_2 * 10) + 9)
            lbl_ML(i).FontBold = True
        Next i
    End If
    
End Sub

Private Sub cmb_TinctureEffectSC_Click(Index As Integer)
    
    If cmb_TinctureEffectSC(Index).Text <> vbNullString Then
        Select Case LCase$(cmb_TinctureSelectSC(Index).Text)
            Case "drops"
                lbl_TinctureCostSC(Index).Caption = FormatCost(Val(AlchemyEffects(AE_DROPS).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)))
                lbl_TinctureCostSC(Index).Tag = AlchemyEffects(AE_DROPS).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)
                lbl_TinctureNameSC(Index).Caption = AlchemyEffects(AE_DROPS).AlchDetails(AD_NAME, cmb_TinctureEffectSC(Index).ListIndex)
            Case "procs"
                lbl_TinctureCostSC(Index).Caption = FormatCost(Val(AlchemyEffects(AE_PROCS).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)))
                lbl_TinctureCostSC(Index).Tag = AlchemyEffects(AE_PROCS).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)
                lbl_TinctureNameSC(Index).Caption = AlchemyEffects(AE_PROCS).AlchDetails(AD_NAME, cmb_TinctureEffectSC(Index).ListIndex)
            Case "charges"
                lbl_TinctureCostSC(Index).Caption = FormatCost(Val(AlchemyEffects(AE_CHARGES).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)))
                lbl_TinctureCostSC(Index).Tag = AlchemyEffects(AE_CHARGES).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)
                lbl_TinctureNameSC(Index).Caption = AlchemyEffects(AE_CHARGES).AlchDetails(AD_NAME, cmb_TinctureEffectSC(Index).ListIndex)
            Case "reactives"
                lbl_TinctureCostSC(Index).Caption = FormatCost(Val(AlchemyEffects(AE_REACTIVES).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)))
                lbl_TinctureCostSC(Index).Tag = AlchemyEffects(AE_REACTIVES).AlchDetails(AD_COST, cmb_TinctureEffectSC(Index).ListIndex)
                lbl_TinctureNameSC(Index).Caption = AlchemyEffects(AE_REACTIVES).AlchDetails(AD_NAME, cmb_TinctureEffectSC(Index).ListIndex)
        End Select
        
        Call SetItemCost(Index)
    End If
       
End Sub

Private Sub cmb_TinctureSelectSC_Click(Index As Integer)
     
    cmb_TinctureEffectSC(Index).Clear
    lbl_TinctureCostSC(Index).Caption = vbNullString
    lbl_TinctureCostSC(Index).Tag = vbNullString
    lbl_TinctureNameSC(Index).Caption = vbNullString
    
    If cmb_TinctureSelectSC(Index).Text <> vbNullString Then Call LoadSCProcEffects(Index, cmb_TinctureSelectSC(Index).Text)
        
End Sub

Private Sub UpdateSpecPoints()

    Dim lCtr As Integer
    
    Dim TotalSpecPoints As Long
    Dim SpentSpecPoints As Long
    
    TotalSpecPoints = CalcSpecPoints(TOON, 0) 'Val(lbl_SpecPoints(1).Tag))
    
    For lCtr = 0 To lbl_SpecSpent.UBound
        SpentSpecPoints = SpentSpecPoints + Val(lbl_SpecSpent(lCtr).Tag)
    Next lCtr
        
    lbl_SpecPoints(0).Caption = "Spec Points: " & TotalSpecPoints & " :: Remaining: " & TotalSpecPoints - SpentSpecPoints
    If (TotalSpecPoints - SpentSpecPoints) > 0 Then
        lbl_SpecPoints(0).ForeColor = &H800000
    ElseIf (TotalSpecPoints - SpentSpecPoints) < 0 Then
        lbl_SpecPoints(0).ForeColor = &HC0&
    ElseIf (TotalSpecPoints - SpentSpecPoints) = 0 Then
        lbl_SpecPoints(0).ForeColor = &H8000&
    End If
    
End Sub

Private Sub cmd_addSkillLevel_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_addSkillLevel(Index).Picture = LoadResPicture("DOUBLE_RIGHT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_addSkillLevel_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Dim TotalSpecPoints As Long
    Dim SpentSpecPoints As Long
    Dim lSpellIndex As Long
    
    Dim lCtr As Integer
    
    CLICKED_SKILL_UP = True
    
    Set cmd_addSkillLevel(Index).Picture = LoadResPicture("DOUBLE_RIGHT_UP", vbResBitmap)
    
    'load the current index of spells
    lSpellIndex = Index - CURRENT_STYLE_COUNT
    
    If (Val(frameTrainer(1).Tag) <> lSpellIndex) Or (Val(frameTrainer(1).Tag) = WS_NO_VALUE) Then
    
        Call lbl_SkillName_Click(Index)
        
    End If
    
    If Val(lbl_SkillLevel(Index)) + 1 <= TOON.LEVEL Then
        TotalSpecPoints = CalcSpecPoints(TOON, 0) 'Val(lbl_SpecPoints(1).Tag))
        
        lbl_SkillLevel(Index).Caption = Val(lbl_SkillLevel(Index).Caption) + 1
        If TYPED_SKILL_UP = False Then txt_SkillLevel(Index).Text = lbl_SkillLevel(Index).Caption
                
        If (TOON.AUTO_TRAIN = True And lbl_SkillLevel(Index).Tag = True) Then
            If Val(lbl_SkillLevel(Index).Caption) > 12 Then
                lbl_SpecSpent(Index).Tag = (((Val(lbl_SkillLevel(Index).Caption) * (Val(lbl_SkillLevel(Index).Caption) + 1)) / 2) - 1) - 77
            Else
                lbl_SpecSpent(Index).Tag = 0
            End If
            
        Else
            lbl_SpecSpent(Index).Tag = ((Val(lbl_SkillLevel(Index).Caption) * (Val(lbl_SkillLevel(Index).Caption) + 1)) / 2) - 1
        End If
        
        lbl_SpecSpent(Index).Caption = "Spent: " & lbl_SpecSpent(Index).Tag
        
        Call UpdateSpecPoints
        
        Call SetSkillLevelHighlight(Index, Val(lbl_SkillLevel(Index).Caption))
        Call SetSpellClassHighlight(Index, Val(lbl_SkillLevel(Index).Caption))
        
        shape_SpellBar(Index * 100).Width = (((Val(lbl_SkillLevel(Index).Caption) * 2) / 100) * 5940)
        
    End If
    
    CLICKED_SKILL_UP = False
    
End Sub

Private Sub cmd_ConfigItemSCA_OK_Click()
    
End Sub

Private Sub cmd_subSkillLevel_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Set cmd_subSkillLevel(Index).Picture = LoadResPicture("DOUBLE_LEFT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_subSkillLevel_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_subSkillLevel(Index).Picture = LoadResPicture("DOUBLE_LEFT_UP", vbResBitmap)
    
    Dim TotalSpecPoints As Long
    Dim SpentSpecPoints As Long
    Dim lSpellIndex As Long
    
    Dim lCtr As Integer
    
    CLICKED_SKILL_UP = True
    
    'load the current index of spells
    lSpellIndex = Index - CURRENT_STYLE_COUNT
    
    If (Val(frameTrainer(1).Tag) <> lSpellIndex) Or (Val(frameTrainer(1).Tag) = WS_NO_VALUE) Then
    
        Call lbl_SkillName_Click(Index)
        
    End If
    
    If (Val(lbl_SkillLevel(Index)) - 1) > 0 Then
        TotalSpecPoints = CalcSpecPoints(TOON, 0) 'Val(lbl_SpecPoints(1).Tag))
        
        lbl_SkillLevel(Index).Caption = Val(lbl_SkillLevel(Index).Caption) - 1
        If TYPED_SKILL_UP = False Then txt_SkillLevel(Index).Text = lbl_SkillLevel(Index).Caption
        
        If (TOON.AUTO_TRAIN = True And lbl_SkillLevel(Index).Tag = True) Then
            If Val(lbl_SkillLevel(Index).Caption) > 12 Then
                lbl_SpecSpent(Index).Tag = (((Val(lbl_SkillLevel(Index).Caption) * (Val(lbl_SkillLevel(Index).Caption) + 1)) / 2) - 1) - 77
            Else
                lbl_SpecSpent(Index).Tag = 0
            End If
            
        Else
            lbl_SpecSpent(Index).Tag = ((Val(lbl_SkillLevel(Index).Caption) * (Val(lbl_SkillLevel(Index).Caption) + 1)) / 2) - 1
        End If
        
        lbl_SpecSpent(Index).Caption = "Spent: " & lbl_SpecSpent(Index).Tag
        
        Call UpdateSpecPoints
        
        Call SetSkillLevelHighlight(Index, Val(lbl_SkillLevel(Index).Caption))
        Call SetSpellClassHighlight(Index, Val(lbl_SkillLevel(Index).Caption))
        
        shape_SpellBar(Index * 100).Width = (((Val(lbl_SkillLevel(Index).Caption) * 2) / 100) * 5940)
    End If
    
    CLICKED_SKILL_UP = False
    
End Sub

Private Sub SetSpellClassHighlight(Index As Integer, lSkillLevel As Long)

    Dim i As Long
    Dim j As Long
    
    If shapeSpellClass.UBound > 0 Then
    
        For i = 0 To shapeSpellClass.UBound
        
            For j = 0 To 15
            
                If lSkillLevel >= Val(lbl_SpellDetail((i * 100) + j).Caption) Then
                    lbl_SpellDetail((i * 100) + j).FontBold = True
                Else
                    lbl_SpellDetail((i * 100) + j).FontBold = False
                End If
                
            Next j
                
        Next i
        
    End If
    
End Sub

Private Sub SetSkillLevelHighlight(Index As Integer, lSkillLevel As Long)

    Dim i As Long

    For i = 0 To 21
        If lSkillLevel >= Val(lbl_Skill((Index * 100) + i).Caption) Then
            lbl_Skill((Index * 100) + i).FontBold = True
        Else
            lbl_Skill((Index * 100) + i).FontBold = False
        End If
    Next i
    
End Sub

Public Sub ClickAddStat(Index As Integer, lCount As Long)
'working as intended 10/23/06
'this procedure is used in the loading of templates to simplify the adding of stats
'why repeat the same stuff in another sub

    Dim lCnt As Long
    
    If lCount <> 0 Then
                       
        For lCnt = 1 To lCount
            Call cmd_AddStat_MouseUp(Index, 0, 0, 0, 0)
        Next lCnt
        
    End If
    
End Sub

Public Sub ClickSubStat(Index As Integer, lCount As Long)

    Dim lCnt As Long
    
    If lCount <> 0 Then
        
        For lCnt = 1 To lCount
            Call cmd_SubStat_MouseUp(Index, 0, 0, 0, 0)
        Next lCnt
    
    End If
    
End Sub

Private Sub cmd_AddStat_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_AddStat(Index).Picture = LoadResPicture("SRIGHT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_AddStat_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Dim lCode As Long
    
    Set cmd_AddStat(Index).Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
    
    'add to selected stat
    If (Val(lbl_StatValue(Index).Tag) < 10) And TOON.CREATION_POINTS - 1 >= 0 Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) + 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS - 1
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) + 1
    ElseIf (Val(lbl_StatValue(Index).Tag) >= 10) And (Val(lbl_StatValue(Index).Tag) < 15) And TOON.CREATION_POINTS - 2 >= 0 Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) + 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS - 2
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) + 1
    ElseIf (Val(lbl_StatValue(Index).Tag) >= 15) And (Val(lbl_StatValue(Index).Tag) < 18) And TOON.CREATION_POINTS - 3 >= 0 Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) + 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS - 3
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) + 1
    End If
    
    WorkshopLabel(7).Caption = "Character Attributes :: (Points: " & TOON.CREATION_POINTS & ")"
    
    Select Case Index
        Case 0  'str
            lCode = 1
        Case 1  'con
            lCode = 2
        Case 2  'dex
            lCode = 3
        Case 3  'qui
            lCode = 4
        Case 4  'int
            lCode = 5
        Case 5  'emp
            lCode = 6
        Case 6  'pie
            lCode = 7
        Case 7  'cha
            lCode = 8
    End Select
    
    TOON.STAT_MATRIX(lCode, SM_LOC_CREATION) = Val(lbl_StatValue(Index).Tag)
    
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
    
End Sub

'Private Sub cmd_AutoTrain_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
'
'    If Index = 0 Then
'
'        Set cmd_AutoTrain(Index).Picture = LoadResPicture("DOUBLE_LEFT_DOWN", vbResBitmap)
'
'    ElseIf Index = 1 Then
'
'        Set cmd_AutoTrain(Index).Picture = LoadResPicture("DOUBLE_RIGHT_DOWN", vbResBitmap)
'
'    End If
'
'End Sub

'Private Sub cmd_AutoTrain_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
'
'    Dim lCtr As Integer
'    Dim SpentSpecPoints As Long
'    Dim TotalSpecPoints As Long
'
'    If Index = 0 Then
'
'        If Val(lbl_SpecPoints(1).Tag) > 1 Then
'
'            lbl_SpecPoints(1).Tag = Val(lbl_SpecPoints(1).Tag) - 1
'
'            If Val(lbl_SpecPoints(1).Tag) > 1 Then
'
'                lbl_SpecPoints(1).Caption = lbl_SpecPoints(1).Tag & " (Level: " & (Val(lbl_SpecPoints(1).Tag) * 4) & ")"
'
'            Else
'
'                lbl_SpecPoints(1).Caption = "None"
'
'            End If
'        End If
'
'        Set cmd_AutoTrain(Index).Picture = LoadResPicture("DOUBLE_LEFT_UP", vbResBitmap)
'
'    ElseIf Index = 1 Then
'
'        If Val(lbl_SpecPoints(1).Tag) < 12 Then
'
'            lbl_SpecPoints(1).Tag = Val(lbl_SpecPoints(1).Tag) + 1
'
'            If Val(lbl_SpecPoints(1).Tag) > 1 Then lbl_SpecPoints(1).Caption = lbl_SpecPoints(1).Tag & " (Level: " & (Val(lbl_SpecPoints(1).Tag) * 4) & ")"
'
'        End If
'
'        Set cmd_AutoTrain(Index).Picture = LoadResPicture("DOUBLE_RIGHT_UP", vbResBitmap)
'
'    End If
'
'    For lCtr = 0 To lbl_SpecSpent.UBound
'        SpentSpecPoints = SpentSpecPoints + Val(lbl_SpecSpent(lCtr).Tag)
'    Next lCtr
'
'    TotalSpecPoints = CalcSpecPoints(TOON, Val(lbl_SpecPoints(1).Tag))
'
'    lbl_SpecPoints(0).Caption = "Spec Points: " & TotalSpecPoints & " :: Remaining: " & TotalSpecPoints - SpentSpecPoints
'
'    If (TotalSpecPoints - SpentSpecPoints) > 0 Then
'        lbl_SpecPoints(0).ForeColor = &H800000
'    ElseIf (TotalSpecPoints - SpentSpecPoints) < 0 Then
'        lbl_SpecPoints(0).ForeColor = &HC0&
'    ElseIf (TotalSpecPoints - SpentSpecPoints) = 0 Then
'        lbl_SpecPoints(0).ForeColor = &H8000&
'    End If
'
'End Sub

Private Sub cmd_CharacterLevel_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    If Index = 0 Then
        Set cmd_CharacterLevel(Index).Picture = LoadResPicture("LARGE_LEFT_DOWN", vbResBitmap)
    ElseIf Index = 1 Then
        Set cmd_CharacterLevel(Index).Picture = LoadResPicture("LARGE_RIGHT_DOWN", vbResBitmap)
    End If
    
End Sub

Private Sub cmd_CharacterLevel_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Dim LVL As Long

    If Index = 0 Then
        
        With TOON
            If (.LEVEL > 5) Then
                If (.LEVEL <= 40) Then
                    LVL = .LEVEL
                    .LEVEL = LVL
                    .LEVEL = .LEVEL - 1
                Else
                    .LEVEL = .LEVEL - 0.5
                End If
                
                If .LEVEL - 1 = 4 Then
                    .STAT_MATRIX(.pStat, SM_LOC_LEVEL) = 0
                    .STAT_MATRIX(.sStat, SM_LOC_LEVEL) = 0
                    .STAT_MATRIX(.tStat, SM_LOC_LEVEL) = 0
                End If
                
                If cmb_Class.Text <> vbNullString Then
                    lbl_SpecPoints(0).Caption = "Spec Points: " & CalcSpecPoints(TOON, 0) ' Val(lbl_SpecPoints(1).Tag))
                    Call CalculatePSTValues(TOON)
                    Call RefreshAttributeLabels
                End If
            End If
            
            txt_Level.Text = .LEVEL
        End With
        
        Set cmd_CharacterLevel(Index).Picture = LoadResPicture("LARGE_LEFT_UP", vbResBitmap)
        
    ElseIf Index = 1 Then
        
        With TOON
        
            If (.LEVEL >= 5 And .LEVEL < 50) Then
                If (.LEVEL < 40) Then
                    LVL = .LEVEL
                    .LEVEL = LVL
                    .LEVEL = .LEVEL + 1
                Else
                    .LEVEL = .LEVEL + 0.5
                End If
                
                If cmb_Class.Text <> vbNullString Then
                    lbl_SpecPoints(0).Caption = "Spec Points: " & CalcSpecPoints(TOON, 0) 'Val(lbl_SpecPoints(1).Tag))
                    Call CalculatePSTValues(TOON)
                    Call RefreshAttributeLabels
                End If
            End If
        
            txt_Level.Text = .LEVEL
        End With
        
        Set cmd_CharacterLevel(Index) = LoadResPicture("LARGE_RIGHT_UP", vbResBitmap)

    End If
    
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
    
End Sub

Private Sub cmd_RA_ActiveDec_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_ActiveDec(Index).Picture = LoadResPicture("SLEFT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_RA_ActiveDec_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_ActiveDec(Index).Picture = LoadResPicture("SLEFT_UP", vbResBitmap)
    
    If cmd_RA_ActiveInc(Index).Tag > 0 Then
        
        Select Case cmd_RA_ActiveInc(Index).Tag
            Case 1
                lbl_RA_ActiveL1(Index).FontBold = False
                lbl_RA_ActiveL1(Index).ForeColor = &H800000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL1(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) - lbl_RA_ActiveL1(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = vbNullString
            Case 2
                lbl_RA_ActiveL2(Index).FontBold = False
                lbl_RA_ActiveL2(Index).ForeColor = &H800000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL2(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) - lbl_RA_ActiveL2(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_1
            Case 3
                lbl_RA_ActiveL3(Index).FontBold = False
                lbl_RA_ActiveL3(Index).ForeColor = &H800000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL3(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) - lbl_RA_ActiveL3(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_2
            Case 4
                lbl_RA_ActiveL4(Index).FontBold = False
                lbl_RA_ActiveL4(Index).ForeColor = &H800000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL4(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) - lbl_RA_ActiveL4(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_3
            Case 5
                lbl_RA_ActiveL5(Index).FontBold = False
                lbl_RA_ActiveL5(Index).ForeColor = &H800000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL5(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) - lbl_RA_ActiveL5(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_4
        End Select
        cmd_RA_ActiveInc(Index).Tag = cmd_RA_ActiveInc(Index).Tag - 1
    End If
    
    lbl_RA_Info(WS_RAI_RSP_REMAINING).Caption = TOON.REALM_ABILITY_POINTS - (CalculateRealmSpecPointsSpent)
    
End Sub

Private Sub cmd_RA_ActiveInc_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_ActiveInc(Index).Picture = LoadResPicture("SRIGHT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_RA_ActiveInc_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_ActiveInc(Index).Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
    
    If cmd_RA_ActiveInc(Index).Tag < 5 Then
        cmd_RA_ActiveInc(Index).Tag = cmd_RA_ActiveInc(Index).Tag + 1
        
        Select Case cmd_RA_ActiveInc(Index).Tag
            Case 1
                lbl_RA_ActiveL1(Index).FontBold = True
                lbl_RA_ActiveL1(Index).ForeColor = &HFF0000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL2(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) + lbl_RA_ActiveL1(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_1
            Case 2
                lbl_RA_ActiveL2(Index).FontBold = True
                lbl_RA_ActiveL2(Index).ForeColor = &HFF0000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL3(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) + lbl_RA_ActiveL2(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_2
            Case 3
                lbl_RA_ActiveL3(Index).FontBold = True
                lbl_RA_ActiveL3(Index).ForeColor = &HFF0000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL4(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) + lbl_RA_ActiveL3(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_3
            Case 4
                lbl_RA_ActiveL4(Index).FontBold = True
                lbl_RA_ActiveL4(Index).ForeColor = &HFF0000
                lbl_RA_ActiveCostValue(Index).Caption = "Pts: " & lbl_RA_ActiveL5(Index).Tag
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) + lbl_RA_ActiveL4(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_4
            Case 5
                lbl_RA_ActiveL5(Index).FontBold = True
                lbl_RA_ActiveL5(Index).ForeColor = &HFF0000
                lbl_RA_ActiveCostValue(Index).Caption = "MAX"
                lbl_RA_ActiveCostValue(Index).Tag = Val(lbl_RA_ActiveCostValue(Index).Tag) + lbl_RA_ActiveL5(Index).Tag
                lbl_RA_ActiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_5
        End Select
    End If
    
    lbl_RA_Info(WS_RAI_RSP_REMAINING).Caption = TOON.REALM_ABILITY_POINTS - (CalculateRealmSpecPointsSpent)
    
End Sub

Private Sub cmd_RA_PassiveDec_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Set cmd_RA_PassiveDec(Index).Picture = LoadResPicture("SLEFT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_RA_PassiveDec_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_PassiveDec(Index).Picture = LoadResPicture("SLEFT_UP", vbResBitmap)
    
        If cmd_RA_PassiveInc(Index).Tag > 0 Then
        
        Select Case cmd_RA_PassiveInc(Index).Tag
            Case 1
                lbl_RA_PassiveL1(Index).FontBold = False
                lbl_RA_PassiveL1(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL1(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL1(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = vbNullString
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 0, TOON)
            Case 2
                lbl_RA_PassiveL2(Index).FontBold = False
                lbl_RA_PassiveL2(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL2(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL2(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_1
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 1, TOON)
            Case 3
                lbl_RA_PassiveL3(Index).FontBold = False
                lbl_RA_PassiveL3(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL3(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL3(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_2
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 2, TOON)
            Case 4
                lbl_RA_PassiveL4(Index).FontBold = False
                lbl_RA_PassiveL4(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL4(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL4(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_3
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 3, TOON)
            Case 5
                lbl_RA_PassiveL5(Index).FontBold = False
                lbl_RA_PassiveL5(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL5(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL5(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_4
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 4, TOON)
            Case 6
                lbl_RA_PassiveL6(Index).FontBold = False
                lbl_RA_PassiveL6(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL6(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL6(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_5
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 5, TOON)
            Case 7
                lbl_RA_PassiveL7(Index).FontBold = False
                lbl_RA_PassiveL7(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL7(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL7(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_6
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 6, TOON)
            Case 8
                lbl_RA_PassiveL8(Index).FontBold = False
                lbl_RA_PassiveL8(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL8(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL8(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_7
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 7, TOON)
            Case 9
                lbl_RA_PassiveL9(Index).FontBold = False
                lbl_RA_PassiveL9(Index).ForeColor = &H800000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL9(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) - lbl_RA_PassiveL9(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_8
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 8, TOON)
                
        End Select
        cmd_RA_PassiveInc(Index).Tag = cmd_RA_PassiveInc(Index).Tag - 1
    End If
    
    Call RefreshAttributeLabels
    lbl_RA_Info(WS_RAI_RSP_REMAINING).Caption = TOON.REALM_ABILITY_POINTS - (CalculateRealmSpecPointsSpent)
    
End Sub

Private Sub cmd_RA_PassiveInc_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_PassiveInc(Index).Picture = LoadResPicture("SRIGHT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_RA_PassiveInc_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RA_PassiveInc(Index).Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
    
    If cmd_RA_PassiveInc(Index).Tag < 9 Then
        cmd_RA_PassiveInc(Index).Tag = cmd_RA_PassiveInc(Index).Tag + 1
        
        Select Case cmd_RA_PassiveInc(Index).Tag
            Case 1
                lbl_RA_PassiveL1(Index).FontBold = True
                lbl_RA_PassiveL1(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL2(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL1(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_1
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 1, TOON)
            Case 2
                lbl_RA_PassiveL2(Index).FontBold = True
                lbl_RA_PassiveL2(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL3(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL2(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_2
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 2, TOON)
            Case 3
                lbl_RA_PassiveL3(Index).FontBold = True
                lbl_RA_PassiveL3(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL4(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL3(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_3
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 3, TOON)
            Case 4
                lbl_RA_PassiveL4(Index).FontBold = True
                lbl_RA_PassiveL4(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL5(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL4(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_4
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 4, TOON)
            Case 5
                lbl_RA_PassiveL5(Index).FontBold = True
                lbl_RA_PassiveL5(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL6(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL5(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_5
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 5, TOON)
            Case 6
                lbl_RA_PassiveL6(Index).FontBold = True
                lbl_RA_PassiveL6(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL7(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL6(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_6
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 6, TOON)
            Case 7
                lbl_RA_PassiveL7(Index).FontBold = True
                lbl_RA_PassiveL7(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL8(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL7(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_7
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 7, TOON)
            Case 8
                lbl_RA_PassiveL8(Index).FontBold = True
                lbl_RA_PassiveL8(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "Pts: " & lbl_RA_PassiveL9(Index).Tag
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL8(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_8
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 8, TOON)
            Case 9
                lbl_RA_PassiveL9(Index).FontBold = True
                lbl_RA_PassiveL9(Index).ForeColor = &HFF0000
                lbl_RA_PassiveCostValue(Index).Caption = "MAX"
                lbl_RA_PassiveCostValue(Index).Tag = Val(lbl_RA_PassiveCostValue(Index).Tag) + lbl_RA_PassiveL9(Index).Tag
                lbl_RA_PassiveBonusValue(Index).Caption = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_9
                Call SetRealmAbilityToMatrix(RA_PASSIVE + Val(lbl_RA_PassiveBonusValue(Index).Tag), 9, TOON)
        End Select
        
    End If

    Call RefreshAttributeLabels
    lbl_RA_Info(WS_RAI_RSP_REMAINING).Caption = TOON.REALM_ABILITY_POINTS - (CalculateRealmSpecPointsSpent)
    
End Sub

Private Sub SetRealmRankInfo(ByRef tToon As TOON_TYPE)

    'get and set the realm title
    lbl_RA_Info(WS_RAI_TITLE).Caption = GetRealmTitle(tToon)
    tToon.REALM_TITLE = lbl_RA_Info(WS_RAI_TITLE).Caption
    
    'get and set the total realm skill points
    lbl_RA_Info(WS_RAI_RSP_TOTAL).Caption = GetRealmSkillPoints(tToon.REALM_RANK, tToon.REALM_LEVEL)
    tToon.REALM_ABILITY_POINTS = Val(lbl_RA_Info(WS_RAI_RSP_TOTAL).Caption)
    
    lbl_RA_Info(WS_RAI_RSP_REMAINING).Caption = tToon.REALM_ABILITY_POINTS - (CalculateRealmSpecPointsSpent)
    
    If tToon.REALM_RANK <> RA_MAX_REALM_RANK Then
        lbl_RA_Info(WS_RAI_NEXT_RR).Caption = Format(GetRealmPoints(tToon.REALM_RANK + 1, 0) - tToon.REALM_POINTS, "###,###,###")
    Else
        lbl_RA_Info(WS_RAI_NEXT_RR).Caption = "-"
    End If
    
    If (tToon.REALM_LEVEL <> 9) Then
        If (tToon.REALM_RANK <> RA_MAX_REALM_RANK) Then
            lbl_RA_Info(WS_RAI_NEXT_RL).Caption = Format(GetRealmPoints(tToon.REALM_RANK, tToon.REALM_LEVEL + 1) - tToon.REALM_POINTS, "###,###,###")
        End If
    Else
        If (tToon.REALM_RANK <> RA_MAX_REALM_RANK) Then
            lbl_RA_Info(WS_RAI_NEXT_RL).Caption = Format(GetRealmPoints(tToon.REALM_RANK + 1, 0) - tToon.REALM_POINTS, "###,###,###")
        End If
    End If
        
End Sub

Private Sub cmd_RecalculateRealmRankInfo_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_RecalculateRealmRankInfo(Index).Picture = LoadResPicture("LARGE_RIGHT_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_RecalculateRealmRankInfo_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Dim sBuffer As String
    Dim lResult As Long
    
    If Index = 0 Then
  
        If txt_RealmRank.Text = vbNullString Then txt_RealmRank.Text = "0"
        If txt_RealmLevel.Text = vbNullString Then txt_RealmLevel.Text = "0"
        
        txt_RealmPoints.Text = Format(GetRealmPoints(Val(txt_RealmRank.Text), Val(txt_RealmLevel.Text)), "###,###,###")
        TOON.REALM_POINTS = Val(Format(txt_RealmPoints.Text, "#########"))
        lResult = GetRealmRank(TOON.REALM_POINTS, TOON)
        
    ElseIf Index = 1 Then

        If txt_RealmPoints.Text = vbNullString Then txt_RealmPoints.Text = "0"
        
        sBuffer = RemoveString(txt_RealmPoints.Text, ",")
        If Len(sBuffer) > 9 Then sBuffer = Left$(sBuffer, 9)
        txt_RealmPoints.Text = sBuffer
        
        lResult = Val(Format(txt_RealmPoints.Text, "#########"))
        
        lResult = GetRealmRank(Val(Format(txt_RealmPoints.Text, "#########")), TOON)
        
        txt_RealmRank.Text = TOON.REALM_RANK
        txt_RealmLevel.Text = TOON.REALM_LEVEL
        TOON.REALM_POINTS = Val(Format(txt_RealmPoints.Text, "#########"))
        txt_RealmPoints.Text = Format(TOON.REALM_POINTS, "###,###,###")
    
    End If
    
    Call SetRealmRankInfo(TOON)
    
    Set cmd_RecalculateRealmRankInfo(Index).Picture = LoadResPicture("LARGE_RIGHT_UP", vbResBitmap)
    
End Sub

Private Sub cmd_SubStat_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_SubStat(Index).Picture = LoadResPicture("SLEFT_DOWN", vbResBitmap)

End Sub

Private Sub cmd_SubStat_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Dim lCode As Long
    
    Set cmd_SubStat(Index).Picture = LoadResPicture("SLEFT_UP", vbResBitmap)
    
    'subtract from selected stat if there were points added
    If (Val(lbl_StatValue(Index).Tag) > 0) And (Val(lbl_StatValue(Index).Tag) <= 10) And (TOON.CREATION_POINTS + 1 <= 30) Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) - 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS + 1
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) - 1
    ElseIf (Val(lbl_StatValue(Index).Tag) > 10) And (Val(lbl_StatValue(Index).Tag) <= 15) And (TOON.CREATION_POINTS + 2 <= 30) Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) - 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS + 2
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) - 1
    ElseIf (Val(lbl_StatValue(Index).Tag) > 15) And (Val(lbl_StatValue(Index).Tag) <= 18) And (TOON.CREATION_POINTS + 3 <= 30) Then
        lbl_StatValue(Index).Tag = Val(lbl_StatValue(Index).Tag) - 1
        TOON.CREATION_POINTS = TOON.CREATION_POINTS + 3
        lbl_StatValue(Index).Caption = Val(lbl_StatValue(Index).Caption) - 1
    End If
    
    If Val(lbl_StatValue(Index).Tag) = 0 Then lbl_StatValue(Index).ForeColor = &H800000
    
    WorkshopLabel(7).Caption = "Character Attributes :: (Points: " & TOON.CREATION_POINTS & ")"
    
    Select Case Index
        Case WS_ATTR_STR    'str
            lCode = SM_STR
        Case WS_ATTR_CON    'con
            lCode = SM_CON
        Case WS_ATTR_DEX    'dex
            lCode = SM_DEX
        Case WS_ATTR_QUI    'qui
            lCode = SM_QUI
        Case WS_ATTR_INT    'int
            lCode = SM_INT
        Case WS_ATTR_EMP    'emp
            lCode = SM_EMP
        Case WS_ATTR_PIE    'pie
            lCode = SM_PIE
        Case WS_ATTR_CHA    'cha
            lCode = SM_CHA
    End Select
    
    TOON.STAT_MATRIX(lCode, SM_LOC_CREATION) = Val(lbl_StatValue(Index).Tag)
    
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
    
End Sub

Private Sub cmb_Realm_Click()
    'reset the display
    Call ResetAttributeLabels
    
    'clear the classes combobox
    cmb_Class.Clear
    
    'reset the character
    Call ResetCharacter(TOON)
    
    If cmb_Realm.ListIndex < 1 Then cmb_Realm.ListIndex = 0
    TOON.REALM = cmb_Realm.ListIndex
    
    'set the selected realm to the registry as the default for new templates and load up
    Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, NUM_VAL, "REALM", STR(TOON.REALM))
    
    'set the proper doll background image
    Call SetDollImage(TOON)
    
    'populate the race combobox with the races for the cooresponding realm selection
    Call PopulateRaceSelection(cmb_Race, TOON)
    
    'refresh the sc interface
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
    
    'refresh the master level info pane
    Call RefreshMasterLevel(TOON)
    
    'refresh the attribute display
    Call RefreshAttributeLabels
    
    'check to see if the workshop should be enabled
    Call CheckWorkshop
    
    timer_RealmAbilities(WS_TIMER_UNLOAD).Enabled = True
    
End Sub

Private Sub cmb_Race_Click()
    
    'reset the display
    Call ResetAttributeLabels
    
    'clear the classes
    cmb_Class.Clear
        
    'reset the character
    Call ResetCharacter(TOON)
    
    TOON.RACE = cmb_Race.ListIndex
    Call AssignRaceAttributes(TOON)
    
    'populate the class combobox with the classes for the cooresponding race selection
    Call PopulateClassSelection(cmb_Class, TOON)
    
    'refresh the sc interface
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        
    'refresh the master level info pane
    Call RefreshMasterLevel(TOON)
   
    Call txt_Level_Change
    
    'refresh the attribute display
    Call RefreshAttributeLabels
   
    'check to see if the workshop should be enabled
    Call CheckWorkshop
    
    timer_RealmAbilities(WS_TIMER_UNLOAD).Enabled = True
    
End Sub

Private Sub cmb_Class_Click()
    
    Dim lCode As Long
     
    'reset the display
    Call ResetAttributeLabels
            
    'reset the character
    Call ResetCharacter(TOON)
    
    Call AssignRaceAttributes(TOON)
    Call InitializeClass(cmb_Class.Text, TOON)
    
    Call cmd_RecalculateRealmRankInfo_MouseUp(1, 1, 0, 0, 0)
    
    'lbl_SpecPoints(1).Caption = "None"
    'lbl_SpecPoints(1).Tag = 0
    
    Select Case TOON.pStat
        Case SM_STR
            lCode = WS_ATTR_STR
            
        Case SM_CON
            lCode = WS_ATTR_CON
            
        Case SM_DEX
            lCode = WS_ATTR_DEX
            
        Case SM_QUI
            lCode = WS_ATTR_QUI
            
        Case 5  'int
            lCode = WS_ATTR_INT
            
        Case 6  'emp
            lCode = WS_ATTR_EMP
            
        Case 7  'pie
            lCode = WS_ATTR_PIE
            
        Case 8  'cha
            lCode = WS_ATTR_CHA
    End Select
    
    'set the primary stat display
    lbl_StatName(lCode).Caption = lbl_StatName(lCode).Caption
    lbl_PST(lCode).Caption = "P"
    lbl_StatName(lCode).FontBold = True
    lbl_StatValue(lCode).FontBold = True
            
    Select Case TOON.sStat
        Case SM_STR
            lCode = WS_ATTR_STR
            
        Case SM_CON
            lCode = WS_ATTR_CON
            
        Case SM_DEX
            lCode = WS_ATTR_DEX
            
        Case SM_QUI
            lCode = WS_ATTR_QUI
            
        Case 5  'int
            lCode = WS_ATTR_INT
            
        Case 6  'emp
            lCode = WS_ATTR_EMP
            
        Case 7  'pie
            lCode = WS_ATTR_PIE
            
        Case 8  'cha
            lCode = WS_ATTR_CHA
    End Select
    
    'set the secondary stat display
    lbl_StatName(lCode).Caption = lbl_StatName(lCode).Caption
    lbl_PST(lCode).Caption = "S"
    lbl_StatName(lCode).FontBold = True
    lbl_StatValue(lCode).FontBold = True
    
    Select Case TOON.tStat
        Case SM_STR
            lCode = WS_ATTR_STR
            
        Case SM_CON
            lCode = WS_ATTR_CON
            
        Case SM_DEX
            lCode = WS_ATTR_DEX
            
        Case SM_QUI
            lCode = WS_ATTR_QUI
            
        Case 5  'int
            lCode = WS_ATTR_INT
            
        Case 6  'emp
            lCode = WS_ATTR_EMP
            
        Case 7  'pie
            lCode = WS_ATTR_PIE
            
        Case 8  'cha
            lCode = WS_ATTR_CHA
    End Select
    
    'set the secondary stat display
    lbl_StatName(lCode).Caption = lbl_StatName(lCode).Caption
    lbl_PST(lCode).Caption = "T"
    lbl_StatName(lCode).FontBold = True
    lbl_StatValue(lCode).FontBold = True
        
    WorkshopLabel(7).Caption = "Character Attributes :: (Points: " & TOON.CREATION_POINTS & ")"

    'refresh the sc interface
    Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        
    'refresh the master level info pane
    Call RefreshMasterLevel(TOON)
   
    Call txt_Level_Change
    
    'refresh the attribute display
    Call RefreshAttributeLabels
   
    'check to see if the workshop should be enabled
    Call CheckWorkshop
    
    Call RefreshTemplate
    
    'turn on the realm ability timer for a hack workaround
    timer_RealmAbilities(WS_TIMER_LOAD).Enabled = True
    timer_Skills(WS_TIMER_LOAD).Enabled = True
    
End Sub

Private Sub cmdCopyRingBracer_Click()

    Dim lCopyTo As Long
    
    If CURRENT_LOCATION = WS_DOLL_RRING Or _
       CURRENT_LOCATION = WS_DOLL_LRING Or _
       CURRENT_LOCATION = WS_DOLL_RWRIST Or _
       CURRENT_LOCATION = WS_DOLL_LWRIST Then
           
        Select Case CURRENT_LOCATION
            Case WS_DOLL_RRING
                lCopyTo = WS_DOLL_LRING
            Case WS_DOLL_LRING
                lCopyTo = WS_DOLL_RRING
            Case WS_DOLL_RWRIST
                lCopyTo = WS_DOLL_LWRIST
            Case WS_DOLL_LWRIST
                lCopyTo = WS_DOLL_RWRIST
        End Select
        
        txt_ItemName_DP(lCopyTo).Text = txt_ItemName_DP(CURRENT_LOCATION).Text
        txt_ItemName_DP(lCopyTo).Tag = txt_ItemName_DP(CURRENT_LOCATION).Tag
        
        txt_ItemQuality(lCopyTo).Text = txt_ItemQuality(CURRENT_LOCATION).Text
        txt_ItemLevel_DP(lCopyTo).Text = txt_ItemLevel_DP(CURRENT_LOCATION).Text
        txt_ItemSPD_DP(lCopyTo).Text = txt_ItemSPD_DP(CURRENT_LOCATION).Text
        txt_AFDPS_DP(lCopyTo).Text = txt_AFDPS_DP(CURRENT_LOCATION).Text
        
        opt_Alb(lCopyTo).Value = opt_Alb(CURRENT_LOCATION).Value
        opt_Hib(lCopyTo).Value = opt_Hib(CURRENT_LOCATION).Value
        opt_Mid(lCopyTo).Value = opt_Mid(CURRENT_LOCATION).Value
        opt_All(lCopyTo).Value = opt_All(CURRENT_LOCATION).Value
        
        opt_Alb(lCopyTo).Tag = opt_Alb(CURRENT_LOCATION).Tag
        opt_Hib(lCopyTo).Tag = opt_Hib(CURRENT_LOCATION).Tag
        opt_Mid(lCopyTo).Tag = opt_Mid(CURRENT_LOCATION).Tag
        opt_All(lCopyTo).Tag = opt_All(CURRENT_LOCATION).Tag
        
        cmb_GemSelect_DP1(lCopyTo).ListIndex = cmb_GemSelect_DP1(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP1(lCopyTo).ListIndex = cmb_GemEffect_DP1(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP1(lCopyTo).Text = txt_GemAmount_DP1(CURRENT_LOCATION)
        
        cmb_GemSelect_DP2(lCopyTo).ListIndex = cmb_GemSelect_DP2(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP2(lCopyTo).ListIndex = cmb_GemEffect_DP2(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP2(lCopyTo).Text = txt_GemAmount_DP2(CURRENT_LOCATION)
        
        cmb_GemSelect_DP3(lCopyTo).ListIndex = cmb_GemSelect_DP3(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP3(lCopyTo).ListIndex = cmb_GemEffect_DP3(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP3(lCopyTo).Text = txt_GemAmount_DP3(CURRENT_LOCATION)
        
        cmb_GemSelect_DP4(lCopyTo).ListIndex = cmb_GemSelect_DP4(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP4(lCopyTo).ListIndex = cmb_GemEffect_DP4(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP4(lCopyTo).Text = txt_GemAmount_DP4(CURRENT_LOCATION)
        
        cmb_GemSelect_DP5(lCopyTo).ListIndex = cmb_GemSelect_DP5(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP5(lCopyTo).ListIndex = cmb_GemEffect_DP5(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP5(lCopyTo).Text = txt_GemAmount_DP5(CURRENT_LOCATION)
        
        cmb_GemSelect_DP6(lCopyTo).ListIndex = cmb_GemSelect_DP6(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP6(lCopyTo).ListIndex = cmb_GemEffect_DP6(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP6(lCopyTo).Text = txt_GemAmount_DP6(CURRENT_LOCATION)
        
        cmb_GemSelect_DP7(lCopyTo).ListIndex = cmb_GemSelect_DP7(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP7(lCopyTo).ListIndex = cmb_GemEffect_DP7(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP7(lCopyTo).Text = txt_GemAmount_DP7(CURRENT_LOCATION)
        
        cmb_GemSelect_DP8(lCopyTo).ListIndex = cmb_GemSelect_DP8(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP8(lCopyTo).ListIndex = cmb_GemEffect_DP8(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP8(lCopyTo).Text = txt_GemAmount_DP8(CURRENT_LOCATION)
        
        cmb_GemSelect_DP9(lCopyTo).ListIndex = cmb_GemSelect_DP9(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP9(lCopyTo).ListIndex = cmb_GemEffect_DP9(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP9(lCopyTo).Text = txt_GemAmount_DP9(CURRENT_LOCATION)
        
        cmb_GemSelect_DP10(lCopyTo).ListIndex = cmb_GemSelect_DP10(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP10(lCopyTo).ListIndex = cmb_GemEffect_DP10(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP10(lCopyTo).Text = txt_GemAmount_DP10(CURRENT_LOCATION)
        
        cmb_GemSelect_DP11(lCopyTo).ListIndex = cmb_GemSelect_DP11(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP11(lCopyTo).ListIndex = cmb_GemEffect_DP11(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP11(lCopyTo).Text = txt_GemAmount_DP11(CURRENT_LOCATION)
        
        cmb_GemSelect_DP12(lCopyTo).ListIndex = cmb_GemSelect_DP12(CURRENT_LOCATION).ListIndex
        cmb_GemEffect_DP12(lCopyTo).ListIndex = cmb_GemEffect_DP12(CURRENT_LOCATION).ListIndex
        txt_GemAmount_DP12(lCopyTo).Text = txt_GemAmount_DP12(CURRENT_LOCATION)
        
    End If
    
    
End Sub

Private Sub Form_Load()

End Sub

Private Sub Form_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static bHereAlready As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
        DoEvents
        If WORKSHOP_TRAY Then
            Select Case Button
                Case 2  'right button
                    Me.PopupMenu Me.mnuSystray
                Case 1  'left button
                    Me.WindowState = vbNormal
                    Me.Show
            End Select
        End If
    End If
    bHereAlready = False
    
End Sub

Private Sub Form_Paint()

    Dim lResult As Long
    
    lResult = GetRegValue(HKEY_CURRENT_USER, "Software\Microsoft\Windows\CurrentVersion\ThemeManager", "ThemeActive")
    If (lResult <> REG_KEY_NOT_EXISTS) And (lResult <> WINDOWS_THEME) Then
        If lResult = 1 Then
            WS_MAX_HEIGHT = WS_LUNA_HMAX
        Else
            WS_MAX_HEIGHT = WS_NORM_HMAX
        End If
    End If
    
End Sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)

    If UnloadMode = vbFormControlMenu Then
        If EXIT_TO_SYSTRAY = True Then
            WS.WindowState = vbMinimized
            Cancel = True
        Else
            Cancel = False
        End If
    End If
       
End Sub

Private Sub Form_Resize()

    If Me.WindowState = vbMinimized And MINIMIZE_TO_SYSTRAY Then
        Call CreateSystrayIcon(Me.hwnd, Me.Icon, Me.Icon.Handle, "Loto's Character Workshop")
        Me.Hide
        WORKSHOP_TRAY = True
    ElseIf Me.WindowState = vbMinimized And EXIT_TO_SYSTRAY Then
        Call CreateSystrayIcon(Me.hwnd, Me.Icon, Me.Icon.Handle, "Loto's Character Workshop")
        Me.Hide
        WORKSHOP_TRAY = True
    ElseIf Me.WindowState = vbNormal And WORKSHOP_TRAY Then
        Me.Show
        Call DestroySystrayIcon
        WORKSHOP_TRAY = False
    End If
        
End Sub

Private Sub Form_Terminate()

    Call ExitNice
    
End Sub

Private Sub Form_Unload(Cancel As Integer)
    
    Call ExitNice
    
End Sub

Private Function GetOpenSavePath(Index As Integer) As String

    Dim sItemFolder As String
    
    Select Case Index
        Case WS_DOLL_CHEST
            sItemFolder = "\chest pieces\"
        Case WS_DOLL_ARMS
            sItemFolder = "\sleeves\"
        Case WS_DOLL_GEM
            sItemFolder = "\gems\"
        Case WS_DOLL_RRING, WS_DOLL_LRING
            sItemFolder = "\rings\"
        Case WS_DOLL_RWRIST, WS_DOLL_LWRIST
            sItemFolder = "\bracers\"
        Case WS_DOLL_LEGS
            sItemFolder = "\leggings\"
        Case WS_DOLL_RHAND, WS_DOLL_LHAND, WS_DOLL_2HAND, WS_DOLL_RANGED, _
             WS_DOLL_RIGHTSPARE, WS_DOLL_LEFTSPARE, WS_DOLL_2HANDSPARE, WS_DOLL_RANGEDSPARE
            sItemFolder = "\weapons\"
        Case WS_DOLL_FEET
            sItemFolder = "\boots\"
        Case WS_DOLL_WAIST
            sItemFolder = "\belts\"
        Case WS_DOLL_HANDS
            sItemFolder = "\gloves\"
        Case WS_DOLL_HEAD
            sItemFolder = "\helms\"
        Case WS_DOLL_CLOAK
            sItemFolder = "\cloaks\"
        Case WS_DOLL_NECK
            sItemFolder = "\necklaces\"
        Case WS_DOLL_MYTHICAL
            sItemFolder = "\mythical\"
    End Select
    
    GetOpenSavePath = App.Path & "\items" & sItemFolder
    
End Function

Private Function GetDollIcon(Index As Integer, lbuttonState As Long) As String

    Dim sIcon As String
    
    Select Case Index
        Case WS_DOLL_CHEST
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "CHEST_UP"
            Else
                sIcon = "CHEST_DOWN"
            End If
        Case WS_DOLL_ARMS
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "ARMS_UP"
            Else
                sIcon = "ARMS_DOWN"
            End If
        Case WS_DOLL_GEM
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "GEM_UP"
            Else
                sIcon = "GEM_DOWN"
            End If
        Case WS_DOLL_LRING
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "RING_UP"
            Else
                sIcon = "RING_DOWN"
            End If
        Case WS_DOLL_LWRIST
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "BRACER_UP"
            Else
                sIcon = "BRACER_DOWN"
            End If
        Case WS_DOLL_LEGS
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "LEGS_UP"
            Else
                sIcon = "LEGS_DOWN"
            End If
        Case WS_DOLL_RHAND
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_LHAND
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_2HAND
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_RANGED
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "RANGED_UP"
            Else
                sIcon = "RANGED_DOWN"
            End If
        Case WS_DOLL_FEET
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "FEET_UP"
            Else
                sIcon = "FEET_DOWN"
            End If
        Case WS_DOLL_RWRIST
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "BRACER_UP"
            Else
                sIcon = "BRACER_DOWN"
            End If
        Case WS_DOLL_RRING
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "RING_UP"
            Else
                sIcon = "RING_DOWN"
            End If
        Case WS_DOLL_WAIST
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "BELT_UP"
            Else
                sIcon = "BELT_DOWN"
            End If
        Case WS_DOLL_HANDS
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "HANDS_UP"
            Else
                sIcon = "HANDS_DOWN"
            End If
        Case WS_DOLL_HEAD
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "HEAD_UP"
            Else
                sIcon = "HEAD_DOWN"
            End If
        Case WS_DOLL_CLOAK
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "CLOAK_UP"
            Else
                sIcon = "CLOAK_DOWN"
            End If
        Case WS_DOLL_MYTHICAL
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "GEM_UP"
            Else
                sIcon = "GEM_DOWN"
            End If
        Case WS_DOLL_NECK
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "NECK_UP"
            Else
                sIcon = "NECK_DOWN"
            End If
        Case WS_DOLL_RIGHTSPARE
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_LEFTSPARE
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_2HANDSPARE
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "WEAPON_UP"
            Else
                sIcon = "WEAPON_DOWN"
            End If
        Case WS_DOLL_RANGEDSPARE
            If lbuttonState = WS_DOLL_ICON_UP Then
                sIcon = "RANGED_UP"
            Else
                sIcon = "RANGED_DOWN"
            End If
    End Select
    
    GetDollIcon = sIcon
    
End Function

Private Sub img_DollButton_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    If WORKSHOP_ENABLED Then Set img_DollButton(Index).Picture = LoadResPicture(GetDollIcon(Index, WS_DOLL_ICON_DN), vbResBitmap)
    
End Sub

Private Sub img_DollButton_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    On Error Resume Next
    
    If Not opt_Drop(Index) Is Nothing Then
        
        If opt_Drop(Index).Value = True Then
            img_DollButton(Index).ToolTipText = txt_ItemName_DP(Index).Text
        Else
            img_DollButton(Index).ToolTipText = "Spellcrafted Item"
        End If
        
    Else
        
        img_DollButton(Index).ToolTipText = txt_ItemName_DP(Index).Text
    
    End If
        
End Sub

Private Sub img_DollButton_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    If WORKSHOP_ENABLED Then
        If Not mnuSpellcraft.Checked Then Call mnuSpellcraft_Click
        
        Set img_DollButton(Index).Picture = LoadResPicture(GetDollIcon(Index, WS_DOLL_ICON_UP), vbResBitmap)
        
        If CURRENT_LOCATION <> Index Then
                 
            CURRENT_LOCATION = ClickDollButton(Index, CURRENT_LOCATION, img_DollButton(Index), lbl_LocationName)
            
        End If
    
    End If
    
End Sub

Private Function ClickDollButton(NewLoc As Integer, OldLoc As Integer, DollButtonNewLoc As Control, ByRef LocName As Label) As Long

    On Error Resume Next
    
    'determine what location to hide
    Select Case OldLoc
        Case WS_DOLL_GEM, _
             WS_DOLL_LRING, _
             WS_DOLL_LWRIST, _
             WS_DOLL_RWRIST, _
             WS_DOLL_RRING, _
             WS_DOLL_WAIST, _
             WS_DOLL_CLOAK, _
             WS_DOLL_NECK, _
             WS_DOLL_MYTHICAL
             
            Call HideDPLabels
            Call HideDPLocation(OldLoc)
            
            cmdCopyRingBracer.Visible = False
            
        Case Else
            
            frame_DropCraft(OldLoc).Visible = False
            
            If opt_Drop(OldLoc).Value = True Then
                Call HideDPLabels
                Call HideDPLocation(OldLoc)
                
                cmdCopyRingBracer.Visible = False
            Else
                Call HideSCLabels
                Call HideSCLocation(OldLoc)
            End If
    End Select
    
    'determine what controls to show
    Select Case NewLoc
        Case WS_DOLL_GEM, _
             WS_DOLL_LRING, _
             WS_DOLL_LWRIST, _
             WS_DOLL_RWRIST, _
             WS_DOLL_RRING, _
             WS_DOLL_WAIST, _
             WS_DOLL_CLOAK, _
             WS_DOLL_NECK, _
             WS_DOLL_MYTHICAL
             
            Call ShowDPLabels
            Call ShowDPLocation(NewLoc)
            Call SetControlTabstops(NewLoc, True)
            
            With cmdCopyRingBracer
                Select Case NewLoc
                    Case WS_DOLL_RRING
                        .Visible = True
                        .Caption = "Copy To Left Ring"
                    Case WS_DOLL_LRING
                        .Visible = True
                        .Caption = "Copy To Right Ring"
                    Case WS_DOLL_RWRIST
                        .Visible = True
                        .Caption = "Copy To Left Bracer"
                    Case WS_DOLL_LWRIST
                        .Visible = True
                        .Caption = "Copy To Right Bracer"
                End Select
            End With
            
        Case Else
            
            frame_DropCraft(NewLoc).Visible = True
            frame_DropCraft(NewLoc).ZOrder 0
            
            If opt_Drop(NewLoc).Value = True Then
                Call ShowDPLabels
                Call ShowDPLocation(NewLoc)
                Call SetControlTabstops(NewLoc, True)
               
            Else
                Call ShowSCLabels
                Call ShowSCLocation(NewLoc)
                Call SetControlTabstops(NewLoc, False)
                
            End If
                        
    End Select
        
    LocName.Caption = DollButtonNewLoc.Tag
    ClickDollButton = NewLoc
    
End Function

Private Sub lbl_Attribute_OverCap_Value_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    lbl_Attribute_OverCap_Value(Index).ToolTipText = "Mythirian Bonus"
    
End Sub

Private Sub lbl_ML_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    If MASTERLEVEL_ACTIVE Then lbl_Multipurpose.Caption = lbl_ML(Index).Tag
    
End Sub

Private Sub lbl_RA_ActiveL1_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_ActiveL1(Index).ToolTipText = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_1
    End If
    
End Sub

Private Sub lbl_RA_ActiveL2_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_ActiveL2(Index).ToolTipText = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_2
    End If
    
End Sub

Private Sub lbl_RA_ActiveL3_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_ActiveL3(Index).ToolTipText = RealmAbilities(Val(lbl_RA_ActiveBonusValue(Index).Tag)).EffectLevel_3
    End If
    
End Sub

Private Sub lbl_RA_ActiveName_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    If REALMABILITY_ACTIVE Then lbl_Multipurpose.Caption = lbl_RA_ActiveName(Index).Tag
    
End Sub

Private Sub lbl_RA_ClassName_MouseMove(Button As Integer, Shift As Integer, X As Single, Y As Single)

    If REALMABILITY_ACTIVE Then lbl_Multipurpose.Caption = lbl_RA_ClassName.Tag
    
End Sub

Private Sub lbl_RA_Info_Change(Index As Integer)
    
    If Index = WS_RAI_RSP_REMAINING Then
        Select Case Val(lbl_RA_Info(Index).Caption)
            Case Is < 0
                lbl_RA_Info(Index).ForeColor = &H80&        'red
            Case Is > 0
                lbl_RA_Info(Index).ForeColor = &HC000&      'green
            Case 0
                lbl_RA_Info(Index).ForeColor = &H404040     'dark grey
        End Select
    End If
    
End Sub

Private Sub lbl_RA_PassiveL1_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_PassiveL1(Index).ToolTipText = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_1
    End If
    
End Sub

Private Sub lbl_RA_PassiveL2_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_PassiveL2(Index).ToolTipText = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_2
    End If
    
End Sub

Private Sub lbl_RA_PassiveL3_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_PassiveL3(Index).ToolTipText = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_3
    End If
    
End Sub

Private Sub lbl_RA_PassiveL4_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_PassiveL4(Index).ToolTipText = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_4
    End If
    
End Sub

Private Sub lbl_RA_PassiveL5_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        
        lbl_RA_PassiveL5(Index).ToolTipText = RealmAbilities(Val(lbl_RA_PassiveBonusValue(Index).Tag)).EffectLevel_5
    End If
    
End Sub

Private Sub lbl_RA_PassiveName_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    If REALMABILITY_ACTIVE Then lbl_Multipurpose.Caption = lbl_RA_PassiveName(Index).Tag
    
End Sub

Private Sub ClickTrain(Index As Integer, lcurVal As Long, ldestVal As Long)

    Dim lCtr As Long
    
    If lcurVal < ldestVal Then
        
        For lCtr = lcurVal To ldestVal - 1
            Call cmd_addSkillLevel_MouseUp(Index, 1, 0, 0, 0)
        Next lCtr
    
    Else
        
        For lCtr = ldestVal To lcurVal - 1
            Call cmd_subSkillLevel_MouseUp(Index, 1, 0, 0, 0)
        Next lCtr
        
    End If
    
End Sub

Private Sub lbl_Skill_Click(Index As Integer)

    Call ClickTrain(((Index - (Index Mod 100)) / 100), Val(lbl_SkillLevel(((Index - (Index Mod 100)) / 100))), Val(lbl_Skill(Index).Caption))
    
End Sub

Private Sub lbl_Skill_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Static sX As Single
    Static sY As Single
    
    If ((sX <> X) Or (sY <> Y)) And CHARACTERBUILDER_ACTIVE Then
    
        sX = X
        sY = Y
             
        With STYLES((Index - (Index Mod 100)) / 100)
        
            WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_NAME)

            lbl_Multipurpose.Caption = "Level: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_LEVEL) & vbCrLf & _
                                        "Prereq: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_PREREQ) & vbCrLf & _
                                        "Attack: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_ATTACK) & vbCrLf & _
                                        "Defense: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_DEFENSE) & vbCrLf & _
                                        "Fatigue: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_FATIGUE) & vbCrLf & _
                                        "Damage: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_DAMAGE) & vbCrLf & _
                                        "Effect: " & .STYLE((Index Mod 100)).STYLE_DETAILS(STYLE_EFFECT)
        End With
            
    End If

End Sub

Private Sub lbl_SkillName_Click(Index As Integer)

    Dim lSpellIndex As Long
    Dim lSpellDetailIndex As Long
    
    Dim i As Long
    Dim j As Long
    
    For i = 0 To lbl_SkillName.UBound
    
        lbl_SkillName(i).FontBold = False
        
    Next i
    
    lbl_SkillName(Index).FontBold = True
     
    'unload what's currently displayed in the spellclass frame
    For i = 0 To shapeSpellClass.UBound
        If i > 0 Then
        
            
            Unload lbl_SpellClass(i)
            Unload shapeSpellClass(i)
            
            For j = 0 To 15
                lSpellDetailIndex = ((i * 100) + j)
                lbl_SpellDetail(lSpellDetailIndex).FontBold = False
                Unload lbl_SpellDetail(lSpellDetailIndex)
            Next j
            
        Else
        
            lbl_SpellClass(i).Caption = ""
            lbl_SpellClass(i).Tag = ""
            lbl_SpellClass(i).ToolTipText = ""
            lbl_SpellClass(i).Visible = False
            shapeSpellClass(i).Visible = False
            
            For j = 0 To 15
                lbl_SpellDetail(j).Caption = ""
                lbl_SpellDetail(j).Tag = ""
                lbl_SpellDetail(j).ToolTipText = ""
                lbl_SpellDetail(j).Visible = False
                lbl_SpellDetail(j).FontBold = False
            Next j
        End If
    Next i
        
    If lbl_SkillName(Index).Tag = "magic" Then
        
        'load the current index of spells
        lSpellIndex = Index - CURRENT_STYLE_COUNT
        
        frameTrainer(1).Tag = lSpellIndex   'so we have a reference point for the spellclass details
        
        'populate index 0 controls since we don't have to load them
        With SPELLS(lSpellIndex)
        
            lbl_SpellClass(0).Caption = .SPELL_CLASS(0).SPELL_TYPE_NAME
            lbl_SpellClass(0).ToolTipText = .SPELL_CLASS(0).SPELL_TYPE_DESC
        
            lbl_SpellClass(0).Visible = True
            shapeSpellClass(0).Visible = True
            
            For i = 0 To 20
            
                If .SPELL_CLASS(i).SPELL_TYPE_NAME <> "" Then
                
                    If i > 0 Then
                        Load lbl_SpellClass(i)
                        Load shapeSpellClass(i)
                        
                        lbl_SpellClass(i).Top = lbl_SpellClass(i - 1).Top + 510
                        shapeSpellClass(i).Top = shapeSpellClass(i - 1).Top + 510
                    End If
                    
                    lbl_SpellClass(i).Caption = .SPELL_CLASS(i).SPELL_TYPE_NAME
                    lbl_SpellClass(i).Tag = .SPELL_CLASS(i).SPELL_TYPE_DESC
                    lbl_SpellClass(i).ToolTipText = .SPELL_CLASS(i).SPELL_TYPE_DESC
                    
                    lbl_SpellClass(i).Visible = True
                    shapeSpellClass(i).Visible = True
                    
                    For j = 0 To 15
                    
                        lSpellDetailIndex = ((i * 100) + j)
                        If i > 0 Then
                            Load lbl_SpellDetail(lSpellDetailIndex)
                        
                            lbl_SpellDetail(lSpellDetailIndex).Top = lbl_SpellDetail((((i - 1) * 100) + j)).Top + 510
                            lbl_SpellDetail(lSpellDetailIndex).Left = lbl_SpellDetail((((i - 1) * 100) + j)).Left
                        End If
                        
                        lbl_SpellDetail(lSpellDetailIndex).Caption = .SPELL_CLASS(i).SPELL_DETAILS(j, SPELL_LEVEL)
                        lbl_SpellDetail(lSpellDetailIndex).ToolTipText = .SPELL_CLASS(i).SPELL_DETAILS(j, SPELL_NAME)
                        
                        lbl_SpellDetail(lSpellDetailIndex).Visible = True
                        
                    Next j
                    
                    If (shapeSpellClass(shapeSpellClass.UBound).Top + shapeSpellClass(shapeSpellClass.UBound).Height) > (frameTrainer(1).Height - shapeSpellClass.LBound) Then
                        frameTrainer(1).Height = shapeSpellClass(shapeSpellClass.UBound).Top + shapeSpellClass(shapeSpellClass.UBound).Height + frameTopOffset
                        vscroll_SpellClass.Max = frameTrainer(1).Height
                        vscroll_SpellClass.Visible = True
                        vscroll_SpellClass.Enabled = True
                    Else
                        frameTrainer(1).Height = originHeight
                        frameTrainer(1).Top = originPos
                        vscroll_SpellClass.Max = 0
                        vscroll_SpellClass.Min = 0
                        vscroll_SpellClass.Enabled = False
                        vscroll_SpellClass.Visible = False
                    End If
                        
                        
                End If
                
            Next i
            
        End With    'spells(lspellindex)
        Call SetSpellClassHighlight(Index, Val(lbl_SkillLevel(Index).Caption))
    Else
        frameTrainer(1).Tag = WS_NO_VALUE
    End If
    
End Sub

Private Sub UpdateBaselineSkills()

    Dim i As Integer
    
    For i = 0 To lbl_SkillName.UBound
    
        If cmd_addSkillLevel(i).Visible = False Then
            lbl_SkillLevel(i).Caption = TOON.LEVEL
            shape_SpellBar(i * 100).Width = (((Val(lbl_SkillLevel(i).Caption) * 2) / 100) * 5940)
        End If
        
        If lbl_SkillName(i).FontBold = True Then Call SetSpellClassHighlight(i, Val(lbl_SkillLevel(i).Caption))
        
    Next i
    
End Sub

Private Sub lbl_SkillSpecial_Change(Index As Integer)

    If Len(lbl_SkillSpecial(Index).Caption) <= 1 Then
        lbl_SkillSpecial(Index).BackStyle = 0   'transparent
    Else
        lbl_SkillSpecial(Index).BackStyle = 1   'opaque
    End If
    
End Sub

Private Sub lbl_SpellDetail_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    Static sX As Single
    Static sY As Single
    
    If ((sX <> X) Or (sY <> Y)) And CHARACTERBUILDER_ACTIVE Then
    
        sX = X
        sY = Y
        
        With SPELLS(Val(frameTrainer(1).Tag))
        
            WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_NAME)
                    
            lbl_Multipurpose.Caption = "Level: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_LEVEL) & vbCrLf & _
                                        "Target: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_TARGET) & vbCrLf & _
                                        "Cast/Dur/Recast: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_CAST_INFO) & vbCrLf & _
                                        "Range/Radius: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_RANGE_INFO) & vbCrLf & _
                                        "Effect: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_EFFECT) & vbCrLf & _
                                        "Cost: " & .SPELL_CLASS((Index - (Index Mod 100)) / 100).SPELL_DETAILS((Index Mod 100), SPELL_COST)
        End With
        
    End If
                                        
End Sub

Private Sub lbl_StatName_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

Static sX As Single
Static sY As Single

    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        If TOON.STAT_MATRIX(Index + 1, SM_LOC_BASE) <> 0 Then
            lbl_StatName(Index).ToolTipText = TOON.STAT_MATRIX((Index + 1), SM_LOC_BASE) & " Base"
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_CREATION) <> 0 Then
                lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_CREATION) & " Creation"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_LEVEL) <> 0 Then
                lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_LEVEL) & " Level"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_VAMPIIR_BUFF) <> 0 Then
                lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_VAMPIIR_BUFF) & " Vampiir"
            End If
            
            If (Index + 1) = SM_INT And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_INT) Or (TOON.sStat = SM_INT) Or (TOON.tStat = SM_INT) Then
                    lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
            If (Index + 1) = SM_EMP And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If ((TOON.pStat = SM_EMP) Or (TOON.sStat = SM_EMP) Or (TOON.tStat = SM_EMP)) And (TOON.pStat <> SM_CHA) Then
                    lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
             If (Index + 1) = SM_PIE And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_PIE) Or (TOON.sStat = SM_PIE) Or (TOON.tStat = SM_PIE) Then
                    lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
            If (Index + 1) = SM_CHA And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_CHA) Or (TOON.sStat = SM_CHA) Or (TOON.tStat = SM_CHA) Then
                    lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
                  
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_REALMABILITY) <> 0 Then
                lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_REALMABILITY) & " RA"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_BUFFS) <> 0 Then
                lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_BUFFS) & " Buffs"
            End If
            
        End If
        
        Select Case (Index)
            Case WS_ATTR_STR
                If TOON.STR <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.STR & " SC"
            Case WS_ATTR_CON
                If TOON.CON <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.CON & " SC"
            Case WS_ATTR_DEX
                If TOON.DEX <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.DEX & " SC"
            Case WS_ATTR_QUI
                If TOON.QUI <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.QUI & " SC"
            Case WS_ATTR_INT
                If TOON.INT <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.INT & " SC"
            Case WS_ATTR_EMP
                If TOON.EMP <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.EMP & " SC"
            Case WS_ATTR_PIE
                If TOON.PIE <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.PIE & " SC"
            Case WS_ATTR_CHA
                If TOON.CHA <> 0 Then lbl_StatName(Index).ToolTipText = lbl_StatName(Index).ToolTipText & " + " & TOON.CHA & " SC"
        End Select
    
    End If

    
End Sub

Private Sub lbl_StatValue_Change(Index As Integer)

    Select Case Val(lbl_StatValue(Index).Tag)
        Case 0
            lbl_StatValue(Index).ForeColor = &H800000
        Case Is > 0
            Select Case Val(lbl_StatValue(Index).Tag)
                Case Is <= 10
                    lbl_StatValue(Index).ForeColor = &H80   'dark red
                Case 11, 12, 13, 14, 15
                    lbl_StatValue(Index).ForeColor = &HC0   'dim red
                Case 16, 17, 18
                    lbl_StatValue(Index).ForeColor = &HFF   'bright red
            End Select
    End Select
            
End Sub

Private Sub lbl_StatValue_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

Static sX As Single
Static sY As Single

    If (sX <> X) Or (sY <> Y) Then
        sX = X
        sY = Y
        If TOON.STAT_MATRIX(Index + 1, SM_LOC_BASE) <> 0 Then
            lbl_StatValue(Index).ToolTipText = TOON.STAT_MATRIX((Index + 1), SM_LOC_BASE) & " Base"
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_CREATION) <> 0 Then
                lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_CREATION) & " Creation"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_LEVEL) <> 0 Then
                lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_LEVEL) & " Level"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_VAMPIIR_BUFF) <> 0 Then
                lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_VAMPIIR_BUFF) & " Vampiir"
            End If
            
            If (Index + 1) = SM_INT And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_INT) Or (TOON.sStat = SM_INT) Or (TOON.tStat = SM_INT) Then
                    lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
            If (Index + 1) = SM_EMP And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If ((TOON.pStat = SM_EMP) Or (TOON.sStat = SM_EMP) Or (TOON.tStat = SM_EMP)) And (TOON.pStat <> SM_CHA) Then
                    lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
             If (Index + 1) = SM_PIE And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_PIE) Or (TOON.sStat = SM_PIE) Or (TOON.tStat = SM_PIE) Then
                    lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
            
            If (Index + 1) = SM_CHA And TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) <> 0 Then
                If (TOON.pStat = SM_CHA) Or (TOON.sStat = SM_CHA) Or (TOON.tStat = SM_CHA) Then
                    lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX(SM_ACU, SM_LOC_REALMABILITY) & " RA"
                End If
            End If
                  
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_REALMABILITY) <> 0 Then
                lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_REALMABILITY) & " RA"
            End If
            
            If TOON.STAT_MATRIX(Index + 1, SM_LOC_BUFFS) <> 0 Then
                lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & _
                                            " + " & TOON.STAT_MATRIX((Index + 1), SM_LOC_BUFFS) & " Buffs"
            End If
            
        End If
        
        Select Case (Index)
            Case WS_ATTR_STR
                If TOON.STR <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.STR & " SC"
            Case WS_ATTR_CON
                If TOON.CON <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.CON & " SC"
            Case WS_ATTR_DEX
                If TOON.DEX <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.DEX & " SC"
            Case WS_ATTR_QUI
                If TOON.QUI <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.QUI & " SC"
            Case WS_ATTR_INT
                If TOON.INT <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.INT & " SC"
            Case WS_ATTR_EMP
                If TOON.EMP <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.EMP & " SC"
            Case WS_ATTR_PIE
                If TOON.PIE <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.PIE & " SC"
            Case WS_ATTR_CHA
                If TOON.CHA <> 0 Then lbl_StatValue(Index).ToolTipText = lbl_StatValue(Index).ToolTipText & " + " & TOON.CHA & " SC"
        End Select
    
    End If
    
End Sub

Private Sub mnuCB_Click()

    On Error Resume Next
    
    If mnuRealmAbility.Checked = True Then Call mnuRealmAbility_Click
    If mnuMasterLevel.Checked = True Then Call mnuMasterLevel_Click
    If mnuChampLevel.Checked = True Then Call mnuChampLevel_Click
    If mnuSpellcraft.Checked = True Then mnuSpellcraft.Checked = False
    
    If (CHARACTERBUILDER_ACTIVE = False) Then
        
        CHARACTERBUILDER_ACTIVE = True
        
        Call SavePreviousMultipurpose
        
        WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = "Style "
        lbl_Multipurpose.Caption = vbNullString
        lbl_Multipurpose.ForeColor = &H8000&
        lbl_Multipurpose.FontBold = False
        lbl_Multipurpose.FontSize = 7
                
        frameTool(FRAME_CB).ZOrder 0
        Do
            DoEvents
            frameTool(FRAME_CB).Top = frameTool(FRAME_CB).Top - SP_MD_PROGRESS_CHANGE
    
            If frameTool(FRAME_CB).Top <= frameTool(FRAME_SC).Top Then
                frameTool(FRAME_CB).Top = frameTool(FRAME_SC).Top
                Exit Do
            End If
        Loop
    Else
        CHARACTERBUILDER_ACTIVE = False
        
        Call LoadPreviousMultipurpose
        
        Do
            DoEvents
            frameTool(FRAME_CB).Top = frameTool(FRAME_CB).Top + SP_MD_PROGRESS_CHANGE
            
            If frameTool(FRAME_CB).Top > (frameTool(FRAME_SC).Top + frameTool(FRAME_SC).Height) Then
                frameTool(FRAME_CB).Top = frameTool(FRAME_CB).Top + 1500
                Exit Do
            End If
        Loop
    End If
    
    mnuCB.Checked = CHARACTERBUILDER_ACTIVE
    
End Sub

Private Sub mnuChampLevel_Click()

    On Error Resume Next
    
    If mnuRealmAbility.Checked = True Then Call mnuRealmAbility_Click
    If mnuMasterLevel.Checked = True Then Call mnuMasterLevel_Click
    If mnuCB.Checked = True Then Call mnuCB_Click
    
    If (CHAMPIONLEVEL_ACTIVE = False) Then
        
        CHAMPIONLEVEL_ACTIVE = True
        frameTool(FRAME_CL).ZOrder 0
        Do
            DoEvents
            frameTool(FRAME_CL).Top = frameTool(FRAME_CL).Top - SP_MD_PROGRESS_CHANGE
    
            If frameTool(FRAME_CL).Top <= frameTool(FRAME_SC).Top Then
                frameTool(FRAME_CL).Top = frameTool(FRAME_SC).Top
                Exit Do
            End If
        Loop
    Else
        CHAMPIONLEVEL_ACTIVE = False
                
        Do
            DoEvents
            frameTool(FRAME_CL).Top = frameTool(FRAME_CL).Top + SP_MD_PROGRESS_CHANGE
            
            If frameTool(FRAME_CL).Top > (frameTool(FRAME_SC).Top + frameTool(FRAME_SC).Height) Then
                frameTool(FRAME_CL).Top = frameTool(FRAME_CL).Top + 500
                Exit Do
            End If
        Loop
    End If
    
    mnuChampLevel.Checked = CHAMPIONLEVEL_ACTIVE
    
End Sub

Private Sub mnuCheckUpdates_Click()
    SplashUpdate.Show vbModal
    
End Sub

Private Sub mnuMasterLevel_Click()

    On Error Resume Next
    
    If mnuRealmAbility.Checked = True Then Call mnuRealmAbility_Click
    If mnuCB.Checked = True Then Call mnuCB_Click
    If mnuChampLevel.Checked = True Then Call mnuChampLevel_Click
    If mnuSpellcraft.Checked = True Then mnuSpellcraft.Checked = False
    
    If (MASTERLEVEL_ACTIVE = False) Then
        
        MASTERLEVEL_ACTIVE = True
        
        Call SavePreviousMultipurpose
        
        WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = "Description"
        lbl_Multipurpose.Caption = vbNullString
        lbl_Multipurpose.ForeColor = &H8000&
        lbl_Multipurpose.FontBold = False
        lbl_Multipurpose.FontSize = 7
        
        frameTool(FRAME_ML).ZOrder 0
        Do
            DoEvents
            frameTool(FRAME_ML).Top = frameTool(FRAME_ML).Top - SP_MD_PROGRESS_CHANGE
    
            If frameTool(FRAME_ML).Top <= frameTool(FRAME_SC).Top Then
                frameTool(FRAME_ML).Top = frameTool(FRAME_SC).Top
                Exit Do
            End If
        Loop
    Else
        MASTERLEVEL_ACTIVE = False
        
        Call LoadPreviousMultipurpose
        
        Do
            DoEvents
            frameTool(FRAME_ML).Top = frameTool(FRAME_ML).Top + SP_MD_PROGRESS_CHANGE
            
            If frameTool(FRAME_ML).Top > (frameTool(FRAME_SC).Top + frameTool(FRAME_SC).Height) Then
                frameTool(FRAME_ML).Top = frameTool(FRAME_ML).Top + 1500
                Exit Do
            End If
        Loop
    End If
    
    mnuMasterLevel.Checked = MASTERLEVEL_ACTIVE
    
End Sub

Private Sub mnuPopupQuit_Click()

    EXIT_TO_SYSTRAY = False
    Call ExitNice
    
End Sub

Private Sub mnuPopupRestore_Click()

    WS.WindowState = vbNormal
    WS.Show
        
End Sub

Private Sub mnuRealmAbility_Click()

    On Error Resume Next
            
    If mnuCB.Checked = True Then Call mnuCB_Click
    If mnuMasterLevel.Checked = True Then Call mnuMasterLevel_Click
    If mnuChampLevel.Checked = True Then Call mnuChampLevel_Click
    If mnuSpellcraft.Checked = True Then mnuSpellcraft.Checked = False
    
    If (REALMABILITY_ACTIVE = False) Then
        
        REALMABILITY_ACTIVE = True
        
        Call SavePreviousMultipurpose
        
        WorkshopLabel(WS_MULTIPURPOSE_TITLE_INDEX).Caption = "Description"
        lbl_Multipurpose.Caption = vbNullString
        lbl_Multipurpose.ForeColor = &H8000&
        lbl_Multipurpose.FontBold = False
        lbl_Multipurpose.FontSize = 7
        
        frameTool(FRAME_RA).ZOrder 0
        Do
            DoEvents
            frameTool(FRAME_RA).Top = frameTool(FRAME_RA).Top - SP_MD_PROGRESS_CHANGE
    
            If frameTool(FRAME_RA).Top <= frameTool(FRAME_SC).Top Then
                frameTool(FRAME_RA).Top = frameTool(FRAME_SC).Top
                Exit Do
            End If
        Loop
    Else
        REALMABILITY_ACTIVE = False
                
        Call LoadPreviousMultipurpose
        
        Do
            DoEvents
            frameTool(FRAME_RA).Top = frameTool(FRAME_RA).Top + SP_MD_PROGRESS_CHANGE
            
            If frameTool(FRAME_RA).Top > (frameTool(FRAME_SC).Top + frameTool(FRAME_SC).Height) Then
                frameTool(FRAME_RA).Top = frameTool(FRAME_RA).Top + 1500
                Exit Do
            End If
        Loop
    End If
    
    mnuRealmAbility.Checked = REALMABILITY_ACTIVE
    
End Sub

Private Sub mnuSaveAllItems_Click()

    Dim lCtr As Integer
    
    For lCtr = 0 To 22
        If txt_ItemName_DP(lCtr).Text <> vbNullString Then
            Call cmd_SaveItem_DP_Click(lCtr)
        End If
    Next lCtr
    
End Sub

Private Sub mnuSetCraftBars_Click()
    
    CraftBar.Show vbModal
    
End Sub

Private Sub mnuSpellcraft_Click()

    On Error Resume Next
    
    If mnuRealmAbility.Checked = True Then Call mnuRealmAbility_Click
    If mnuMasterLevel.Checked = True Then Call mnuMasterLevel_Click
    If mnuChampLevel.Checked = True Then Call mnuChampLevel_Click
    If mnuCB.Checked = True Then Call mnuCB_Click
    
    mnuSpellcraft.Checked = True
        
End Sub

Private Sub mnuSwpArmor_Click(Index As Integer)

    Dim NEW_LOC As Integer
    
    Select Case Index
        Case 1  'chest
            NEW_LOC = WS_DOLL_CHEST
        Case 2  'arms
            NEW_LOC = WS_DOLL_ARMS
        Case 3  'head
            NEW_LOC = WS_DOLL_HEAD
        Case 4  'legs
            NEW_LOC = WS_DOLL_LEGS
        Case 5  'hands
            NEW_LOC = WS_DOLL_HANDS
        Case 6  'feet
            NEW_LOC = WS_DOLL_FEET
    End Select
    
    Call SwapGems(CURRENT_LOCATION, NEW_LOC)
        
End Sub

Private Sub mnuSwpSpare_Click(Index As Integer)

    Dim NEW_LOC As Integer
    
    Select Case Index
        Case 1  'main
            NEW_LOC = WS_DOLL_RIGHTSPARE
        Case 2  'off
            NEW_LOC = WS_DOLL_LEFTSPARE
        Case 3  '2hand
            NEW_LOC = WS_DOLL_2HANDSPARE
        Case 4  'ranged
            NEW_LOC = WS_DOLL_RANGEDSPARE
    End Select
    
    Call SwapGems(CURRENT_LOCATION, NEW_LOC)

End Sub

Private Sub mnuSwpWeap_Click(Index As Integer)

    Dim NEW_LOC As Integer
    
    Select Case Index
        Case 1  'main
            NEW_LOC = WS_DOLL_RHAND
        Case 2  'off
            NEW_LOC = WS_DOLL_LHAND
        Case 3  '2hand
            NEW_LOC = WS_DOLL_2HAND
        Case 4  'ranged
            NEW_LOC = WS_DOLL_RANGED
    End Select
    
    Call SwapGems(CURRENT_LOCATION, NEW_LOC)
    
End Sub

Private Sub mnuTopics_Click()

End Sub

Private Sub opt_Alb_Click(Index As Integer)

    Dim NotValue As Boolean
    
    opt_Alb(Index).Tag = opt_Alb(Index).Value
    NotValue = Not opt_Alb(Index).Value
    opt_Hib(Index).Tag = NotValue
    opt_Mid(Index).Tag = NotValue
    opt_All(Index).Tag = NotValue
    
End Sub

Private Sub opt_All_Click(Index As Integer)

    Dim NotValue As Boolean
    
    opt_All(Index).Tag = opt_All(Index).Value
    NotValue = Not opt_All(Index).Value
    opt_Alb(Index).Tag = NotValue
    opt_Hib(Index).Tag = NotValue
    opt_Mid(Index).Tag = NotValue
    
End Sub

Private Sub opt_Hib_Click(Index As Integer)

    Dim NotValue As Boolean
    
    opt_Hib(Index).Tag = opt_Hib(Index).Value
    NotValue = Not opt_Hib(Index).Value
    opt_Alb(Index).Tag = NotValue
    opt_Mid(Index).Tag = NotValue
    opt_All(Index).Tag = NotValue
    
End Sub

Private Sub opt_Mid_Click(Index As Integer)

    Dim NotValue As Boolean
    
    opt_Mid(Index).Tag = opt_Mid(Index).Value
    NotValue = Not opt_Mid(Index).Value
    opt_Alb(Index).Tag = NotValue
    opt_Hib(Index).Tag = NotValue
    opt_All(Index).Tag = NotValue
    
End Sub

Private Sub timer_RealmAbilities_Timer(Index As Integer)
    
    If Index = WS_TIMER_UNLOAD Then
        'unload ra forms if there are any
        Call UnLoadRealmAbilities
        
    ElseIf Index = WS_TIMER_LOAD Then
    
        'unload stuff if theres anything there
        Call UnLoadRealmAbilities
        'load the forms for ras
        Call LoadRealmAbilities(TOON)
        
    End If
    
    'turn off the timer
    timer_RealmAbilities(Index).Enabled = False
    
End Sub

Private Sub timer_Skills_Timer(Index As Integer)
    
    Dim i As Long
    Dim j As Long
    Dim lSpellDetailIndex As Long
    
    If Index = WS_TIMER_UNLOAD Then
        'unload trainer forms if there are any
        Call UnLoadSkillTrainer(TOON)
        
    ElseIf Index = WS_TIMER_LOAD Then
    
        'unload stuff if theres anything there
        Call UnLoadSkillTrainer(TOON)
        
        For i = 0 To shapeSpellClass.UBound
            If i > 0 Then
            
                Unload lbl_SpellClass(i)
                Unload shapeSpellClass(i)
                
                For j = 0 To 15
                    lSpellDetailIndex = ((i * 100) + j)
                    
                    Unload lbl_SpellDetail(lSpellDetailIndex)
                Next j
                
            Else
                lbl_SpecSpent(i).Tag = "0"
                lbl_SpecSpent(i).Caption = "Spent: 0"
                
                lbl_SpellClass(i).Caption = ""
                lbl_SpellClass(i).Tag = ""
                lbl_SpellClass(i).ToolTipText = ""
                
                lbl_SpellClass(i).Visible = False
                shapeSpellClass(i).Visible = False
                
                For j = 0 To 15
                    lbl_SpellDetail(j).Caption = ""
                    lbl_SpellDetail(j).Tag = ""
                    lbl_SpellDetail(j).ToolTipText = ""
                    lbl_SpellDetail(j).Visible = False
                Next j
            End If
        Next i
        
        'load the forms for traimer
        Call LoadSkillTrainer(TOON)
        Call UpdateBaselineSkills
        Call UpdateSpecPoints
    End If
    
    'turn off the timer
    timer_Skills(Index).Enabled = False
    
End Sub

Private Sub TimerCheckUpdate_Timer()
    UPDATE_CHECK_COUNTER = UPDATE_CHECK_COUNTER + 1
    If UPDATE_CHECK_COUNTER = UPDATE_CHECK_INTERVAL Then
        Call CheckUpdate
        If UPDATE_AVAILABLE Then WS.Caption = WORKSHOP_TITLE & WORKSHOP_UPDATE_MESSAGE
        UPDATE_CHECK_COUNTER = 0
    End If
End Sub

Private Sub txt_AFDPS_DP_Change(Index As Integer)

    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub txt_GemAmountSC5_KeyPress(Index As Integer, KeyAscii As Integer)

    If KeyAscii <> vbKeyDelete And KeyAscii <> vbKeyBack Then
    
        If KeyAscii > 47 And KeyAscii < 58 Then
            txt_GemAmountSC5(Index).SelStart = Len(txt_GemAmountSC5(Index).Text)
        Else
            KeyAscii = 0
        End If
        
    End If
    
End Sub

Private Sub txt_ItemLevel_DP_Change(Index As Integer)

    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub txt_ItemName_DP_Change(Index As Integer)

    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub txt_ItemQuality_Change(Index As Integer)
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
End Sub

Private Sub txt_ItemSPD_DP_Change(Index As Integer)
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
End Sub

Private Sub txt_Level_Change()

    txt_Level.Text = Val(txt_Level.Text)
        
    If Val(txt_Level.Text) < 51 And Val(txt_Level.Text) > 0 Then TOON.LEVEL = Val(txt_Level.Text)
        
    If cmb_Class.Text <> vbNullString Then
        Call UpdateSpecPoints
        Call CalculatePSTValues(TOON)
        Call RefreshAttributeLabels
        Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        Call UpdateBaselineSkills
    End If
    
    Call CheckWorkshop
    
    If Not APPLICATION_PRE_START Then txt_Level.SetFocus
    
End Sub

Private Sub txt_Level_KeyPress(KeyAscii As Integer)
        
    If KeyAscii > 47 Or KeyAscii < 58 Then
        If Len(txt_Level.Text) = 2 Then
            txt_Level.Text = vbNullString
        ElseIf (Val(txt_Level.Text) = 5) And (Chr$(KeyAscii) <> "0") Then
            txt_Level.Text = vbNullString
        ElseIf (Val(txt_Level.Text) > 5) Then
            txt_Level.Text = vbNullString
        End If
                
        txt_Level.SelStart = Len(txt_Level.Text)
    ElseIf KeyAscii <> vbKeyBack And KeyAscii <> vbKeyDelete Then
        KeyAscii = 0
    End If

End Sub

Private Sub txt_RealmRank_KeyPress(KeyAscii As Integer)

    If KeyAscii > 47 And KeyAscii < 58 Then
        If Len(txt_RealmRank.Text) < 2 Then
            If Val(txt_RealmRank.Text) = 1 Then
                txt_RealmRank.Text = "1" & Chr$(KeyAscii)
                If Val(txt_RealmRank.Text) > RA_MAX_REALM_RANK Then txt_RealmRank.Text = vbNullString
                txt_RealmRank.SelStart = Len(txt_RealmRank.Text)
            Else
                txt_RealmRank.Text = vbNullString
            End If
        Else
            txt_RealmRank.Text = vbNullString
        End If
        
        If Val(txt_RealmRank.Text) = RA_MAX_REALM_RANK Then txt_RealmLevel = "0"
    ElseIf KeyAscii = vbKeyReturn Then
        Call cmd_RecalculateRealmRankInfo_MouseUp(0, 1, 0, 0, 0)
    ElseIf KeyAscii <> vbKeyBack And KeyAscii <> vbKeyDelete Then
        KeyAscii = 0
    End If
    
End Sub

Private Sub txt_RealmLevel_KeyPress(KeyAscii As Integer)

    If KeyAscii > 47 And KeyAscii < 58 Then
        txt_RealmLevel.Text = vbNullString
        txt_RealmLevel.Text = Chr$(KeyAscii)
        txt_RealmLevel.SelStart = Len(txt_RealmLevel.Text)
        If Val(txt_RealmRank.Text) = RA_MAX_REALM_RANK Then
            txt_RealmLevel.Text = "0"
            txt_RealmLevel.SelStart = Len(txt_RealmLevel.Text)
        End If
    ElseIf KeyAscii = vbKeyReturn Then
        Call cmd_RecalculateRealmRankInfo_MouseUp(0, 1, 0, 0, 0)
    End If
    
End Sub

Public Sub RefreshTemplate()

 Dim lCtr As Integer
    
    For lCtr = 0 To WS_DOLL_MYTHICAL
    
        If (lCtr = WS_DOLL_GEM Or _
            lCtr = WS_DOLL_LRING Or _
            lCtr = WS_DOLL_LWRIST Or _
            lCtr = WS_DOLL_RWRIST Or _
            lCtr = WS_DOLL_RRING Or _
            lCtr = WS_DOLL_WAIST Or _
            lCtr = WS_DOLL_CLOAK Or _
            lCtr = WS_DOLL_NECK Or _
            lCtr = WS_DOLL_MYTHICAL) Then
            
            chk_Equip_DP(lCtr).Value = vbUnchecked
            chk_Equip_DP(lCtr).Value = vbChecked
        Else
        
            If chk_Equip_SC(lCtr).Value = vbChecked Then
                chk_Equip_SC(lCtr).Value = vbUnchecked
                chk_Equip_SC(lCtr).Value = vbChecked
            ElseIf chk_Equip_DP(lCtr).Value = vbChecked Then
                chk_Equip_DP(lCtr).Value = vbUnchecked
                chk_Equip_DP(lCtr).Value = vbChecked
            End If
        End If
    Next lCtr

End Sub

Public Sub RefreshDisplay(Index As Integer)
                     
    Call mnuBonusDisplay_Click(Index)
    
End Sub

Private Sub CalculateItemUtilitySC(Index As Integer)
'working as intended 10/23/06
'procedure expectation:
'adds the utility values stored on the GemSelectSC tags

    Dim Util As Single

    Util = Val(cmb_GemSelectSC1(Index).Tag) + _
           Val(cmb_GemSelectSC2(Index).Tag) + _
           Val(cmb_GemSelectSC3(Index).Tag) + _
           Val(cmb_GemSelectSC4(Index).Tag)

    lbl_ItemUtility_Value(Index).Caption = Format(Util, "0.00")
    lbl_ItemUtility_Value(Index).Tag = Util

End Sub

Private Sub CalculateItemUtilityDP(Index As Integer)
'working as intended 10/23/06
'procedure expectation:
'adds up the utility value stored on the GemSelect tag property

    Dim Util As Single
        
    Util = Val(cmb_GemSelect_DP1(Index).Tag) + _
           Val(cmb_GemSelect_DP2(Index).Tag) + _
           Val(cmb_GemSelect_DP3(Index).Tag) + _
           Val(cmb_GemSelect_DP4(Index).Tag) + _
           Val(cmb_GemSelect_DP5(Index).Tag) + _
           Val(cmb_GemSelect_DP6(Index).Tag) + _
           Val(cmb_GemSelect_DP7(Index).Tag) + _
           Val(cmb_GemSelect_DP8(Index).Tag) + _
           Val(cmb_GemSelect_DP9(Index).Tag) + _
           Val(cmb_GemSelect_DP10(Index).Tag) + _
           Val(cmb_GemSelect_DP11(Index).Tag) + _
           Val(cmb_GemSelect_DP12(Index).Tag)
    
    lbl_ItemUtilityDP_Value(Index).Caption = "Utility: " & Format(Util, "0.00")
    lbl_ItemUtilityDP_Value(Index).Tag = Util
    
End Sub

Private Sub CalculateTotalUtility()
'working as intended 10/23/06

    Dim Util As Single
    Dim lCnt As Integer
    
    On Error Resume Next
    
    'add up spellcrafted locations first: Indicies
    If chk_Equip_SC(0).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(WS_DOLL_CHEST).Tag)
    If chk_Equip_SC(1).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(1).Tag)
    If chk_Equip_SC(5).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(5).Tag)
    If chk_Equip_SC(6).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(6).Tag)
    If chk_Equip_SC(7).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(7).Tag)
    If chk_Equip_SC(8).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(8).Tag)
    If chk_Equip_SC(9).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(9).Tag)
    If chk_Equip_SC(10).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(10).Tag)
    If chk_Equip_SC(14).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(14).Tag)
    If chk_Equip_SC(15).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(15).Tag)
    If chk_Equip_SC(18).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(18).Tag)
    If chk_Equip_SC(19).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(19).Tag)
    If chk_Equip_SC(20).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(20).Tag)
    If chk_Equip_SC(21).Value = vbChecked Then Util = Util + Val(lbl_ItemUtility_Value(21).Tag)
    
    'now add up drops
    For lCnt = 0 To 21
        If chk_Equip_DP(lCnt).Value = vbChecked Then Util = Util + Val(lbl_ItemUtilityDP_Value(lCnt).Tag)
    Next lCnt
    
    lbl_SuitUtilityValue.Caption = STR$(Format(Util, "0.00"))
    lbl_SuitUtilityValue.Tag = Util
    
End Sub

Private Sub chk_Equip_DP_Click(Index As Integer)
    
    Dim iValueIndex As Long
    Dim jValueIndex As Long
  
    Dim Utility_Modifier As Single
    
    Static bHereAlready As Boolean
        
    If APPLICATION_PRE_START = False Then
        
        If Index = WS_DOLL_GEM Or _
           Index = WS_DOLL_LRING Or _
           Index = WS_DOLL_LWRIST Or _
           Index = WS_DOLL_RWRIST Or _
           Index = WS_DOLL_RRING Or _
           Index = WS_DOLL_WAIST Or _
           Index = WS_DOLL_CLOAK Or _
           Index = WS_DOLL_NECK Or _
           Index = WS_DOLL_MYTHICAL Then
           
            If chk_Equip_DP(Index).Value = vbChecked Then 'that means we clicked it and it's now checked, so load the stats
            
                If (txt_GemAmount_DP1(Index)) <> vbNullString Then Call txt_GemAmount_DP1_Change(Index)
                If (txt_GemAmount_DP2(Index)) <> vbNullString Then Call txt_GemAmount_DP2_Change(Index)
                If (txt_GemAmount_DP3(Index)) <> vbNullString Then Call txt_GemAmount_DP3_Change(Index)
                If (txt_GemAmount_DP4(Index)) <> vbNullString Then Call txt_GemAmount_DP4_Change(Index)
                If (txt_GemAmount_DP5(Index)) <> vbNullString Then Call txt_GemAmount_DP5_Change(Index)
                If (txt_GemAmount_DP6(Index)) <> vbNullString Then Call txt_GemAmount_DP6_Change(Index)
                If (txt_GemAmount_DP7(Index)) <> vbNullString Then Call txt_GemAmount_DP7_Change(Index)
                If (txt_GemAmount_DP8(Index)) <> vbNullString Then Call txt_GemAmount_DP8_Change(Index)
                If (txt_GemAmount_DP9(Index)) <> vbNullString Then Call txt_GemAmount_DP9_Change(Index)
                If (txt_GemAmount_DP10(Index)) <> vbNullString Then Call txt_GemAmount_DP10_Change(Index)
                If (txt_GemAmount_DP11(Index)) <> vbNullString Then Call txt_GemAmount_DP11_Change(Index)
                If (txt_GemAmount_DP12(Index)) <> vbNullString Then Call txt_GemAmount_DP12_Change(Index)
                
            ElseIf chk_Equip_DP(Index).Value = vbUnchecked Then   'that means it's unchekced now after clicking it
            
                jValueIndex = TranslateLocationToMatrix(Index)
        
                If cmb_GemSelect_DP1(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP1(Index).Text, cmb_GemEffect_DP1(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP2(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP2(Index).Text, cmb_GemEffect_DP2(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP3(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP3(Index).Text, cmb_GemEffect_DP3(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP4(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP4(Index).Text, cmb_GemEffect_DP4(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP5(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP5(Index).Text, cmb_GemEffect_DP5(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP6(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP6(Index).Text, cmb_GemEffect_DP6(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP7(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP7(Index).Text, cmb_GemEffect_DP7(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP8(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP8(Index).Text, cmb_GemEffect_DP8(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP9(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP9(Index).Text, cmb_GemEffect_DP9(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP10(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP10(Index).Text, cmb_GemEffect_DP10(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP11(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP11(Index).Text, cmb_GemEffect_DP11(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP12(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP12(Index).Text, cmb_GemEffect_DP12(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
        Else    'the Index of what was clicked didn't belong to an accessory slot so it's either armor, weapon or spare
        
            If chk_Equip_DP(Index).Value = vbChecked Then       'that means we clicked it and it's now checked, so load the stats
                
                'determine who needs to be disabled, look for weapon slots first since they're bitches, case else - everything else not covered
                Select Case Index
                    Case WS_DOLL_RHAND
                        chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_LHAND
                        chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_2HAND
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_RANGED
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_RIGHTSPARE
                        chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_LEFTSPARE
                        chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
    
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_2HANDSPARE
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case WS_DOLL_RANGEDSPARE
                        chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                        
                        chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                        
                        chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                        chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                        
                        chk_Equip_SC(Index).Value = vbUnchecked
                        
                    Case Else
                        chk_Equip_SC(Index).Value = vbUnchecked
                End Select
                
                If (txt_GemAmount_DP1(Index)) <> vbNullString Then Call txt_GemAmount_DP1_Change(Index)
                If (txt_GemAmount_DP2(Index)) <> vbNullString Then Call txt_GemAmount_DP2_Change(Index)
                If (txt_GemAmount_DP3(Index)) <> vbNullString Then Call txt_GemAmount_DP3_Change(Index)
                If (txt_GemAmount_DP4(Index)) <> vbNullString Then Call txt_GemAmount_DP4_Change(Index)
                If (txt_GemAmount_DP5(Index)) <> vbNullString Then Call txt_GemAmount_DP5_Change(Index)
                If (txt_GemAmount_DP6(Index)) <> vbNullString Then Call txt_GemAmount_DP6_Change(Index)
                If (txt_GemAmount_DP7(Index)) <> vbNullString Then Call txt_GemAmount_DP7_Change(Index)
                If (txt_GemAmount_DP8(Index)) <> vbNullString Then Call txt_GemAmount_DP8_Change(Index)
                If (txt_GemAmount_DP9(Index)) <> vbNullString Then Call txt_GemAmount_DP9_Change(Index)
                If (txt_GemAmount_DP10(Index)) <> vbNullString Then Call txt_GemAmount_DP10_Change(Index)
                If (txt_GemAmount_DP11(Index)) <> vbNullString Then Call txt_GemAmount_DP11_Change(Index)
                If (txt_GemAmount_DP12(Index)) <> vbNullString Then Call txt_GemAmount_DP12_Change(Index)
                
            ElseIf chk_Equip_DP(Index).Value = vbUnchecked Then       'this means we clicked it and it's now unchecked so. have fun
            
                jValueIndex = TranslateLocationToMatrix(Index)
        
                If cmb_GemSelect_DP1(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP1(Index).Text, cmb_GemEffect_DP1(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP2(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP2(Index).Text, cmb_GemEffect_DP2(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP3(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP3(Index).Text, cmb_GemEffect_DP3(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP4(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP4(Index).Text, cmb_GemEffect_DP4(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP5(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP5(Index).Text, cmb_GemEffect_DP5(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP6(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP6(Index).Text, cmb_GemEffect_DP6(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP7(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP7(Index).Text, cmb_GemEffect_DP7(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP8(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP8(Index).Text, cmb_GemEffect_DP8(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP9(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP9(Index).Text, cmb_GemEffect_DP9(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP10(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP10(Index).Text, cmb_GemEffect_DP10(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP11(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP11(Index).Text, cmb_GemEffect_DP11(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If cmb_GemSelect_DP12(Index).Text <> vbNullString Then
                    iValueIndex = TranslateEffectToMatrix(cmb_GemSelect_DP12(Index).Text, cmb_GemEffect_DP12(Index).Text, Utility_Modifier)
                    TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
                End If
                
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
       
        End If
    End If
    
End Sub

Private Sub chk_Equip_SC_Click(Index As Integer)

    Dim iValueIndex As Long
    Dim jValueIndex As Long
        
    Dim Utility_Modifier As Single
    
    If APPLICATION_PRE_START = False Then
         
         If chk_Equip_SC(Index).Value = vbChecked Then   'this means we clicked it and set it to checked
             
             'determine who needs to be disabled, look for weapon slots first since they're bitches, case else - everything else not covered
             Select Case Index
                 Case WS_DOLL_RHAND
                     chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_LHAND
                     chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_2HAND
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_RANGED
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_RIGHTSPARE
                     chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_LEFTSPARE
                     chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked

                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_2HANDSPARE
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case WS_DOLL_RANGEDSPARE
                     chk_Equip_DP(WS_DOLL_RANGED).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RANGED).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_2HAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
                     
                     chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_LHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_LHAND).Value = vbUnchecked
                     
                     chk_Equip_DP(WS_DOLL_RHAND).Value = vbUnchecked
                     chk_Equip_SC(WS_DOLL_RHAND).Value = vbUnchecked
                     
                     chk_Equip_DP(Index).Value = vbUnchecked
                     
                 Case Else
                     chk_Equip_DP(Index).Value = vbUnchecked
             End Select
             
             'now set the current Index spellcrafted item to enabled
             If cmb_GemSelectSC1(Index).Text <> vbNullString Then Call cmb_GemAmountSC1_Click(Index)
             If cmb_GemSelectSC2(Index).Text <> vbNullString Then Call cmb_GemAmountSC2_Click(Index)
             If cmb_GemSelectSC3(Index).Text <> vbNullString Then Call cmb_GemAmountSC3_Click(Index)
             If cmb_GemSelectSC4(Index).Text <> vbNullString Then Call cmb_GemAmountSC4_Click(Index)
             If cmb_GemSelectSC5(Index).Text <> vbNullString Then Call txt_GemAmountSC5_Change(Index)
             
         ElseIf chk_Equip_SC(Index).Value = vbUnchecked Then   'this means we clicked it and set it to unchecked
         
             jValueIndex = TranslateLocationToMatrix(Index)
             
             If cmb_GemEffectSC1(Index).Text <> vbNullString Then
                 iValueIndex = TranslateEffectToMatrix(cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), Utility_Modifier)
                 TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
             End If
             
             If cmb_GemEffectSC2(Index).Text <> vbNullString Then
                 iValueIndex = TranslateEffectToMatrix(cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), Utility_Modifier)
                 TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
             End If
             
             If cmb_GemEffectSC3(Index).Text <> vbNullString Then
                 iValueIndex = TranslateEffectToMatrix(cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), Utility_Modifier)
                 TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
             End If
             
             If cmb_GemEffectSC4(Index).Text <> vbNullString Then
                 iValueIndex = TranslateEffectToMatrix(cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), Utility_Modifier)
                 TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
             End If
             
             If cmb_GemEffectSC5(Index).Text <> vbNullString Then
                 iValueIndex = TranslateEffectToMatrix(cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), Utility_Modifier)
                 TOON.STAT_MATRIX(iValueIndex, jValueIndex) = 0
             End If
             
             
             If TEMPLATE_LOADING = False Then
                Call RefreshAttributeLabels
                Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
                Call CalculateAttributeTotals(TOON)
                If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
             End If
         End If
         
    End If
    
End Sub

Private Sub cmb_GemAmountSC1_Click(Index As Integer)

    Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    
    'Call CalculateItemUtilitySC(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub cmb_GemAmountSC2_Click(Index As Integer)

    Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    
    'Call CalculateItemUtilitySC(Index)
    'Call CalculateTotalUtility
        
End Sub

Private Sub cmb_GemAmountSC3_Click(Index As Integer)

    Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
        
    'Call CalculateItemUtilitySC(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub cmb_GemAmountSC4_Click(Index As Integer)

    Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
        
    'Call CalculateItemUtilitySC(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub cmb_GemEffect_DP1_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If
    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP10_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP11_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP12_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP2_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP3_Click(Index As Integer)
    
    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP4_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP5_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP6_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP7_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP8_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffect_DP9_Click(Index As Integer)

    If chk_Equip_DP(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffectSC5_Click(Index As Integer)

    If chk_Equip_SC(Index).Value = 1 Then
        Call AssignEffect(Index, cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), txt_GemAmountSC5(Index), TOON)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If

    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub cmb_GemEffectSC1_Click(Index As Integer)

    Call cmb_GemAmountSC1_Click(Index)
    
End Sub

Private Sub cmb_GemEffectSC2_Click(Index As Integer)
    
    Call cmb_GemAmountSC2_Click(Index)
    
End Sub

Private Sub cmb_GemEffectSC3_Click(Index As Integer)

    Call cmb_GemAmountSC3_Click(Index)
    
End Sub

Private Sub cmb_GemEffectSC4_Click(Index As Integer)

    Call cmb_GemAmountSC4_Click(Index)
    
End Sub

Private Sub cmb_GemSelectSC5_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), txt_GemAmountSC5(Index), chk_Equip_SC(Index), TOON)
    
End Sub

Private Sub cmd_ClearItem_DP_Click(Index As Integer)

    cmb_GemSelect_DP1(Index).ListIndex = 0
    cmb_GemSelect_DP2(Index).ListIndex = 0
    cmb_GemSelect_DP3(Index).ListIndex = 0
    cmb_GemSelect_DP4(Index).ListIndex = 0
    cmb_GemSelect_DP5(Index).ListIndex = 0
    cmb_GemSelect_DP6(Index).ListIndex = 0
    cmb_GemSelect_DP7(Index).ListIndex = 0
    cmb_GemSelect_DP8(Index).ListIndex = 0
    cmb_GemSelect_DP9(Index).ListIndex = 0
    cmb_GemSelect_DP10(Index).ListIndex = 0
    cmb_GemSelect_DP11(Index).ListIndex = 0
    cmb_GemSelect_DP12(Index).ListIndex = 0
        
    txt_GemAmount_DP1(Index).Text = vbNullString
    txt_GemAmount_DP2(Index).Text = vbNullString
    txt_GemAmount_DP3(Index).Text = vbNullString
    txt_GemAmount_DP4(Index).Text = vbNullString
    txt_GemAmount_DP5(Index).Text = vbNullString
    txt_GemAmount_DP6(Index).Text = vbNullString
    txt_GemAmount_DP7(Index).Text = vbNullString
    txt_GemAmount_DP8(Index).Text = vbNullString
    txt_GemAmount_DP9(Index).Text = vbNullString
    txt_GemAmount_DP10(Index).Text = vbNullString
    txt_GemAmount_DP11(Index).Text = vbNullString
    txt_GemAmount_DP12(Index).Text = vbNullString
    
    txt_ItemName_DP(Index).Text = vbNullString
    txt_ItemLevel_DP(Index).Text = vbNullString
    txt_ItemQuality(Index).Text = vbNullString
    txt_AFDPS_DP(Index).Text = vbNullString
    txt_ItemSPD_DP(Index).Text = vbNullString
    
    txt_ItemName_DP(Index).Tag = vbNullString
    
    cmd_SaveItem_DP(Index).Enabled = True
    
    opt_Alb(Index).Tag = False
    opt_Hib(Index).Tag = False
    opt_Mid(Index).Tag = False
    opt_All(Index).Tag = False
    
    Select Case TOON.REALM
        Case 0
            opt_Alb(Index).Value = True
            opt_Alb(Index).Tag = opt_Alb(Index).Value
        Case 1
            opt_Hib(Index).Value = True
            opt_Hib(Index).Tag = opt_Hib(Index).Value
        Case 2
            opt_Mid(Index).Value = True
            opt_Mid(Index).Tag = opt_Mid(Index).Value
    End Select
    
    lbl_ItemStatusDP(Index).Caption = vbNullString
    
End Sub

Private Sub cmd_ClearItem_SC_Click(Index As Integer)

    cmb_GemSelectSC1(Index).ListIndex = 0
    cmb_GemSelectSC2(Index).ListIndex = 0
    cmb_GemSelectSC3(Index).ListIndex = 0
    cmb_GemSelectSC4(Index).ListIndex = 0
   
    cmb_ItemQuality(Index).ListIndex = 4
    txt_ItemLevel_SC(Index).Text = vbNullString
    
    cmb_GemSelectSC5(Index).ListIndex = 0
    txt_GemAmountSC5(Index).Text = vbNullString
    
    cmb_TinctureSelectSC(Index).ListIndex = 0
    
End Sub

Private Sub cmd_LoadItem_DP_Click(Index As Integer)

    Call LoadItem(Index)

'    Dim hFile As Long
'    Dim sBuf As String * 1024   '1KB chunk
'    Dim sBuffer As String
'    Dim sTemp As String
'    Dim sPath As String
'    Dim lRet As Long
'
'    Dim lRead As Long
'    Dim cmdFlags As Long
'    Dim cmdFilter As String
'    Dim cmdMessage As String
'
'    Dim sSubPath As String
'    Dim sItemFolder As String
'
'    Dim sFilter As String
'    Dim sExt As String
'
'    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
'    cmdMessage = "Load Drop Item"
'    cmdFilter = "Dropped Item Files (*.xml)" & vbNullChar & "*.xml" & vbNullChar
'
'    sExt = "*.xml"
'
'    sItemFolder = GetOpenSavePath(Index)
'
'    sPath = LCase$(CMD_OpenSave(lOpen, Me.hwnd, cmdFilter, 1, sItemFolder, cmdMessage, cmdFlags))
'
'    If sPath <> vbNullString Then
'
'        If InStr(Mid$(sPath, Len(sPath) - 3), ".xml") <> 0 Then
'
'            hFile = CreateFile(sPath, GENERIC_WRITE Or GENERIC_READ, FILE_SHARE_WRITE Or FILE_SHARE_READ, ByVal CLng(0), OPEN_EXISTING, FILE_ATTRIBUTE_ARCHIVE, 0)
'
'            If hFile = -1 Then Exit Sub
'
'            'pull the file into a string buffer
'            Do
'                sBuf = vbNullString
'
'                lRet = ReadFile(hFile, ByVal sBuf, Len(sBuf), lRead, ByVal CLng(0))
'                If lRead = 0 Then Exit Do
'
'                If sBuf <> vbNullString Then sBuffer = sBuffer & sBuf
'            Loop
'
'            Call cmd_ClearItem_DP_Click(Index)
'
'            sTemp = LCase$(sBuffer)
'            'determine who's item it is!
'            If InStr(sTemp, "<scitem>") <> 0 And _
'               InStr(sTemp, "</scitem>") <> 0 And _
'               InStr(sTemp, "<dbsource>ethinarg</dbsource>") <> 0 And _
'               InStr(sTemp, "<classrestrictions>") <> 0 And _
'               InStr(sTemp, "</classrestrictions>") <> 0 And _
'               InStr(sTemp, "<dropitem>") <> 0 And _
'               InStr(sTemp, "</dropitem>") <> 0 Then
'                'at this point i'm pretty sure its an ethinarg database item
'
'                sBuffer = LCase$(sBuffer)
'                Call LoadEthinargDropItem(Index, sBuffer)
'
'            ElseIf InStr(sTemp, "<scitem>") <> 0 And _
'                   InStr(sTemp, "</scitem>") <> 0 And _
'                   InStr(sTemp, "<slot number=") <> 0 And _
'                   InStr(sTemp, "</slot>") <> 0 Then
'                sBuffer = LCase$(sBuffer)
'
'                'most likely a loki item
'                If InStr(sTemp, "<dbsource>loki</dbsource>") <> 0 And _
'                    InStr(sTemp, "<source>drop</source>") <> 0 Then
'
'                    Call LoadLokiDropItem(Index, sBuffer)
'
'                ElseIf InStr(sBuffer, "<activestate>drop</activestate>") <> 0 Then
'
'                    Call LoadKortDropItem(Index, sBuffer)
'                End If
'
'            ElseIf InStr(sTemp, "<workshop_drop_item>") <> 0 And _
'                   InStr(sTemp, "</workshop_drop_item>") <> 0 And _
'                   InStr(sTemp, "<ds1>") <> 0 And InStr(sTemp, "<de1>") <> 0 And InStr(sTemp, "<da1>") <> 0 Then
'                    'you can't lcase the buffer because you will have MD5 hash values in here that would be bad
'                    'moreover all of my items and templates are lowercase anyway except for the name and dbID
'                    'this should be enough to verify that it's mine
'                    Call LoadWorkshopDropItem(Index, sBuffer)
'
'            End If  'whos item is it
'
'        End If 'xml path check
'
'        lbl_ItemStatusDP(Index).Caption = "Item Loaded!"
'
'    End If
'

End Sub

Private Sub cmd_LoadItem_SC_Click(Index As Integer)

    Call LoadItem(Index)

'    Dim hFile As Long
'
'    Dim sPath As String
'    Dim sBuf As String * 1024
'    Dim sBuffer As String
'    Dim sTemp As String
'
'    Dim lRet As Long
'
'    Dim lRead As Long
'    Dim cmdFlags As Long
'    Dim cmdFilter As String
'    Dim cmdMessage As String
'    Dim sItemFolder As String
'
'    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
'    cmdFilter = "Crafted Item Files (*.xml)" & vbNullChar & "*.xml" & vbNullChar
'    cmdMessage = "Load Spellcrafted Item"
'
'    sItemFolder = GetOpenSavePath(Index)
'
'    sPath = LCase$(CMD_OpenSave(lOpen, Me.hwnd, cmdFilter, 1, sItemFolder, cmdMessage, cmdFlags))
'
'    If sPath <> vbNullString Then
'
'        hFile = CreateFile(sPath, GENERIC_WRITE Or GENERIC_READ, _
'                           FILE_SHARE_WRITE Or FILE_SHARE_READ, _
'                           ByVal CLng(0), OPEN_EXISTING, FILE_ATTRIBUTE_ARCHIVE, 0)
'
'        If hFile = -1 Then Exit Sub
'
'        Do
'            sBuf = vbNullString
'
'            lRet = ReadFile(hFile, ByVal sBuf, Len(sBuf), lRead, ByVal CLng(0))
'            'exit if there was no more data to read
'            If lRead = 0 Then Exit Do
'
'            If sBuf <> vbNullString Then sBuffer = sBuffer & sBuf
'        Loop
'
'        lRet = CloseHandle(hFile)
'
'        sBuffer = Trim$(sBuffer)
'        sTemp = LCase$(sBuffer)
'
'        'now we have the item file loaded into a buffer
'        'we need to determine what type of item it is (drop/craft)
'
'        '---begin item load code-----------------------------------------------------
'        'determine who's item it is!
'        If InStr(sTemp, "<scitem>") <> 0 And _
'           InStr(sTemp, "</scitem>") <> 0 And _
'           InStr(sTemp, "<dbsource>ethinarg</dbsource>") <> 0 And _
'           InStr(sTemp, "<classrestrictions>") <> 0 And _
'           InStr(sTemp, "</classrestrictions>") <> 0 And _
'           InStr(sTemp, "<dropitem>") <> 0 And _
'           InStr(sTemp, "</dropitem>") <> 0 Then
'            'at this point i'm pretty sure its an ethinarg database item
'
'            sBuffer = LCase$(sBuffer)
'
'            If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
'
'            Call cmd_ClearItem_DP_Click(Index)
'            Call LoadEthinargDropItem(Index, sBuffer)
'
'        ElseIf InStr(sTemp, "<scitem>") <> 0 And _
'              InStr(sTemp, "</scitem>") <> 0 And _
'               InStr(sTemp, "<slot number=") <> 0 And _
'               InStr(sTemp, "</slot>") <> 0 Then
'
'            sBuffer = LCase$(sBuffer)
'
'            If InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 And _
'                InStr(sBuffer, "<source>drop</source>") <> 0 Then
'                'most likely a loki drop item
'
'                If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
'
'                Call cmd_ClearItem_DP_Click(Index)
'                Call LoadLokiDropItem(Index, sBuffer)
'
'            ElseIf InStr(sBuffer, "<activestate>drop</activestate>") <> 0 Then
'                'probably a kort drop item
'
'                If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
'
'               Call cmd_ClearItem_DP_Click(Index)
'                Call LoadKortDropItem(Index, sBuffer)
'
'            ElseIf InStr(sBuffer, "<source>crafted</source>") <> 0 And _
'               InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 Then
'                'probably a loki crafted item
'
'                If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
'
'                Call cmd_ClearItem_SC_Click(Index)
'                Call LoadLokiCraftItem(Index, sBuffer, False)
'            Else
'                'nothing else it could be but a kort crafted item
'
'                If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
'
'                Call cmd_ClearItem_SC_Click(Index)
'                Call LoadKortCraftItem(Index, sBuffer)
'            End If
'
'        ElseIf InStr(sTemp, "<workshop_drop_item>") <> 0 And _
'               InStr(sTemp, "</workshop_drop_item>") <> 0 And _
'               InStr(sTemp, "<ds1>") <> 0 And InStr(sTemp, "<de1>") <> 0 And InStr(sTemp, "<da1>") <> 0 Then
'                'you can't lcase the buffer because you will have MD5 hash values in here that would be bad
'                'moreover all of my items and templates are lowercase anyway except for the name and dbID
'                'this should be enough to verify that it's mine
'
'            If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
'
'            Call cmd_ClearItem_DP_Click(Index)
'            Call LoadWorkshopDropItem(Index, sBuffer)
'
'        ElseIf InStr(sTemp, "<workshop_craft_item>") <> 0 And _
'               InStr(sTemp, "</workshop_craft_item>") <> 0 And _
'               InStr(sTemp, "<gs1>") <> 0 And InStr(sTemp, "</gs1>") <> 0 Then
'
'            sBuffer = LCase$(Trim$(Mid$(sBuffer, InStr(sBuffer, "<workshop_craft_item>"), InStr(sBuffer, "</workshop_craft_item>") + 21)))
'
'            If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
'
'            Call cmd_ClearItem_SC_Click(Index)
'            Call LoadWorkshopCraftItem(Index, sBuffer)
'
'        End If  'whos item is it
'
'        '---end item load code-------------------------------------------------------
        
        '---begin craft item load code----------------------------------------------------
        'If InStr(sBuffer, "<workshop_craft_item>") <> 0 And _
        '   InStr(sBuffer, "</workshop_craft_item>") <> 0 And _
        '   InStr(sBuffer, "<gs1>") <> 0 And InStr(sBuffer, "</gs1>") <> 0 Then
        '
        '   sBuffer = Trim$(Mid$(sBuffer, InStr(sBuffer, "<workshop_craft_item>"), InStr(sBuffer, "</workshop_craft_item>") + 21))
        '
        '   If Not opt_PlayerCraft(Index).Value Then Call opt_PlayerCraft_Click(Index)
        '
        '   Call cmd_ClearItem_SC_Click(Index)
        '   Call LoadWorkshopCraftItem(Index, sBuffer)
        '
        'ElseIf InStr(sBuffer, "<scitem>") <> 0 And _
        '       InStr(sBuffer, "</scitem>") <> 0 And _
        '       InStr(sBuffer, "<slot number=") <> 0 And _
        '       InStr(sBuffer, "</slot>") <> 0 Then
        '
        '       If InStr(sBuffer, "<source>crafted</source>") <> 0 And _
        '          InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 Then
        '
        '            Call cmd_ClearItem_SC_Click(Index)
        '            Call LoadLokiCraftItem(Index, sBuffer, False)
        '        Else
        '            Call cmd_ClearItem_SC_Click(Index)
        '            Call LoadKortCraftItem(Index, sBuffer)
        '        End If
        'End If
        '---end craft item load code------------------------------------------------------
        
'    End If
    
End Sub

Private Sub cmd_SaveItem_DP_Click(Index As Integer)

    Dim hFile As Long
    Dim sBuffer As String
    Dim lRet As Long
    
    Dim lWrite As Long
        
    Dim sSubPath As String
    Dim sItemFolder As String
    
    Dim sFilter As String
    Dim sExt As String
    
    sExt = ".xml"
    
    sItemFolder = GetOpenSavePath(Index)
    
    'remove invalid filename characters
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "\")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "/")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, ":")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "*")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "<")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, ">")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "|")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, "?")
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, Chr$(0))     'null char
    txt_ItemName_DP(Index).Text = RemoveString(txt_ItemName_DP(Index).Text, Chr$(34))    ' " character
    
    'finish construction of file path
    If txt_ItemName_DP(Index).Text <> vbNullString Then
        sItemFolder = sItemFolder & txt_ItemName_DP(Index).Text & sExt
    Else
        MsgBox "Item must have a name specified", vbCritical, "No File Name"
        Exit Sub
    End If
    
    'construct the item file structure
    If sItemFolder <> vbNullString Then
    
        sBuffer = vbNullString
        
        sBuffer = "<workshop_drop_item>"
        
        sBuffer = sBuffer & "<name>" & txt_ItemName_DP(Index).Text & "</name>" & _
                            "<level>" & txt_ItemLevel_DP(Index).Text & "</level>" & _
                            "<quality>" & txt_ItemQuality(Index).Text & "</quality>" & _
                            "<dps>" & txt_AFDPS_DP(Index).Text & "</dps>" & _
                            "<spd>" & txt_ItemSPD_DP(Index).Text & "</spd>"
                  
        If opt_Alb(Index).Value = True Then sBuffer = sBuffer & "<realm>alb</realm>"
        If opt_Hib(Index).Value = True Then sBuffer = sBuffer & "<realm>hib</realm>"
        If opt_Mid(Index).Value = True Then sBuffer = sBuffer & "<realm>mid</realm>"
        If opt_All(Index).Value = True Then sBuffer = sBuffer & "<realm>all</realm>"
                  
        sBuffer = sBuffer & "<ds1>" & cmb_GemSelect_DP1(Index).Text & "</ds1>" & _
                            "<de1>" & cmb_GemEffect_DP1(Index).Text & "</de1>" & _
                            "<da1>" & txt_GemAmount_DP1(Index).Text & "</da1>"

        sBuffer = sBuffer & "<ds2>" & cmb_GemSelect_DP2(Index).Text & "</ds2>" & _
                            "<de2>" & cmb_GemEffect_DP2(Index).Text & "</de2>" & _
                            "<da2>" & txt_GemAmount_DP2(Index).Text & "</da2>"
        
        sBuffer = sBuffer & "<ds3>" & cmb_GemSelect_DP3(Index).Text & "</ds3>" & _
                            "<de3>" & cmb_GemEffect_DP3(Index).Text & "</de3>" & _
                            "<da3>" & txt_GemAmount_DP3(Index).Text & "</da3>"
        
        sBuffer = sBuffer & "<ds4>" & cmb_GemSelect_DP4(Index).Text & "</ds4>" & _
                            "<de4>" & cmb_GemEffect_DP4(Index).Text & "</de4>" & _
                            "<da4>" & txt_GemAmount_DP4(Index).Text & "</da4>"
        
        sBuffer = sBuffer & "<ds5>" & cmb_GemSelect_DP5(Index).Text & "</ds5>" & _
                            "<de5>" & cmb_GemEffect_DP5(Index).Text & "</de5>" & _
                            "<da5>" & txt_GemAmount_DP5(Index).Text & "</da5>"
        
        sBuffer = sBuffer & "<ds6>" & cmb_GemSelect_DP6(Index).Text & "</ds6>" & _
                            "<de6>" & cmb_GemEffect_DP6(Index).Text & "</de6>" & _
                            "<da6>" & txt_GemAmount_DP6(Index).Text & "</da6>"
        
        sBuffer = sBuffer & "<ds7>" & cmb_GemSelect_DP7(Index).Text & "</ds7>" & _
                            "<de7>" & cmb_GemEffect_DP7(Index).Text & "</de7>" & _
                            "<da7>" & txt_GemAmount_DP7(Index).Text & "</da7>"
        
        sBuffer = sBuffer & "<ds8>" & cmb_GemSelect_DP8(Index).Text & "</ds8>" & _
                            "<de8>" & cmb_GemEffect_DP8(Index).Text & "</de8>" & _
                            "<da8>" & txt_GemAmount_DP8(Index).Text & "</da8>"
        
        sBuffer = sBuffer & "<ds9>" & cmb_GemSelect_DP9(Index).Text & "</ds9>" & _
                            "<de9>" & cmb_GemEffect_DP9(Index).Text & "</de9>" & _
                            "<da9>" & txt_GemAmount_DP9(Index).Text & "</da9>"
        
        sBuffer = sBuffer & "<ds10>" & cmb_GemSelect_DP10(Index).Text & "</ds10>" & _
                            "<de10>" & cmb_GemEffect_DP10(Index).Text & "</de10>" & _
                            "<da10>" & txt_GemAmount_DP10(Index).Text & "</da10>"
        
        sBuffer = sBuffer & "<ds11>" & cmb_GemSelect_DP11(Index).Text & "</ds11>" & _
                            "<de11>" & cmb_GemEffect_DP11(Index).Text & "</de11>" & _
                            "<da11>" & txt_GemAmount_DP11(Index).Text & "</da11>"
                  
        sBuffer = sBuffer & "<ds12>" & cmb_GemSelect_DP12(Index).Text & "</ds12>" & _
                            "<de12>" & cmb_GemEffect_DP12(Index).Text & "</de12>" & _
                            "<da12>" & txt_GemAmount_DP12(Index).Text & "</da12>"
        
        sBuffer = sBuffer & "</workshop_drop_item>"
        
        If LCase$(Mid$(sItemFolder, Len(sItemFolder) - (Len(Mid$(sExt, 2, Len(sExt) - 1))) + 1)) <> Mid$(sExt, 2, Len(sExt) - 1) Then sItemFolder = sItemFolder & Mid$(sExt, 2, Len(sExt) - 1)
        
        hFile = CreateFile(sItemFolder, GENERIC_WRITE Or GENERIC_READ, FILE_SHARE_WRITE Or FILE_SHARE_READ, ByVal CLng(0), CREATE_ALWAYS, FILE_ATTRIBUTE_ARCHIVE, 0)
        
        If hFile = -1 Then Exit Sub '*If hFile is -1 the file is not there and there has been an error
        
        lRet = WriteFile(hFile, ByVal sBuffer, Len(sBuffer), lWrite, ByVal CLng(0))
        'MsgBox "Item saved as: " & txt_ItemName_DP(Index).Text & sExt, vbInformation, "Item Saved"
        lRet = CloseHandle(hFile)
        
        lbl_ItemStatusDP(Index).Caption = "Item Saved!"
        
    End If
    
End Sub

Private Sub cmd_SaveItem_SC_Click(Index As Integer)

    Dim hFile As Long
    Dim sBuffer As String
    Dim sPath As String
    Dim lRet As Long
    
    Dim sTemp As String
    
    Dim lWrite As Long
    Dim cmdFlags As Long
    Dim cmdFilter As String
    Dim cmdMessage As String
    Dim sItemFolder As String
    
    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
    cmdFilter = "Crafted Item Files (*.xml)" & vbNullChar & "*.xml" & vbNullChar
    cmdMessage = "Save Spellcrafted Item"
    
    sItemFolder = GetOpenSavePath(Index)
    
    sPath = LCase$(CMD_OpenSave(lSave, Me.hwnd, cmdFilter, 1, sItemFolder, cmdMessage, cmdFlags))
    
    sTemp = WS.Caption
    
    WS.Caption = WORKSHOP_TITLE & " - Saving Item"
    If sPath <> vbNullString Then
        
        If Right$(sPath, 4) <> ".xml" Then sPath = sPath & ".xml"
        
        sBuffer = vbNullString
        
        sBuffer = "<workshop_craft_item>"
        
        sBuffer = sBuffer & WriteCraftLocation(CLng(Index))
                            
        sBuffer = sBuffer & "</workshop_craft_item>"
                
        hFile = CreateFile(sPath, GENERIC_WRITE Or GENERIC_READ, FILE_SHARE_WRITE Or FILE_SHARE_READ, ByVal CLng(0), CREATE_ALWAYS, FILE_ATTRIBUTE_ARCHIVE, 0)
        
        If hFile = -1 Then Exit Sub '*If hFile is -1 the file is not there and there has been an error
        
        lRet = WriteFile(hFile, ByVal sBuffer, Len(sBuffer), lWrite, ByVal CLng(0))
        lRet = CloseHandle(hFile)
    End If
    
    WS.Caption = sTemp
    
End Sub

Private Sub InitFrameZero()
    
    Dim Ctr As Long
    
    For Ctr = 0 To 4
        cmb_ItemQuality(0).AddItem STR(96 + Ctr)
    Next Ctr
    
    Call LoadSCFrameGemTypes(cmb_GemSelectSC1(0))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC2(0))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC3(0))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC4(0))
    Call LoadSC5GemTypes(cmb_GemSelectSC5(0))
   
    Call LoadDPGemTypes(cmb_GemSelect_DP1(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP2(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP3(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP4(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP5(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP6(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP7(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP8(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP9(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP10(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP11(0))
    Call LoadDPGemTypes(cmb_GemSelect_DP12(0))
    
    Call LoadSCProcTypes(0)
    
End Sub

Private Sub SetTotalCost()
'working as intended 10/23/06
'procedure expectation:
'cycles thru all valid indicies and sums up the cost value stored in the itemcost tags
'it then stores the summation in templatecost.tag and formats the cost into human friendly numbers
'This procedure should only be called from one place (SetItemCost)

    Dim Ctr As Long
    Dim lTotal As Long
    Dim sTemp As String
    
    On Error Resume Next
    
    If TEMPLATE_LOADING = False Then
        lTotal = 0
        
        For Ctr = WS_DOLL_CHEST To WS_DOLL_MYTHICAL
            lTotal = lTotal + Val(lbl_ItemCostSC(Ctr).Tag)
        Next Ctr
        
        lbl_TemplateCost.Tag = lTotal
        lbl_TemplateCost.Caption = FormatCost(lTotal)
    End If
    
End Sub

Private Sub SetItemCost(Index As Integer)
'working as intended 10/23/06
'procedure expectation:
'adds the values stored on the tags of each gem slot on a given Index location
'and then assigns the value to the itemcost tag of that Index and formats the cost into
'human friendly numbers. then finally calls SetTotalCost to update the entire suit cost

    Dim lTotal As Single
    
    If Val(lbl_GemNameSC1(Index).Tag) <> 0 Then lTotal = lTotal + Val(lbl_GemNameSC1(Index).Tag)
    If Val(lbl_GemNameSC2(Index).Tag) <> 0 Then lTotal = lTotal + Val(lbl_GemNameSC2(Index).Tag)
    If Val(lbl_GemNameSC3(Index).Tag) <> 0 Then lTotal = lTotal + Val(lbl_GemNameSC3(Index).Tag)
    If Val(lbl_GemNameSC4(Index).Tag) <> 0 Then lTotal = lTotal + Val(lbl_GemNameSC4(Index).Tag)
    If Val(lbl_TinctureCostSC(Index).Tag) <> 0 Then lTotal = lTotal + Val(lbl_TinctureCostSC(Index).Tag)
    
    lbl_ItemCostSC(Index).Tag = lTotal
    lbl_ItemCostSC(Index).Caption = FormatCost(CLng(lTotal))
    
    Call SetTotalCost
    
End Sub

Private Sub CalculateImbue(Index As Integer)

    Dim Gems(3, 1) As Single
    Dim gTotal As Single
    
    Dim Ctr As Long
    Dim j As Long
    Dim Best_J As Long
    
    Dim Best_Val As Single
    Dim Best_Pos As Single
    
    Gems(0, 0) = Val(lbl_GemPtsSC1(Index).Tag)
    Gems(1, 0) = Val(lbl_GemPtsSC2(Index).Tag)
    Gems(2, 0) = Val(lbl_GemPtsSC3(Index).Tag)
    Gems(3, 0) = Val(lbl_GemPtsSC4(Index).Tag)
    
    Gems(0, 1) = 1#
    Gems(1, 1) = 2#
    Gems(2, 1) = 3#
    Gems(3, 1) = 4#
    
    'sort the gem imbue values values
    For Ctr = 0 To 3
        Best_Val = Gems(Ctr, 0)
        Best_Pos = Gems(Ctr, 1)
        
        Best_J = Ctr
        
        For j = (Ctr + 1) To 3
            If Gems(j, 0) < Best_Val Then
                Best_Val = Gems(j, 0)
                Best_Pos = Gems(j, 1)
                
                Best_J = j
            End If
        Next j
        
        Gems(Best_J, 0) = Gems(Ctr, 0)
        Gems(Best_J, 1) = Gems(Ctr, 1)
        
        Gems(Ctr, 0) = Best_Val
        Gems(Ctr, 1) = Best_Pos
    Next Ctr
    
    'set caption of the maximum value
    Select Case Gems(3, 1)
        Case 1
            lbl_GemPtsSC1(Index).Caption = Format(Gems(3, 0), "0.0")
            lbl_GemPtsSC2(Index).Caption = Format(Val(lbl_GemPtsSC2(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC3(Index).Caption = Format(Val(lbl_GemPtsSC3(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC4(Index).Caption = Format(Val(lbl_GemPtsSC4(Index).Tag) / 2, "0.0")
        Case 2
            lbl_GemPtsSC1(Index).Caption = Format(Val(lbl_GemPtsSC1(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC2(Index).Caption = Format(Gems(3, 0), "0.0")
            lbl_GemPtsSC3(Index).Caption = Format(Val(lbl_GemPtsSC3(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC4(Index).Caption = Format(Val(lbl_GemPtsSC4(Index).Tag) / 2, "0.0")
        Case 3
            lbl_GemPtsSC1(Index).Caption = Format(Val(lbl_GemPtsSC1(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC2(Index).Caption = Format(Val(lbl_GemPtsSC2(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC3(Index).Caption = Format(Gems(3, 0), "0.0")
            lbl_GemPtsSC4(Index).Caption = Format(Val(lbl_GemPtsSC4(Index).Tag) / 2, "0.0")
        Case 4
            lbl_GemPtsSC1(Index).Caption = Format(Val(lbl_GemPtsSC1(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC2(Index).Caption = Format(Val(lbl_GemPtsSC2(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC3(Index).Caption = Format(Val(lbl_GemPtsSC3(Index).Tag) / 2, "0.0")
            lbl_GemPtsSC4(Index).Caption = Format(Gems(3, 0), "0.0")
    End Select
    
    If lbl_GemPtsSC1(Index).Tag <> 0 And (lbl_GemPtsSC2(Index).Tag = 0 And lbl_GemPtsSC3(Index).Tag = 0 And lbl_GemPtsSC4(Index).Tag = 0) Then lbl_GemPtsSC1(Index).Caption = Format(Val(lbl_GemPtsSC1(Index).Caption), "0.0")
    If lbl_GemPtsSC2(Index).Tag <> 0 And (lbl_GemPtsSC1(Index).Tag = 0 And lbl_GemPtsSC3(Index).Tag = 0 And lbl_GemPtsSC4(Index).Tag = 0) Then lbl_GemPtsSC2(Index).Caption = Format(Val(lbl_GemPtsSC2(Index).Caption), "0.0")
    If lbl_GemPtsSC3(Index).Tag <> 0 And (lbl_GemPtsSC1(Index).Tag = 0 And lbl_GemPtsSC2(Index).Tag = 0 And lbl_GemPtsSC4(Index).Tag = 0) Then lbl_GemPtsSC3(Index).Caption = Format(Val(lbl_GemPtsSC3(Index).Caption), "0.0")
    If lbl_GemPtsSC4(Index).Tag <> 0 And (lbl_GemPtsSC1(Index).Tag = 0 And lbl_GemPtsSC2(Index).Tag = 0 And lbl_GemPtsSC3(Index).Tag = 0) Then lbl_GemPtsSC4(Index).Caption = Format(Val(lbl_GemPtsSC4(Index).Caption), "0.0")
    
    
    gTotal = ((Gems(3, 0) * 2) + Gems(0, 0) + Gems(1, 0) + Gems(2, 0)) / 2
    lbl_ImbuePTS_Total_SC(Index).Caption = Format(gTotal, "0.00") & " /"
    
    If gTotal > (Val(lbl_ImbuePTS_Avail_SC(Index).Caption) + 5.5) Then
        lbl_Overcharge_SC(Index).ForeColor = &HFF&
        lbl_Overcharge_SC(Index).Caption = "Impossible"
    ElseIf gTotal > (Val(lbl_ImbuePTS_Avail_SC(Index).Caption)) Then
        lbl_Overcharge_SC(Index).ForeColor = &H800000
        lbl_Overcharge_SC(Index).Caption = Format(Val(lbl_ImbuePTS_Total_SC(Index).Caption) - Val(lbl_ImbuePTS_Avail_SC(Index).Caption), "0.00")
    Else
        lbl_Overcharge_SC(Index).ForeColor = &H800000
        lbl_Overcharge_SC(Index).Caption = "None"
    End If
    
End Sub

Private Sub UpdateStatCapDisplay(Index As Long, OverUnderEqual As Long)

    Select Case OverUnderEqual
        Case VALUE_OVER
            lbl_Attribute_Cap_Value(Index).ForeColor = &HFF&    'bright red
        Case VALUE_UNDER
            lbl_Attribute_Cap_Value(Index).ForeColor = &H80&    'dark red
        Case VALUE_EQUAL
            lbl_Attribute_Cap_Value(Index).ForeColor = &HC000&  'green
    End Select

End Sub

Private Sub UpdateStatDisplay(Index As Long, OverUnderEqual As Long)

    Select Case OverUnderEqual
        Case VALUE_OVER
            lbl_Attribute_Value(Index).ForeColor = &HFF&    'bright red
        Case VALUE_UNDER
            lbl_Attribute_Value(Index).ForeColor = &H80&    'dark red
        Case VALUE_EQUAL
            lbl_Attribute_Value(Index).ForeColor = &HC000&  'green
    End Select
       
End Sub

Private Sub CalculateAttributeTotals(tToon As TOON_TYPE)

    Dim ColumnSum As Long
    Dim lUsable As Long
    
    With SC_SETTINGS
        
        'CALCULATE OVERCAP AMOUNTS
        '---------------------------------------------------------------------------------------------------------------------------------
        'strength overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_STR).Tag = SumColumn(SM_LOTM_STR_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_STR_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_STR).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_STR).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_STR).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_STR).Tag
        End If
        
        'constitution overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_CON).Tag = SumColumn(SM_LOTM_CON_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_CON_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_CON).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_CON).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_CON).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_CON).Tag
        End If
        
        'dexterity overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Tag = SumColumn(SM_LOTM_DEX_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_DEX_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Tag
        End If
        
        'quickness overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Tag = SumColumn(SM_LOTM_QUI_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_QUI_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Tag
        End If
        
        'intelligence overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_INT).Tag = SumColumn(SM_LOTM_ACU_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_INT).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_INT).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_INT).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_INT).Tag
        End If
        
        'empathy overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Tag = SumColumn(SM_LOTM_ACU_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Tag
        End If
        
        'piety overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Tag = SumColumn(SM_LOTM_ACU_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Tag
        End If
        
        'charisma overcap
        lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Tag = SumColumn(SM_LOTM_ACU_CAP, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Caption = LOTM_MAX_STAT_CAP_BONUS - Val(lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Tag)
        Else
            lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Caption = lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Tag
        End If
        
        '---------------------------------------------------------------------------------------------------------------------------------
        'CALCULATE CAP AMOUNTS
        '---------------------------------------------------------------------------------------------------------------------------------
        'strength cap
        ColumnSum = SumColumn(SM_STR_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_STR, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_STR, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_STR, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_STR) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_STR) = lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'constitution cap
        ColumnSum = SumColumn(SM_CON_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_CON, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_CON, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_CON, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_CON) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_CON) = lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'dexterity cap
        ColumnSum = SumColumn(SM_DEX_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_DEX, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_DEX, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_DEX, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_DEX) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_DEX) = lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'quickness cap
        ColumnSum = SumColumn(SM_QUI_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_QUI, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_QUI, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_QUI, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_QUI) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_QUI) = lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'intelligence cap
        ColumnSum = SumColumn(SM_INT_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_INT) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_INT) = lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'empathy cap
        ColumnSum = SumColumn(SM_EMP_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_EMP) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_EMP) = lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'piety cap
        ColumnSum = SumColumn(SM_PIE_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_PIE) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_PIE) = lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'charisma cap
        ColumnSum = SumColumn(SM_CHA_CAP, BO_SCBONUS)
        If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = Int((tToon.LEVEL / 2) + 1)
            Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_OVER)
        ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_UNDER)
        ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
            lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_CHA) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_CHA) = lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag
        End If
        '---------------------------------------------------------------------------------------------------------------------------------
        'check if acuity cap is applied to int
        If (tToon.pStat = SM_INT Or tToon.sStat = SM_INT Or tToon.tStat = SM_INT) Then
        
            ColumnSum = Val(lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag) + SumColumn(SM_ACU_CAP, BO_SCBONUS)
            If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = Int((tToon.LEVEL / 2) + 1)
                Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_OVER)
            ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_UNDER)
            ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_INT, VALUE_EQUAL)
            End If
                        
            If .BONUS_OPTION = BO_TOCAP Then
                lbl_Attribute_Cap_Value(WS_ATTR_INT) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag))
            Else
                lbl_Attribute_Cap_Value(WS_ATTR_INT) = lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag
            End If
        End If
        '----------------------------------------------------------------------------------------------------------------------------------
        'check if acuity cap is applied to emp
        If (tToon.pStat = SM_EMP Or tToon.sStat = SM_EMP Or tToon.tStat = SM_EMP) And (tToon.pStat <> SM_CHA) Then
        
            ColumnSum = Val(lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag) + SumColumn(SM_ACU_CAP, BO_SCBONUS)
            If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = Int((tToon.LEVEL / 2) + 1)
                Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_OVER)
            ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_UNDER)
            ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_EMP, VALUE_EQUAL)
            End If
            
            If .BONUS_OPTION = BO_TOCAP Then
                lbl_Attribute_Cap_Value(WS_ATTR_EMP) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag))
            Else
                lbl_Attribute_Cap_Value(WS_ATTR_EMP) = lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag
            End If
        End If
        '----------------------------------------------------------------------------------------------------------------------------------
        'check if acuity cap is applied to pie
        If (tToon.pStat = SM_PIE Or tToon.sStat = SM_PIE Or tToon.tStat = SM_PIE) Then
        
            ColumnSum = Val(lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag) + SumColumn(SM_ACU_CAP, BO_SCBONUS)
            If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = Int((tToon.LEVEL / 2) + 1)
                Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_OVER)
            ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_UNDER)
            ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_PIE, VALUE_EQUAL)
            End If
            
            If .BONUS_OPTION = BO_TOCAP Then
                lbl_Attribute_Cap_Value(WS_ATTR_PIE) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag))
            Else
                lbl_Attribute_Cap_Value(WS_ATTR_PIE) = lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag
            End If
        End If
        '----------------------------------------------------------------------------------------------------------------------------------
        'check if acuity cap is applied to cha
        If (tToon.pStat = SM_CHA Or tToon.sStat = SM_CHA Or tToon.tStat = SM_CHA) Then
        
            ColumnSum = Val(lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag) + SumColumn(SM_ACU_CAP, BO_SCBONUS)
            If ColumnSum > Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = Int((tToon.LEVEL / 2) + 1)
                Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_OVER)
            ElseIf ColumnSum < Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_UNDER)
            ElseIf ColumnSum = Int((tToon.LEVEL / 2) + 1) Then
                lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag = ColumnSum
                Call UpdateStatCapDisplay(WS_ATTR_CHA, VALUE_EQUAL)
            End If
            
            If .BONUS_OPTION = BO_TOCAP Then
                lbl_Attribute_Cap_Value(WS_ATTR_CHA) = Int(((tToon.LEVEL / 2) + 1) - Val(lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag))
            Else
                lbl_Attribute_Cap_Value(WS_ATTR_CHA) = lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag
            End If
        End If
        '----------------------------------------------------------------------------------------------------------------------------------
        'hits cap
        ColumnSum = SumColumn(SM_HIT_CAP, BO_SCBONUS)
        If ColumnSum > Int(tToon.LEVEL * 4) Then
            lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag = Int(tToon.LEVEL * 4)
            Call UpdateStatCapDisplay(WS_ATTR_HIT, VALUE_OVER)
        ElseIf ColumnSum < Int(tToon.LEVEL * 4) Then
            lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_HIT, VALUE_UNDER)
        ElseIf ColumnSum = Int(tToon.LEVEL * 4) Then
            lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_HIT, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_HIT) = Int((tToon.LEVEL * 4) - Val(lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_HIT) = lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag
        End If
        '----------------------------------------------------------------------------------------------------------------------------------
        'power cap
        ColumnSum = SumColumn(SM_POW_CAP, BO_SCBONUS)
        If ColumnSum > Int(tToon.LEVEL) Then
            lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag = Int(tToon.LEVEL)
            Call UpdateStatCapDisplay(WS_ATTR_POW, VALUE_OVER)
        ElseIf ColumnSum < Int(tToon.LEVEL) Then
            lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_POW, VALUE_UNDER)
        ElseIf ColumnSum = Int(tToon.LEVEL) Then
            lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag = ColumnSum
            Call UpdateStatCapDisplay(WS_ATTR_POW, VALUE_EQUAL)
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_POW) = Int((tToon.LEVEL) - Val(lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag))
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_POW) = lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag
        End If
        '------------------------end of cap bonus calculations--------------------
        'CALCULATE GENERIC ATTRIBUTES - STATS
        '------------------------------------------------------------------------------------------------------------------
        
        'strength
        ColumnSum = SumColumn(SM_STR, BO_SCBONUS) + SumColumn(SM_LOTM_STR_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_STR).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_STR).Tag)
        lbl_Attribute_Usable(WS_ATTR_STR).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_STR).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_STR, VALUE_OVER)
            tToon.STR = lUsable
            lbl_Attribute_Value(WS_ATTR_STR).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_STR, VALUE_UNDER)
            tToon.STR = ColumnSum
            lbl_Attribute_Value(WS_ATTR_STR).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_STR, VALUE_EQUAL)
            tToon.STR = ColumnSum
            lbl_Attribute_Value(WS_ATTR_STR).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_STR) = lUsable - tToon.STR
        Else
            lbl_Attribute_Value(WS_ATTR_STR) = tToon.STR
        End If
        '------------------------------------------------------------------------------------------------------------------
        'constitution
        ColumnSum = SumColumn(SM_CON, BO_SCBONUS) + SumColumn(SM_LOTM_CON_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_CON).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_CON).Tag)
        lbl_Attribute_Usable(WS_ATTR_CON).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_CON).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CON, VALUE_OVER)
            tToon.CON = lUsable
            lbl_Attribute_Value(WS_ATTR_CON).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CON, VALUE_UNDER)
            tToon.CON = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CON).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CON, VALUE_EQUAL)
            tToon.CON = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CON).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_CON) = lUsable - tToon.CON
        Else
            lbl_Attribute_Value(WS_ATTR_CON) = tToon.CON
        End If
        '------------------------------------------------------------------------------------------------------------------
        'dexterity
        ColumnSum = SumColumn(SM_DEX, BO_SCBONUS) + SumColumn(SM_LOTM_DEX_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_DEX).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_DEX).Tag)
        lbl_Attribute_Usable(WS_ATTR_DEX).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_DEX).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_DEX, VALUE_OVER)
            tToon.DEX = lUsable
            lbl_Attribute_Value(WS_ATTR_DEX).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_DEX, VALUE_UNDER)
            tToon.DEX = ColumnSum
            lbl_Attribute_Value(WS_ATTR_DEX).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_DEX, VALUE_EQUAL)
            tToon.DEX = ColumnSum
            lbl_Attribute_Value(WS_ATTR_DEX).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_DEX) = lUsable - tToon.DEX
        Else
            lbl_Attribute_Value(WS_ATTR_DEX) = tToon.DEX
        End If
        '------------------------------------------------------------------------------------------------------------------
        'quickness
        ColumnSum = SumColumn(SM_QUI, BO_SCBONUS) + SumColumn(SM_LOTM_QUI_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_QUI).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_QUI).Tag)
        lbl_Attribute_Usable(WS_ATTR_QUI).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_QUI).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_QUI, VALUE_OVER)
            tToon.QUI = lUsable
            lbl_Attribute_Value(WS_ATTR_QUI).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_QUI, VALUE_UNDER)
            tToon.QUI = ColumnSum
            lbl_Attribute_Value(WS_ATTR_QUI).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_QUI, VALUE_EQUAL)
            tToon.QUI = ColumnSum
            lbl_Attribute_Value(WS_ATTR_QUI).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_QUI) = lUsable - tToon.QUI
        Else
            lbl_Attribute_Value(WS_ATTR_QUI) = tToon.QUI
        End If
        '------------------------------------------------------------------------------------------------------------------
        'intelligence
        If (tToon.pStat = SM_INT Or tToon.sStat = SM_INT Or tToon.tStat = SM_INT) Then
            ColumnSum = SumColumn(SM_INT, BO_SCBONUS) + SumColumn(SM_ACU, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        Else
            ColumnSum = SumColumn(SM_INT, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        End If
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_INT).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_INT).Tag)
        lbl_Attribute_Usable(WS_ATTR_INT).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_INT).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_INT, VALUE_OVER)
            tToon.INT = lUsable
            lbl_Attribute_Value(WS_ATTR_INT).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_INT, VALUE_UNDER)
            tToon.INT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_INT).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_INT, VALUE_EQUAL)
            tToon.INT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_INT).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_INT) = lUsable - tToon.INT
        Else
            lbl_Attribute_Value(WS_ATTR_INT) = tToon.INT
        End If
        '------------------------------------------------------------------------------------------------------------------
        'empathy
        If (tToon.pStat = SM_EMP Or tToon.sStat = SM_EMP Or tToon.tStat = SM_EMP) And (tToon.pStat <> SM_CHA) Then
            ColumnSum = SumColumn(SM_EMP, BO_SCBONUS) + SumColumn(SM_ACU, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        Else
            ColumnSum = SumColumn(SM_EMP, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        End If
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_EMP).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_EMP).Tag)
        lbl_Attribute_Usable(WS_ATTR_EMP).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_EMP).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_EMP, VALUE_OVER)
            tToon.EMP = lUsable
            lbl_Attribute_Value(WS_ATTR_EMP).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_EMP, VALUE_UNDER)
            tToon.EMP = ColumnSum
            lbl_Attribute_Value(WS_ATTR_EMP).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_EMP, VALUE_EQUAL)
            tToon.EMP = ColumnSum
            lbl_Attribute_Value(WS_ATTR_EMP).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_EMP) = lUsable - tToon.EMP
        Else
            lbl_Attribute_Value(WS_ATTR_EMP) = tToon.EMP
        End If
        '------------------------------------------------------------------------------------------------------------------
        'piety
        If (tToon.pStat = SM_PIE Or tToon.sStat = SM_PIE Or tToon.tStat = SM_PIE) Then
            ColumnSum = SumColumn(SM_PIE, BO_SCBONUS) + SumColumn(SM_ACU, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        Else
            ColumnSum = SumColumn(SM_PIE, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        End If
        
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_PIE).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_PIE).Tag)
        lbl_Attribute_Usable(WS_ATTR_PIE).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_PIE).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_PIE, VALUE_OVER)
            tToon.PIE = lUsable
            lbl_Attribute_Value(WS_ATTR_PIE).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_PIE, VALUE_UNDER)
            tToon.PIE = ColumnSum
            lbl_Attribute_Value(WS_ATTR_PIE).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_PIE, VALUE_EQUAL)
            tToon.PIE = ColumnSum
            lbl_Attribute_Value(WS_ATTR_PIE).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_PIE) = lUsable - tToon.PIE
        Else
            lbl_Attribute_Value(WS_ATTR_PIE) = tToon.PIE
        End If
        '------------------------------------------------------------------------------------------------------------------
        'charisma
        If (tToon.pStat = SM_CHA Or tToon.sStat = SM_CHA Or tToon.tStat = SM_CHA) Then
            ColumnSum = SumColumn(SM_CHA, BO_SCBONUS) + SumColumn(SM_ACU, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        Else
            ColumnSum = SumColumn(SM_CHA, BO_SCBONUS) + SumColumn(SM_LOTM_ACU_CAP_PLUS, BO_SCBONUS)
        End If
                
        lUsable = Int(tToon.LEVEL * 1.5) + Val(lbl_Attribute_Cap_Value(WS_ATTR_CHA).Tag) + Val(lbl_Attribute_OverCap_Value(WS_ATTR_CHA).Tag)
        lbl_Attribute_Usable(WS_ATTR_CHA).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_CHA).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CHA, VALUE_OVER)
            tToon.CHA = lUsable
            lbl_Attribute_Value(WS_ATTR_CHA).Tag = ColumnSum
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CHA, VALUE_UNDER)
            tToon.CHA = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CHA).Tag = ColumnSum
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CHA, VALUE_EQUAL)
            tToon.CHA = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CHA).Tag = ColumnSum
        End If
                
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_CHA) = lUsable - tToon.CHA
        Else
            lbl_Attribute_Value(WS_ATTR_CHA) = tToon.CHA
        End If
        '-----------------------------end of generic attribute value calculations
        'calculate generic attributes - resists cap
                
        'crush cap
        lbl_Attribute_Cap_Value(WS_ATTR_CRUSH).Tag = SumColumn(SM_LOTM_CRUSH_RESIST_CAP, BO_SCBONUS) _
                                                   + SumColumn(SM_LOTM_CRUSH_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_CRUSH) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_CRUSH).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_CRUSH) = lbl_Attribute_Cap_Value(WS_ATTR_CRUSH).Tag
        End If
        
        'slash cap
        lbl_Attribute_Cap_Value(WS_ATTR_SLASH).Tag = SumColumn(SM_LOTM_SLASH_RESIST_CAP, BO_SCBONUS) _
                                                   + SumColumn(SM_LOTM_SLASH_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_SLASH) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_SLASH).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_SLASH) = lbl_Attribute_Cap_Value(WS_ATTR_SLASH).Tag
        End If
        
        'thrust cap
        lbl_Attribute_Cap_Value(WS_ATTR_THRUST).Tag = SumColumn(SM_LOTM_THRUST_RESIST_CAP, BO_SCBONUS) _
                                                    + SumColumn(SM_LOTM_THRUST_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_THRUST) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_THRUST).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_THRUST) = lbl_Attribute_Cap_Value(WS_ATTR_THRUST).Tag
        End If
        
        'heat cap
        lbl_Attribute_Cap_Value(WS_ATTR_HEAT).Tag = SumColumn(SM_LOTM_HEAT_RESIST_CAP, BO_SCBONUS) _
                                                  + SumColumn(SM_LOTM_HEAT_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_HEAT) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_HEAT).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_HEAT) = lbl_Attribute_Cap_Value(WS_ATTR_HEAT).Tag
        End If
        
        'cold cap
        lbl_Attribute_Cap_Value(WS_ATTR_COLD).Tag = SumColumn(SM_LOTM_COLD_RESIST_CAP, BO_SCBONUS) _
                                                  + SumColumn(SM_LOTM_COLD_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_COLD) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_COLD).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_COLD) = lbl_Attribute_Cap_Value(WS_ATTR_COLD).Tag
        End If
        
        'matter cap
        lbl_Attribute_Cap_Value(WS_ATTR_MATTER).Tag = SumColumn(SM_LOTM_MATTER_RESIST_CAP, BO_SCBONUS) _
                                                    + SumColumn(SM_LOTM_MATTER_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_MATTER) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_MATTER).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_MATTER) = lbl_Attribute_Cap_Value(WS_ATTR_MATTER).Tag
        End If
        
        'body cap
        lbl_Attribute_Cap_Value(WS_ATTR_BODY).Tag = SumColumn(SM_LOTM_BODY_RESIST_CAP, BO_SCBONUS) _
                                                  + SumColumn(SM_LOTM_BODY_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_BODY) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_BODY).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_BODY) = lbl_Attribute_Cap_Value(WS_ATTR_BODY).Tag
        End If
        
        'spirit cap
        lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT).Tag = SumColumn(SM_LOTM_SPIRIT_RESIST_CAP, BO_SCBONUS) _
                                                    + SumColumn(SM_LOTM_SPIRIT_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT) = lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT).Tag
        End If
        
        'energy cap
        lbl_Attribute_Cap_Value(WS_ATTR_ENERGY).Tag = SumColumn(SM_LOTM_ENERGY_RESIST_CAP, BO_SCBONUS) _
                                                    + SumColumn(SM_LOTM_ENERGY_RESIST_CAP_PLUS, BO_SCBONUS)
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_ENERGY) = (LOTM_MAX_RESIST_CAP_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_ENERGY).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_ENERGY) = lbl_Attribute_Cap_Value(WS_ATTR_ENERGY).Tag
        End If
        
        'essence cap
        lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE).Tag = LOTM_MAX_ESSENCE_RESIST_BONUS
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE) = (LOTM_MAX_ESSENCE_RESIST_BONUS) - Val(lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE).Tag)
        Else
            lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE) = lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE).Tag
        End If
    
        'calculate total resists here now that the caps have been applied
        
        'crush resist
        ColumnSum = SumColumn(SM_CRUSH_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_CRUSH_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_CRUSH).Tag)
        lbl_Attribute_Usable(WS_ATTR_CRUSH).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_CRUSH).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CRUSH, VALUE_OVER)
            tToon.CRUSH = lUsable
            lbl_Attribute_Value(WS_ATTR_CRUSH).Tag = tToon.CRUSH
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CRUSH, VALUE_UNDER)
            tToon.CRUSH = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CRUSH).Tag = tToon.CRUSH
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_CRUSH, VALUE_EQUAL)
            tToon.CRUSH = ColumnSum
            lbl_Attribute_Value(WS_ATTR_CRUSH).Tag = tToon.CRUSH
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_CRUSH) = lUsable - tToon.CRUSH
        Else
            lbl_Attribute_Value(WS_ATTR_CRUSH) = tToon.CRUSH
        End If
            
        'slash resist
        ColumnSum = SumColumn(SM_SLASH_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_SLASH_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_SLASH).Tag)
        lbl_Attribute_Usable(WS_ATTR_SLASH).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_SLASH).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SLASH, VALUE_OVER)
            tToon.SLASH = lUsable
            lbl_Attribute_Value(WS_ATTR_SLASH).Tag = tToon.SLASH
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SLASH, VALUE_UNDER)
            tToon.SLASH = ColumnSum
            lbl_Attribute_Value(WS_ATTR_SLASH).Tag = tToon.SLASH
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SLASH, VALUE_EQUAL)
            tToon.SLASH = ColumnSum
            lbl_Attribute_Value(WS_ATTR_SLASH).Tag = tToon.SLASH
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_SLASH) = lUsable - tToon.SLASH
        Else
            lbl_Attribute_Value(WS_ATTR_SLASH) = tToon.SLASH
        End If
        
        'thrust resist
        ColumnSum = SumColumn(SM_THRUST_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_THRUST_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_THRUST).Tag)
        lbl_Attribute_Usable(WS_ATTR_THRUST).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_THRUST).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_THRUST, VALUE_OVER)
            tToon.THRUST = lUsable
            lbl_Attribute_Value(WS_ATTR_THRUST).Tag = tToon.THRUST
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_THRUST, VALUE_UNDER)
            tToon.THRUST = ColumnSum
            lbl_Attribute_Value(WS_ATTR_THRUST).Tag = tToon.THRUST
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_THRUST, VALUE_EQUAL)
            tToon.THRUST = ColumnSum
            lbl_Attribute_Value(WS_ATTR_THRUST).Tag = tToon.THRUST
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_THRUST) = lUsable - tToon.THRUST
        Else
            lbl_Attribute_Value(WS_ATTR_THRUST) = tToon.THRUST
        End If
    
        'heat resist
        ColumnSum = SumColumn(SM_HEAT_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_HEAT_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_HEAT).Tag)
        lbl_Attribute_Usable(WS_ATTR_HEAT).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_HEAT).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HEAT, VALUE_OVER)
            tToon.HEAT = lUsable
            lbl_Attribute_Value(WS_ATTR_HEAT).Tag = tToon.HEAT
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HEAT, VALUE_UNDER)
            tToon.HEAT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_HEAT).Tag = tToon.HEAT
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HEAT, VALUE_EQUAL)
            tToon.HEAT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_HEAT).Tag = tToon.HEAT
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_HEAT) = lUsable - tToon.HEAT
        Else
            lbl_Attribute_Value(WS_ATTR_HEAT) = tToon.HEAT
        End If
        
        'cold resist
        ColumnSum = SumColumn(SM_COLD_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_COLD_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_COLD).Tag)
        lbl_Attribute_Usable(WS_ATTR_COLD).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_COLD).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_COLD, VALUE_OVER)
            tToon.COLD = lUsable
            lbl_Attribute_Value(WS_ATTR_COLD).Tag = tToon.COLD
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_COLD, VALUE_UNDER)
            tToon.COLD = ColumnSum
            lbl_Attribute_Value(WS_ATTR_COLD).Tag = tToon.COLD
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_COLD, VALUE_EQUAL)
            tToon.COLD = ColumnSum
            lbl_Attribute_Value(WS_ATTR_COLD).Tag = tToon.COLD
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_COLD) = lUsable - tToon.COLD
        Else
            lbl_Attribute_Value(WS_ATTR_COLD) = tToon.COLD
        End If
        
        'matter resist
        ColumnSum = SumColumn(SM_MATTER_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_MATTER_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_MATTER).Tag)
        lbl_Attribute_Usable(WS_ATTR_MATTER).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_MATTER).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_MATTER, VALUE_OVER)
            tToon.MATTER = lUsable
            lbl_Attribute_Value(WS_ATTR_MATTER).Tag = tToon.MATTER
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_MATTER, VALUE_UNDER)
            tToon.MATTER = ColumnSum
            lbl_Attribute_Value(WS_ATTR_MATTER).Tag = tToon.MATTER
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_MATTER, VALUE_EQUAL)
            tToon.MATTER = ColumnSum
            lbl_Attribute_Value(WS_ATTR_MATTER).Tag = tToon.MATTER
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_MATTER) = lUsable - tToon.MATTER
        Else
            lbl_Attribute_Value(WS_ATTR_MATTER) = tToon.MATTER
        End If
        
        'body resist
        ColumnSum = SumColumn(SM_BODY_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_BODY_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_BODY).Tag)
        lbl_Attribute_Usable(WS_ATTR_BODY).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_BODY).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_BODY, VALUE_OVER)
            tToon.BODY = lUsable
            lbl_Attribute_Value(WS_ATTR_BODY).Tag = tToon.BODY
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_BODY, VALUE_UNDER)
            tToon.BODY = ColumnSum
            lbl_Attribute_Value(WS_ATTR_BODY).Tag = tToon.BODY
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_BODY, VALUE_EQUAL)
            tToon.BODY = ColumnSum
            lbl_Attribute_Value(WS_ATTR_BODY).Tag = tToon.BODY
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_BODY) = lUsable - tToon.BODY
        Else
            lbl_Attribute_Value(WS_ATTR_BODY) = tToon.BODY
        End If
        
        'spirit resist
        ColumnSum = SumColumn(SM_SPIRIT_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_SPIRIT_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_SPIRIT).Tag)
        lbl_Attribute_Usable(WS_ATTR_SPIRIT).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_SPIRIT).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SPIRIT, VALUE_OVER)
            tToon.SPIRIT = lUsable
            lbl_Attribute_Value(WS_ATTR_SPIRIT).Tag = tToon.SPIRIT
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SPIRIT, VALUE_UNDER)
            tToon.SPIRIT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_SPIRIT).Tag = tToon.SPIRIT
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_SPIRIT, VALUE_EQUAL)
            tToon.SPIRIT = ColumnSum
            lbl_Attribute_Value(WS_ATTR_SPIRIT).Tag = tToon.SPIRIT
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_SPIRIT) = lUsable - tToon.SPIRIT
        Else
            lbl_Attribute_Value(WS_ATTR_SPIRIT) = tToon.SPIRIT
        End If
        
        'energy resist
        ColumnSum = SumColumn(SM_ENERGY_RESIST, BO_SCBONUS) + SumColumn(SM_LOTM_ENERGY_RESIST_CAP_PLUS, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_ENERGY).Tag)
        lbl_Attribute_Usable(WS_ATTR_ENERGY).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_ENERGY).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ENERGY, VALUE_OVER)
            tToon.ENERGY = lUsable
            lbl_Attribute_Value(WS_ATTR_ENERGY).Tag = tToon.ENERGY
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ENERGY, VALUE_UNDER)
            tToon.ENERGY = ColumnSum
            lbl_Attribute_Value(WS_ATTR_ENERGY).Tag = tToon.ENERGY
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ENERGY, VALUE_EQUAL)
            tToon.ENERGY = ColumnSum
            lbl_Attribute_Value(WS_ATTR_ENERGY).Tag = tToon.ENERGY
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_ENERGY) = lUsable - tToon.ENERGY
        Else
            lbl_Attribute_Value(WS_ATTR_ENERGY) = tToon.ENERGY
        End If
        
        'essence resist
        ColumnSum = SumColumn(SM_LOTM_ESSENCE_RESIST, BO_SCBONUS)
        
        lUsable = Val(lbl_Attribute_Cap_Value(WS_ATTR_ESSENCE).Tag)
        lbl_Attribute_Usable(WS_ATTR_ESSENCE).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_ESSENCE).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ESSENCE, VALUE_OVER)
            tToon.ESSENCE = lUsable
            lbl_Attribute_Value(WS_ATTR_ESSENCE).Tag = tToon.ESSENCE
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ESSENCE, VALUE_UNDER)
            tToon.ESSENCE = ColumnSum
            lbl_Attribute_Value(WS_ATTR_ESSENCE).Tag = tToon.ESSENCE
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_ESSENCE, VALUE_EQUAL)
            tToon.ESSENCE = ColumnSum
            lbl_Attribute_Value(WS_ATTR_ESSENCE).Tag = tToon.ESSENCE
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_ESSENCE) = lUsable - tToon.ESSENCE
        Else
            lbl_Attribute_Value(WS_ATTR_ESSENCE) = tToon.ESSENCE
        End If
        '--------------------end of resist calculations
        
        'generic attributes - power
        ColumnSum = SumColumn(SM_POW, BO_SCBONUS)
        
        lUsable = Int((tToon.LEVEL * 0.5) + 1) + Val(lbl_Attribute_Cap_Value(WS_ATTR_POW).Tag)
        lbl_Attribute_Usable(WS_ATTR_POW).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_POW).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_POW, VALUE_OVER)
            tToon.POWER = lUsable
            lbl_Attribute_Value(WS_ATTR_POW).Tag = tToon.POWER
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_POW, VALUE_UNDER)
            tToon.POWER = ColumnSum
            lbl_Attribute_Value(WS_ATTR_POW).Tag = tToon.POWER
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_POW, VALUE_EQUAL)
            tToon.POWER = ColumnSum
            lbl_Attribute_Value(WS_ATTR_POW).Tag = tToon.POWER
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_POW) = lUsable - tToon.POWER
        Else
            lbl_Attribute_Value(WS_ATTR_POW) = tToon.POWER
        End If
        
        'generic attributes - hits
        ColumnSum = SumColumn(SM_HIT, BO_SCBONUS)
        
        lUsable = Int(tToon.LEVEL * 4) + Val(lbl_Attribute_Cap_Value(WS_ATTR_HIT).Tag)
        lbl_Attribute_Usable(WS_ATTR_HIT).Caption = lUsable
        lbl_Attribute_Usable(WS_ATTR_HIT).Tag = lUsable
        
        If ColumnSum > lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HIT, VALUE_OVER)
            tToon.HITS = lUsable
            lbl_Attribute_Value(WS_ATTR_HIT).Tag = tToon.HITS
        ElseIf ColumnSum < lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HIT, VALUE_UNDER)
            tToon.HITS = ColumnSum
            lbl_Attribute_Value(WS_ATTR_HIT).Tag = tToon.HITS
        ElseIf ColumnSum = lUsable Then
            Call UpdateStatDisplay(WS_ATTR_HIT, VALUE_EQUAL)
            tToon.HITS = ColumnSum
            lbl_Attribute_Value(WS_ATTR_HIT).Tag = tToon.HITS
        End If
        
        If .BONUS_OPTION = BO_TOCAP Then
            lbl_Attribute_Value(WS_ATTR_HIT) = lUsable - tToon.HITS
        Else
            lbl_Attribute_Value(WS_ATTR_HIT) = tToon.HITS
        End If
    End With
    
    Call RefreshAttributeLabels

End Sub

Private Sub CalculateSkillsAlb(tToon As TOON_TYPE)

    Dim Ctr As Long
    Dim SkillTotal As Long
    Dim All_Melee As Long
    Dim All_Magic As Long
    Dim All_Dual As Long
    Dim All_Archery As Long
    Dim All_Focus As Long
    
    Dim ColumnSum As Long
        
    'clear the skill list and start over each time
    list_Skills.Clear
    list_OtherBonus.Clear
    
    With SC_SETTINGS

        All_Melee = SumColumn(SM_ALLMELEE, .BONUS_OPTION)
        All_Magic = SumColumn(SM_ALLMAGIC, .BONUS_OPTION)
        All_Dual = SumColumn(SM_ALLDUALWIELD, .BONUS_OPTION)
        All_Archery = SumColumn(SM_ALLARCHERY, .BONUS_OPTION)
        All_Focus = SumColumn(SM_ALLFOCUS, .BONUS_OPTION)
        Select Case tToon.CLASS
            Case TCA_ARMSMAN  'Armsman    'crush, slash, thrust, polearm, two-handed, crossbow, shields, parry
                tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL) = SumColumn(SM_CRUSH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_POLEARM, SM_LOC_TOTAL) = SumColumn(SM_POLEARM, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL) = SumColumn(SM_TWOHANDED, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CROSSBOW, SM_LOC_TOTAL) = SumColumn(SM_CROSSBOW, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then   'distance to cap activated
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                                        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_POLEARM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_POLEARM)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_TWOHANDED)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CROSSBOW, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CROSSBOW)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_POLEARM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_POLEARM)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_TWOHANDED)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CROSSBOW, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CROSSBOW)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCA_CABALIST  'Cabalist   'body, matter, spirit
                tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL) = SumColumn(SM_BODY, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL) = SumColumn(SM_MATTER, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SPIRIT, SM_LOC_TOTAL) = SumColumn(SM_SPIRIT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_BODY_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MATTER_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SPIRIT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SPIRIT_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then   'distance to cap
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SPIRIT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPIRIT)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SPIRIT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPIRIT_FOCUS)
                    
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SPIRIT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPIRIT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SPIRIT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPIRIT_FOCUS)
                End If
                
            Case TCA_CLERIC  'Cleric     'enhancement, rejuvenation, smite
                tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL) = SumColumn(SM_ENHANCEMENT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL) = SumColumn(SM_REJUVENATION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SMITE, SM_LOC_TOTAL) = SumColumn(SM_SMITE, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SMITE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SMITE)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SMITE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SMITE)
                End If
                
            Case TCA_FRIAR  'Friar  'staff, enhancement, rejuvenation, parry
                tToon.STAT_MATRIX(SM_STAFF, SM_LOC_TOTAL) = SumColumn(SM_STAFF, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL) = SumColumn(SM_ENHANCEMENT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL) = SumColumn(SM_REJUVENATION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STAFF, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STAFF)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_STAFF, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STAFF)
    
                    SkillTotal = tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCA_HERETIC  'Heretic    'crush, flexible, shield, enhancement, rejuvenation
                tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL) = SumColumn(SM_CRUSH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL) = SumColumn(SM_FLEXIBLE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL) = SumColumn(SM_ENHANCEMENT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL) = SumColumn(SM_REJUVENATION, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FLEXIBLE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FLEXIBLE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    'Heretic    'enhancement, rejuvenation
                    SkillTotal = tToon.STAT_MATRIX(SM_ENHANCEMENT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENHANCEMENT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REJUVENATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REJUVENATION)
                End If
                
            Case TCA_INFILTRATOR  'Infiltrator    'slash, thrust, dual wield, stealth, crit, envenom
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL) = SumColumn(SM_DUALWIELD, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL) = SumColumn(SM_CRITICALSTRIKE, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL) = SumColumn(SM_ENVENOM, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DUALWIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DUALWIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                End If
                        
            Case TCA_MAULER
                tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_AURAMANIP, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAGNETISM, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL) = SumColumn(SM_LOTM_POWERSTRIKES, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_FISTWRAP, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAULERSTAFF, .BONUS_OPTION) + All_Melee
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                End If
                
            Case TCA_MERCENARY  'Mercenary  'crush, slash, thrust, dual wield
                tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL) = SumColumn(SM_CRUSH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL) = SumColumn(SM_DUALWIELD, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DUALWIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DUALWIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DUALWIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCA_MINSTREL  'Minstrel   'slash, thrust, instruments, stealth
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_INSTRUMENTS, SM_LOC_TOTAL) = SumColumn(SM_INSTRUMENTS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_INSTRUMENTS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_INSTRUMENTS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
    
                    SkillTotal = tToon.STAT_MATRIX(SM_INSTRUMENTS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_INSTRUMENTS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                End If
                
            Case TCA_NECROMANCER  'Necromancer 'painworking, death servant, deathsight
                tToon.STAT_MATRIX(SM_PAINWORKING, SM_LOC_TOTAL) = SumColumn(SM_PAINWORKING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_DEATHSERVANT, SM_LOC_TOTAL) = SumColumn(SM_DEATHSERVANT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_DEATHSIGHT, SM_LOC_TOTAL) = SumColumn(SM_DEATHSIGHT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PAINWORKING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_PAINWORKING_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_DEATHSERVANT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_DEATHSERVANT_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_DEATHSIGHT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_DEATHSIGHT_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PAINWORKING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PAINWORKING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DEATHSERVANT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSERVANT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DEATHSIGHT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSIGHT)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_PAINWORKING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PAINWORKING_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_DEATHSERVANT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSERVANT_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_DEATHSIGHT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSIGHT_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_PAINWORKING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PAINWORKING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DEATHSERVANT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSERVANT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DEATHSIGHT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSIGHT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PAINWORKING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PAINWORKING_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DEATHSERVANT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSERVANT_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DEATHSIGHT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEATHSIGHT_FOCUS)
                End If
    
            Case TCA_PALADIN  'Paladin    'crush, slash, thrust, two-handed, chants, shield, parry
                tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL) = SumColumn(SM_CRUSH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL) = SumColumn(SM_TWOHANDED, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CHANTS, SM_LOC_TOTAL) = SumColumn(SM_CHANTS, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_TWOHANDED)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CHANTS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CHANTS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_TWOHANDED, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_TWOHANDED)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CHANTS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CHANTS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCA_REAVER 'Reaver 'crush, slash, thrust, flexible, soulrending, shields, parry
                tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL) = SumColumn(SM_CRUSH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL) = SumColumn(SM_FLEXIBLE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SOULRENDING, SM_LOC_TOTAL) = SumColumn(SM_SOULRENDING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FLEXIBLE)
    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SOULRENDING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SOULRENDING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CRUSH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRUSH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_FLEXIBLE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FLEXIBLE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SOULRENDING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SOULRENDING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCA_SCOUT 'Scout  'slash, thrust, longbow, stealth, shields
                tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL) = SumColumn(SM_SLASH, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL) = SumColumn(SM_THRUST, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LONGBOW, SM_LOC_TOTAL) = SumColumn(SM_LONGBOW, .BONUS_OPTION) + All_Archery
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LONGBOW, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LONGBOW)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_SLASH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SLASH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_THRUST, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THRUST)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LONGBOW, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LONGBOW)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                End If
                
            Case TCA_SORCERER 'Sorcerer   'body, matter, mind
                tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL) = SumColumn(SM_BODY, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL) = SumColumn(SM_MATTER, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MIND, SM_LOC_TOTAL) = SumColumn(SM_MIND, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_BODY_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MATTER_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MIND_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MIND_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MIND, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MIND)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MIND_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MIND_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BODY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MATTER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MIND, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MIND)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BODY_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BODY_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MATTER_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MATTER_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MIND_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MIND_FOCUS)
                End If
                    
            Case TCA_THEURGIST 'Theurgist  'cold, earth, wind
                tToon.STAT_MATRIX(SM_COLD, SM_LOC_TOTAL) = SumColumn(SM_COLD, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_EARTH, SM_LOC_TOTAL) = SumColumn(SM_EARTH, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_WIND, SM_LOC_TOTAL) = SumColumn(SM_WIND, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_COLD_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_EARTH_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_WIND_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_WIND_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_COLD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_EARTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_WIND, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WIND)
                
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_WIND_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WIND_FOCUS)
                Else
                    SkillTotal = SumColumn(SM_COLD, .BONUS_OPTION) + All_Magic
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD)
                    
                    SkillTotal = SumColumn(SM_EARTH, .BONUS_OPTION) + All_Magic
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH)
                    
                    SkillTotal = SumColumn(SM_WIND, .BONUS_OPTION) + All_Magic
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WIND)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_WIND_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WIND_FOCUS)
                End If
                
            Case TCA_WIZARD 'Wizard     'cold, earth, fire
                tToon.STAT_MATRIX(SM_COLD, SM_LOC_TOTAL) = SumColumn(SM_COLD, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_EARTH, SM_LOC_TOTAL) = SumColumn(SM_EARTH, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_FIRE, SM_LOC_TOTAL) = SumColumn(SM_FIRE, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_COLD_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_EARTH_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_FIRE_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_FIRE_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_COLD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_EARTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_FIRE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FIRE)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_FIRE_FOCUS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FIRE_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_COLD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_EARTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_FIRE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FIRE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_COLD_FOCUS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COLD_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_EARTH_FOCUS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_EARTH_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_FIRE_FOCUS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_FIRE_FOCUS)
                End If
            
        End Select

        For Ctr = SM_AFBONUS To SM_PVEUNIQUE
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then
                    If (Ctr >= SM_ARCHERYDAMAGE And Ctr <= SM_ARCHERYSPEED) Or _
                       (Ctr >= SM_MELEESPEED And Ctr <= SM_SPELLDAMAGE) Or _
                       (Ctr >= SM_SPELLPIERCE And Ctr <= SM_SPELLRANGE) Or _
                       (Ctr >= SM_BLADETURN And Ctr <= SM_DAMAGEREDUCTION) Or _
                       (Ctr >= SM_DEFENSIVEBONUS) Then
                       
                        SkillTotal = Int((tToon.LEVEL * 0.2) - SkillTotal)
                        
                    ElseIf Ctr = SM_PERCPOWER Or _
                           Ctr = SM_FATIGUE Or _
                           Ctr = SM_HEALINGBONUS Or _
                           Ctr = SM_SPELLDURATION Or _
                           Ctr = SM_BUFFBONUS Or _
                           Ctr = SM_DEBUFFBONUS Then
                           
                        SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
                        
                    ElseIf Ctr = SM_AFBONUS Or _
                           Ctr = SM_ARROWRECOVERY Or _
                           Ctr = SM_EXPLOSSREDUCTION Then
                           
                        SkillTotal = Int(tToon.LEVEL - SkillTotal)
                        
                    End If
                    
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                    
                End If
            Else
                If SkillTotal > 0 Then
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                End If
            End If
        Next Ctr
    
        For Ctr = SM_LOTM_ENC To SM_LOTM_WATERBREATHING
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
        
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
            End If
            
            If SkillTotal > 0 Then list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
        
        Next Ctr
    End With
    
End Sub

Private Sub CalculateSkillsHib(tToon As TOON_TYPE)

    Dim Ctr As Long
    Dim SkillTotal As Long
    Dim All_Melee As Long
    Dim All_Magic As Long
    Dim All_Dual As Long
    Dim All_Archery As Long
    Dim All_Focus As Long
    
    Dim ColumnSum As Long
        
    'clear the skill list and start over each time
    list_Skills.Clear
    list_OtherBonus.Clear

    With SC_SETTINGS
    
        All_Melee = SumColumn(SM_ALLMELEE, .BONUS_OPTION)
        All_Magic = SumColumn(SM_ALLMAGIC, .BONUS_OPTION)
        All_Dual = SumColumn(SM_ALLDUALWIELD, .BONUS_OPTION)
        All_Archery = SumColumn(SM_ALLARCHERY, .BONUS_OPTION)
        All_Focus = SumColumn(SM_ALLFOCUS, .BONUS_OPTION)
        
        
        Select Case tToon.CLASS
            Case TCH_ANIMIST  'Animist    arb, creep, verd
                tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL) = SumColumn(SM_ARBOREAL, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_CREEPING, SM_LOC_TOTAL) = SumColumn(SM_CREEPING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_VERDANT, SM_LOC_TOTAL) = SumColumn(SM_VERDANT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_ARBOREAL_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_ARBOREAL_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_CREEPING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_CREEPING_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_VERDANT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_VERDANT_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CREEPING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CREEPING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_VERDANT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VERDANT)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_ARBOREAL_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_CREEPING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CREEPING_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_VERDANT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VERDANT_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CREEPING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CREEPING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VERDANT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VERDANT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ARBOREAL_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CREEPING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CREEPING_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VERDANT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VERDANT_FOCUS)
                End If
            Case TCH_BAINSHEE  'Bainshee   eth, phan, spect
                tToon.STAT_MATRIX(SM_ETHEREALSHRIEK, SM_LOC_TOTAL) = SumColumn(SM_ETHEREALSHRIEK, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PHANTASMALWAIL, SM_LOC_TOTAL) = SumColumn(SM_PHANTASMALWAIL, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SPECTRALGUARD, SM_LOC_TOTAL) = SumColumn(SM_SPECTRALGUARD, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_ETHEREAL_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_ETHEREAL_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_PHANTASMAL_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_PHANTASMAL_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SPECTRAL_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SPECTRAL_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ETHEREALSHRIEK, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ETHEREALSHRIEK)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PHANTASMALWAIL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PHANTASMALWAIL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SPECTRALGUARD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPECTRALGUARD)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_ETHEREAL_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ETHEREAL_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_PHANTASMAL_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PHANTASMAL_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SPECTRAL_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPECTRAL_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_ETHEREALSHRIEK, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ETHEREALSHRIEK)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PHANTASMALWAIL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PHANTASMALWAIL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SPECTRALGUARD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPECTRALGUARD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ETHEREAL_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ETHEREAL_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PHANTASMAL_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PHANTASMAL_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SPECTRAL_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPECTRAL_FOCUS)
                End If
                
            Case TCH_BARD  'Bard   blades, blunt, music, nurture, regrowth
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL) = SumColumn(SM_BLUNT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_MUSIC, SM_LOC_TOTAL) = SumColumn(SM_MUSIC, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL) = SumColumn(SM_NURTURE, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL) = SumColumn(SM_REGROWTH, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MUSIC, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MUSIC)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MUSIC, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MUSIC)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                End If
                
            Case TCH_BLADEMASTER  'Blademaster    blades, blunt, piercing, cd, shield, parry
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL) = SumColumn(SM_BLUNT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL) = SumColumn(SM_CELTICDUAL, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCH_CHAMPION  'Champion   blades, blunt, piercing, large weaponry, valor, shield, parry
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL) = SumColumn(SM_BLUNT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL) = SumColumn(SM_LARGEWEAP, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_VALOR, SM_LOC_TOTAL) = SumColumn(SM_VALOR, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LARGEWEAP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_VALOR, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VALOR)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LARGEWEAP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VALOR, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VALOR)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCH_DRUID  'Druid  nature, nurture, regrowth
                tToon.STAT_MATRIX(SM_NATURE, SM_LOC_TOTAL) = SumColumn(SM_NATURE, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL) = SumColumn(SM_NURTURE, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL) = SumColumn(SM_REGROWTH, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_NATURE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NATURE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_NATURE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NATURE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                End If
                
            Case TCH_ELDRITCH  'Eldritch   light, mana, void
                tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL) = SumColumn(SM_LIGHT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL) = SumColumn(SM_MANA, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_VOID, SM_LOC_TOTAL) = SumColumn(SM_VOID, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_LIGHT_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MANA_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_VOID_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_VOID_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_VOID, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VOID)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_VOID_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VOID_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VOID, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VOID)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VOID_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VOID_FOCUS)
                End If
                
            Case TCH_ENCHANTER  'Enchanter  light, mana, enchantments
                tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL) = SumColumn(SM_LIGHT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL) = SumColumn(SM_MANA, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_ENCHANTMENTS, SM_LOC_TOTAL) = SumColumn(SM_ENCHANTMENTS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_LIGHT_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MANA_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_ENCHANTMENT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_ENCHANTMENT_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENCHANTMENTS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENCHANTMENTS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_ENCHANTMENT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENCHANTMENT_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ENCHANTMENTS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENCHANTMENTS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ENCHANTMENT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENCHANTMENT_FOCUS)
                End If
                
            Case TCH_HERO  'Hero - celtic spear, large weaponry, blades, blunt, piercing, shield, parry
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL) = SumColumn(SM_BLUNT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CELTICSPEAR, SM_LOC_TOTAL) = SumColumn(SM_CELTICSPEAR, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL) = SumColumn(SM_LARGEWEAP, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CELTICSPEAR, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICSPEAR)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LARGEWEAP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CELTICSPEAR, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICSPEAR)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LARGEWEAP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LARGEWEAP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
        
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCH_MAULER
                tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_AURAMANIP, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAGNETISM, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL) = SumColumn(SM_LOTM_POWERSTRIKES, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_FISTWRAP, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAULERSTAFF, .BONUS_OPTION) + All_Melee
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                End If
                
            Case TCH_MENTALIST  'Mentalist  light, mana, mentalism
                tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL) = SumColumn(SM_LIGHT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL) = SumColumn(SM_MANA, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MENTALISM, SM_LOC_TOTAL) = SumColumn(SM_MENTALISM, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_LIGHT_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MANA_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_MENTALISM_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_MENTALISM_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MENTALISM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENTALISM)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_MENTALISM_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENTALISM_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MENTALISM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENTALISM)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LIGHT_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LIGHT_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MANA_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MANA_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MENTALISM_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENTALISM_FOCUS)
                End If
                
            Case TCH_NIGHTSHADE 'Nightshade blades, piercing, cd, stealth, crit, envenom
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL) = SumColumn(SM_CELTICDUAL, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL) = SumColumn(SM_CRITICALSTRIKE, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL) = SumColumn(SM_ENVENOM, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
        
                    SkillTotal = tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
        
                    SkillTotal = tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                End If
                
            Case TCH_RANGER 'Ranger blades, piercing, cd, recurve bow, stealth
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL) = SumColumn(SM_CELTICDUAL, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_RECURVE, SM_LOC_TOTAL) = SumColumn(SM_RECURVE, .BONUS_OPTION) + All_Archery
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_RECURVE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RECURVE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CELTICDUAL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CELTICDUAL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_RECURVE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RECURVE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                End If
                
            Case TCH_VALEWALKER 'Valwalker  scythe, arb, parry
                tToon.STAT_MATRIX(SM_SCYTHE, SM_LOC_TOTAL) = SumColumn(SM_SCYTHE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL) = SumColumn(SM_ARBOREAL, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SCYTHE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SCYTHE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_SCYTHE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SCYTHE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ARBOREAL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ARBOREAL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
        
            Case TCH_VAMPIIR 'Vampiir    piercing, dementia, shadow, vamp
                tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL) = SumColumn(SM_PIERCE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_DEMENTIA, SM_LOC_TOTAL) = SumColumn(SM_DEMENTIA, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SHADOWMASTERY, SM_LOC_TOTAL) = SumColumn(SM_SHADOWMASTERY, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_VAMPEMBRACE, SM_LOC_TOTAL) = SumColumn(SM_VAMPEMBRACE, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DEMENTIA, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEMENTIA)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHADOWMASTERY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHADOWMASTERY)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_VAMPEMBRACE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VAMPEMBRACE)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_PIERCE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PIERCE)
        
                    SkillTotal = tToon.STAT_MATRIX(SM_DEMENTIA, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DEMENTIA)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHADOWMASTERY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHADOWMASTERY)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_VAMPEMBRACE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_VAMPEMBRACE)
                End If
        
            Case TCH_WARDEN 'Warden blades, blunt, nuture, regrowth, shield, parry
                tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL) = SumColumn(SM_BLADES, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL) = SumColumn(SM_BLUNT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL) = SumColumn(SM_NURTURE, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL) = SumColumn(SM_REGROWTH, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
        
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
        
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BLADES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLADES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BLUNT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BLUNT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_NURTURE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_NURTURE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_REGROWTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_REGROWTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
        
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
        End Select
    
        For Ctr = SM_AFBONUS To SM_PVEUNIQUE
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then
                    If (Ctr >= SM_ARCHERYDAMAGE And Ctr <= SM_ARCHERYSPEED) Or _
                       (Ctr >= SM_MELEESPEED And Ctr <= SM_SPELLDAMAGE) Or _
                       (Ctr >= SM_SPELLPIERCE And Ctr <= SM_SPELLRANGE) Or _
                       (Ctr >= SM_BLADETURN And Ctr <= SM_DAMAGEREDUCTION) Or _
                       (Ctr >= SM_DEFENSIVEBONUS) Then
                       
                        SkillTotal = Int((tToon.LEVEL * 0.2) - SkillTotal)
                        
                    ElseIf Ctr = SM_PERCPOWER Or _
                           Ctr = SM_FATIGUE Or _
                           Ctr = SM_HEALINGBONUS Or _
                           Ctr = SM_SPELLDURATION Or _
                           Ctr = SM_BUFFBONUS Or _
                           Ctr = SM_DEBUFFBONUS Then
                        
                        If Ctr = SM_PERCPOWER Then
                            SkillTotal = Int(((tToon.LEVEL * 0.5) + SumColumn(SM_POW_CAP, BO_SCBONUS)) - SkillTotal)
                        Else
                            SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
                        End If
                        
                    ElseIf Ctr = SM_AFBONUS Or _
                           Ctr = SM_ARROWRECOVERY Or _
                           Ctr = SM_EXPLOSSREDUCTION Then
                           
                        SkillTotal = Int(tToon.LEVEL - SkillTotal)
                        
                    End If
                    
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                    
                End If
            Else
                If SkillTotal > 0 Then
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                End If
            End If
        Next Ctr
    
    
        For Ctr = SM_LOTM_ENC To SM_LOTM_WATERBREATHING
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
        
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
            End If
            
            If SkillTotal > 0 Then list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
        
        Next Ctr
            
    End With

End Sub

Private Sub CalculateSkillsMid(tToon As TOON_TYPE)

    Dim Ctr As Long
    Dim SkillTotal As Long
    Dim All_Melee As Long
    Dim All_Magic As Long
    Dim All_Dual As Long
    Dim All_Archery As Long
    Dim All_Focus As Long
    
    Dim ColumnSum As Long
        
    'clear the skill list and start over each time
    list_Skills.Clear
    list_OtherBonus.Clear
    
    With SC_SETTINGS

        All_Melee = SumColumn(SM_ALLMELEE, .BONUS_OPTION)
        All_Magic = SumColumn(SM_ALLMAGIC, .BONUS_OPTION)
        All_Dual = SumColumn(SM_ALLDUALWIELD, .BONUS_OPTION)
        All_Archery = SumColumn(SM_ALLARCHERY, .BONUS_OPTION)
        All_Focus = SumColumn(SM_ALLFOCUS, .BONUS_OPTION)
        
        Select Case tToon.CLASS
            Case TCM_BERSERKER  'Berserker  axe, sword, hammer, leftaxe, parry
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL) = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL) = SumColumn(SM_LEFTAXE, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LEFTAXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LEFTAXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCM_BONEDANCER  'Bonedancer    bone army, darkness, suppression
                tToon.STAT_MATRIX(SM_BONEARMY, SM_LOC_TOTAL) = SumColumn(SM_BONEARMY, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_BONE_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_BONE_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BONEARMY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BONEARMY)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_BONE_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BONE_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_BONEARMY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BONEARMY)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BONE_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BONE_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                End If
                
            Case TCM_HEALER  'Healer    mending, aug, pac
                tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL) = SumColumn(SM_MENDING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL) = SumColumn(SM_AUGMENTATION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PACIFICATION, SM_LOC_TOTAL) = SumColumn(SM_PACIFICATION, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AUGMENTATION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PACIFICATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PACIFICATION)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AUGMENTATION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PACIFICATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PACIFICATION)
                End If
                
            Case TCM_HUNTER  'Hunter     spear, sword, beastcraft, stealth, bow
                tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL) = SumColumn(SM_SPEAR, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BEASTCRAFT, SM_LOC_TOTAL) = SumColumn(SM_BEASTCRAFT, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_COMPOSITEBOW, SM_LOC_TOTAL) = SumColumn(SM_COMPOSITEBOW, .BONUS_OPTION) + All_Archery
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPEAR)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BEASTCRAFT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BEASTCRAFT)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_COMPOSITEBOW, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COMPOSITEBOW)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPEAR)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_BEASTCRAFT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BEASTCRAFT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_COMPOSITEBOW, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_COMPOSITEBOW)
                End If
                
            Case TCM_MAULER
                tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_AURAMANIP, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAGNETISM, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL) = SumColumn(SM_LOTM_POWERSTRIKES, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL) = SumColumn(SM_LOTM_FISTWRAP, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL) = SumColumn(SM_LOTM_MAULERSTAFF, .BONUS_OPTION) + All_Melee
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_AURAMANIP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_AURAMANIP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAGNETISM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAGNETISM)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_POWERSTRIKES, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_POWERSTRIKES)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_FISTWRAP, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_FISTWRAP)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LOTM_MAULERSTAFF, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LOTM_MAULERSTAFF)
                End If
                
            Case TCM_RUNEMASTER  'Runemaster    darkness, suppression, runecarving
                tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_RUNECARVING, SM_LOC_TOTAL) = SumColumn(SM_RUNECARVING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_RUNECARVING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_RUNECARVING_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_RUNECARVING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RUNECARVING)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_RUNECARVING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RUNECARVING_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_RUNECARVING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RUNECARVING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_RUNECARVING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_RUNECARVING_FOCUS)
                End If
                
            Case TCM_SAVAGE  'Savage     axe, sword, hammer, hand to hand, parry
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL) = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HANDTOHAND, SM_LOC_TOTAL) = SumColumn(SM_HANDTOHAND, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HANDTOHAND, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HANDTOHAND)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HANDTOHAND, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HANDTOHAND)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCM_SHADOWBLADE  'Shadowblade    axe, sword, leftaxe, stealth, crit, envenom
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL) = SumColumn(SM_LEFTAXE, .BONUS_OPTION) + All_Dual
                tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL) = SumColumn(SM_STEALTH, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL) = SumColumn(SM_CRITICALSTRIKE, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL) = SumColumn(SM_ENVENOM, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LEFTAXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                    
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_LEFTAXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_LEFTAXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STEALTH, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STEALTH)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CRITICALSTRIKE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CRITICALSTRIKE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_ENVENOM, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ENVENOM)
                End If
                
            Case TCM_SHAMAN  'Shaman    mending, aug, cave magic
                tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL) = SumColumn(SM_MENDING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL) = SumColumn(SM_AUGMENTATION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_CAVEMAGIC, SM_LOC_TOTAL) = SumColumn(SM_CAVEMAGIC, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AUGMENTATION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CAVEMAGIC, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CAVEMAGIC)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_AUGMENTATION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AUGMENTATION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CAVEMAGIC, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CAVEMAGIC)
                End If
                
            Case TCM_SKALD  'Skald      axe, sword, hammer, battlesongs, parry
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL) = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_BATTLESONGS, SM_LOC_TOTAL) = SumColumn(SM_BATTLESONGS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_BATTLESONGS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BATTLESONGS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
    
                    SkillTotal = tToon.STAT_MATRIX(SM_BATTLESONGS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_BATTLESONGS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCM_SPIRITMASTER  'Spiritmaster  darkness, suppression, summoning
                tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SUMMONING, SM_LOC_TOTAL) = SumColumn(SM_SUMMONING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_DARKNESS_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SUPPRESSION_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_SUMMONING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_SUMMONING_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SUMMONING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUMMONING)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_SUMMONING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUMMONING_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUMMONING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUMMONING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_DARKNESS_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_DARKNESS_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUPPRESSION_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUPPRESSION_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SUMMONING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SUMMONING_FOCUS)
                End If
    
            Case TCM_THANE 'Thane      axe, sword, hammer, stormcalling, shield, parry
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL) = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_STORMCALLING, SM_LOC_TOTAL) = SumColumn(SM_STORMCALLING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_STORMCALLING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STORMCALLING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_STORMCALLING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_STORMCALLING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                End If
                
            Case TCM_VALKYRIE 'Valkyrie   spear, sword, odin's will, shield, parry, mending sm_mending
                tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL) = SumColumn(SM_SPEAR, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_ODINSWILL, SM_LOC_TOTAL) = SumColumn(SM_ODINSWILL, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL) = SumColumn(SM_MENDING, .BONUS_OPTION) + All_Magic
                If .BONUS_OPTION = BO_TOCAP Then
                    'spear
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPEAR)
                    'sword
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    'shield
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    'parry
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                    'odin's will
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_ODINSWILL, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ODINSWILL)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                    
                Else
                    'spear
                    SkillTotal = tToon.STAT_MATRIX(SM_SPEAR, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SPEAR)
                    'sword
                    SkillTotal = tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    'shield
                    SkillTotal = tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    'parry
                    SkillTotal = tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                    'odin's will
                    SkillTotal = tToon.STAT_MATRIX(SM_ODINSWILL, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_ODINSWILL)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_MENDING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_MENDING)
                End If
                
            Case TCM_WARLOCK 'Warlock   cursing, hexing, witchcraft
                tToon.STAT_MATRIX(SM_CURSING, SM_LOC_TOTAL) = SumColumn(SM_CURSING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_HEXING, SM_LOC_TOTAL) = SumColumn(SM_HEXING, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_WITCHCRAFT, SM_LOC_TOTAL) = SumColumn(SM_WITCHCRAFT, .BONUS_OPTION) + All_Magic
                tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_CURSING_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_HEXING_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_HEXING_FOCUS, .BONUS_OPTION) + All_Focus
                tToon.STAT_MATRIX(SM_WITCHCRAFT_FOCUS, SM_LOC_TOTAL) = SumColumn(SM_WITCHCRAFT_FOCUS, .BONUS_OPTION) + All_Focus
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_CURSING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_HEXING, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HEXING)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - tToon.STAT_MATRIX(SM_WITCHCRAFT, SM_LOC_TOTAL))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WITCHCRAFT)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                    
                    SkillTotal = Int(tToon.LEVEL - tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL))
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                Else
                    SkillTotal = tToon.STAT_MATRIX(SM_CURSING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_HEXING, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HEXING)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_WITCHCRAFT, SM_LOC_TOTAL)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_WITCHCRAFT)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                    
                    SkillTotal = tToon.STAT_MATRIX(SM_CURSING_FOCUS, SM_LOC_TOTAL)
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(SM_CURSING_FOCUS)
                End If
                
            Case TCM_WARRIOR 'Warrior    axe, sword, hammer, shield, parry, thrown
                tToon.STAT_MATRIX(SM_AXE, SM_LOC_TOTAL) = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SWORD, SM_LOC_TOTAL) = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_HAMMER, SM_LOC_TOTAL) = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                tToon.STAT_MATRIX(SM_SHIELD, SM_LOC_TOTAL) = SumColumn(SM_SHIELD, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_PARRY, SM_LOC_TOTAL) = SumColumn(SM_PARRY, .BONUS_OPTION)
                tToon.STAT_MATRIX(SM_THROWN, SM_LOC_TOTAL) = SumColumn(SM_THROWN, .BONUS_OPTION)
                If .BONUS_OPTION = BO_TOCAP Then
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - (SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - (SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - (SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - SumColumn(SM_SHIELD, .BONUS_OPTION))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - SumColumn(SM_PARRY, .BONUS_OPTION))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                    
                    SkillTotal = Int(((tToon.LEVEL * 0.2) + 1) - SumColumn(SM_THROWN, .BONUS_OPTION))
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THROWN)
                Else
                    SkillTotal = SumColumn(SM_AXE, .BONUS_OPTION) + All_Melee
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_AXE)
                    
                    SkillTotal = SumColumn(SM_SWORD, .BONUS_OPTION) + All_Melee
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SWORD)
                    
                    SkillTotal = SumColumn(SM_HAMMER, .BONUS_OPTION) + All_Melee
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_HAMMER)
                    
                    SkillTotal = SumColumn(SM_SHIELD, .BONUS_OPTION)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_SHIELD)
                    
                    SkillTotal = SumColumn(SM_PARRY, .BONUS_OPTION)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_PARRY)
                    
                    SkillTotal = SumColumn(SM_THROWN, .BONUS_OPTION)
                    list_Skills.AddItem SkillTotal & " " & StatMatrixColumnName(SM_THROWN)
                End If
        End Select
    
        For Ctr = SM_AFBONUS To SM_PVEUNIQUE
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then
                    If (Ctr >= SM_ARCHERYDAMAGE And Ctr <= SM_ARCHERYSPEED) Or _
                       (Ctr >= SM_MELEESPEED And Ctr <= SM_SPELLDAMAGE) Or _
                       (Ctr >= SM_SPELLPIERCE And Ctr <= SM_SPELLRANGE) Or _
                       (Ctr >= SM_BLADETURN And Ctr <= SM_DAMAGEREDUCTION) Or _
                       (Ctr >= SM_DEFENSIVEBONUS) Then
                       
                        SkillTotal = Int((tToon.LEVEL * 0.2) - SkillTotal)
                        
                    ElseIf Ctr = SM_PERCPOWER Or _
                           Ctr = SM_FATIGUE Or _
                           Ctr = SM_HEALINGBONUS Or _
                           Ctr = SM_SPELLDURATION Or _
                           Ctr = SM_BUFFBONUS Or _
                           Ctr = SM_DEBUFFBONUS Then
                           
                        SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
                        
                    ElseIf Ctr = SM_AFBONUS Or _
                           Ctr = SM_ARROWRECOVERY Or _
                           Ctr = SM_EXPLOSSREDUCTION Then
                           
                        SkillTotal = Int(tToon.LEVEL - SkillTotal)
                        
                    End If
                    
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                    
                End If
            Else
                If SkillTotal > 0 Then
                    list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
                End If
            End If
        Next Ctr
        
        For Ctr = SM_LOTM_ENC To SM_LOTM_WATERBREATHING
        
            SkillTotal = SumColumn(Ctr, .BONUS_OPTION)
            tToon.STAT_MATRIX(Ctr, SM_LOC_TOTAL) = SkillTotal
        
            If .BONUS_OPTION = BO_TOCAP Then
                If SkillTotal > 0 Then SkillTotal = Int((tToon.LEVEL * 0.5) - SkillTotal)
            End If
            
            If SkillTotal > 0 Then list_OtherBonus.AddItem SkillTotal & " " & StatMatrixColumnName(Ctr)
        
        Next Ctr
        
    End With

End Sub

Private Sub LoadDPGemSelection(REALM As Long, cmbSelect As ComboBox, cmbEffect As ComboBox, txtAmount As TextBox)
    
    Select Case cmbSelect.Text
        Case ""
            cmbEffect.Clear
            txtAmount.Text = vbNullString
        Case "Focus"
            Call LoadFocusDP(REALM, cmbEffect)
        Case "Hits"
            Call LoadHitsDP(cmbEffect)
        Case "Power"
            Call LoadPowerDP(cmbEffect)
        Case "Resist"
            Call LoadResistsDP(cmbEffect)
        Case "Skill"
            Call LoadSkillDP(REALM, cmbEffect)
        Case "Stat"
            Call LoadStatDP(cmbEffect)
        Case "Cap Increase"
            Call LoadCapIncreaseDP(cmbEffect)
        Case "ToA Bonus"
            Call LoadToaBonusDP(cmbEffect)
        Case "PvE Bonus"
            Call LoadPveBonusDP(cmbEffect)
        Case "LotM Bonus"
            Call LoadLotmBonusDP(cmbEffect)
        Case "Charged Effect"
            Call LoadProcEffectDP(cmbEffect)
        Case "Reactive Effect"
            Call LoadProcEffectDP(cmbEffect)
        Case "Offensive Effect"
            Call LoadProcEffectDP(cmbEffect)
        Case "Use Ability"
            Call LoadProcEffectDP(cmbEffect)
    End Select
    
End Sub

Private Sub LoadSCGemSelection(tToon As TOON_TYPE, cmbSelect As ComboBox, cmbEffect As ComboBox, cmbAmount As ComboBox)

    Select Case cmbSelect.Text
        Case ""
            cmbEffect.Clear
            cmbAmount.Clear
        Case "Focus"
            Call LoadFocusSC(tToon, cmbEffect, cmbAmount)
        Case "Hits"
            Call LoadHitsSC(cmbEffect, cmbAmount)
        Case "Power"
            Call LoadPowerSC(cmbEffect, cmbAmount)
        Case "Resist"
            Call LoadResistsSC(cmbEffect, cmbAmount)
        Case "Skill"
            Call LoadSkillSC(tToon, cmbEffect, cmbAmount)
        Case "Stat"
            Call LoadStatSC(tToon.REALM, cmbEffect, cmbAmount)
    End Select

End Sub

Private Sub SCClick(Index As Integer, Error As Label, tToon As TOON_TYPE, Equip As CheckBox, _
                    GS1 As ComboBox, GS2 As ComboBox, GS3 As ComboBox, GS4 As ComboBox, _
                    GA1 As ComboBox, GA2 As ComboBox, GA3 As ComboBox, GA4 As ComboBox, _
                    GE1 As ComboBox, GE2 As ComboBox, GE3 As ComboBox, GE4 As ComboBox, _
                    GN1 As Label, GN2 As Label, GN3 As Label, GN4 As Label, _
                    GP1 As Label, GP2 As Label, GP3 As Label, GP4 As Label)
                    
    Static bHereAlready As Boolean
    Static lErr As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
        
        'check if there is a valid value specified for all magic/melee skill selection
        If (LCase$(GE1.Text) = "all magic skills" Or LCase$(GE1.Text) = "all melee skills") And Val(GA1.Text) > 1 Then
            Error.Caption = "Invalid Value For This Skill"
            GoTo Value_Error
        End If
        
        If (LCase$(GE2.Text) = "all magic skills" Or LCase$(GE2.Text) = "all melee skills") And Val(GA2.Text) > 1 Then
            Error.Caption = "Invalid Value For This Skill"
            GoTo Value_Error
        End If
        
        If (LCase$(GE3.Text) = "all magic skills" Or LCase$(GE3.Text) = "all melee skills") And Val(GA3.Text) > 1 Then
            Error.Caption = "Invalid Value For This Skill"
            GoTo Value_Error
        End If
        
        If (LCase$(GE4.Text) = "all magic skills" Or LCase$(GE4.Text) = "all melee skills") And Val(GA4.Text) > 1 Then
            Error.Caption = "Invalid Value For This Skill"
            GoTo Value_Error
        End If
        
        '-------------------------------------------------------------------------------------------------------------
        
        'set the gem names, prices and points
        If Len(GS1.Text) > 0 Then
            GN1.Caption = SetGemName(GS1, GA1, GE1, tToon.REALM)
            Call SetGemCost(GA1, GN1)
            GP1.Tag = CalcGemPoints(GS1.Text, Val(GA1.Text))
        End If
        
        If Len(GS2.Text) > 0 Then
            GN2.Caption = SetGemName(GS2, GA2, GE2, tToon.REALM)
            Call SetGemCost(GA2, GN2)
            GP2.Tag = CalcGemPoints(GS2.Text, Val(GA2.Text))
        End If
        
        If Len(GS3.Text) > 0 Then
            GN3.Caption = SetGemName(GS3, GA3, GE3, tToon.REALM)
            Call SetGemCost(GA3, GN3)
            GP3.Tag = CalcGemPoints(GS3.Text, Val(GA3.Text))
        End If
        
        If Len(GS4.Text) > 0 Then
            GN4.Caption = SetGemName(GS4, GA4, GE4, tToon.REALM)
            Call SetGemCost(GA4, GN4)
            GP4.Tag = CalcGemPoints(GS4.Text, Val(GA4.Text))
        End If
        
        '-------------------------------------------------------------------------------------------------------------
        
        'calculate item price and item imbue
        If GE1.Text <> vbNullString Then
            If DupeGemCheck(GS1, GE1, GS2, GE2, GS3, GE3, GS4, GE4) = 0 Then
                Call CalculateImbue(Index)
                Call SetItemCost(Index)
                lErr = False
                Error.Caption = vbNullString
            Else
                Error.Caption = "Duplicate Effect: " & GE1.Text & vbCrLf & "Location: " & lbl_LocationName.Caption
                lErr = True
            End If
        End If
        
        If GE2.Text <> vbNullString Then
            If DupeGemCheck(GS2, GE2, GS1, GE1, GS3, GE3, GS4, GE4) = 0 Then
                Call CalculateImbue(Index)
                Call SetItemCost(Index)
                lErr = False
                Error.Caption = vbNullString
            Else
                Error.Caption = "Duplicate Effect: " & GE2.Text & vbCrLf & "Location: " & lbl_LocationName.Caption
                lErr = True
            End If
        End If
        
        If GE3.Text <> vbNullString Then
            If DupeGemCheck(GS3, GE3, GS1, GE1, GS2, GE2, GS4, GE4) = 0 Then
                Call CalculateImbue(Index)
                Call SetItemCost(Index)
                lErr = False
                Error.Caption = vbNullString
            Else
                Error.Caption = "Duplicate Effect: " & GE3.Text & vbCrLf & "Location: " & lbl_LocationName.Caption
                lErr = True
            End If
        End If
        
        If GE4.Text <> vbNullString Then
            If DupeGemCheck(GS4, GE4, GS1, GE1, GS2, GE2, GS3, GE3) = 0 Then
                Call CalculateImbue(Index)
                Call SetItemCost(Index)
                lErr = False
                Error.Caption = vbNullString
            Else
                Error.Caption = "Duplicate Effect: " & GE4.Text & vbCrLf & "Location: " & lbl_LocationName.Caption
                lErr = True
            End If
        End If
               
        If Equip.Value = 1 Then
            Call AssignEffect(Index, GS1, GE1, GA1, tToon)
            Call AssignEffect(Index, GS2, GE2, GA2, tToon)
            Call AssignEffect(Index, GS3, GE3, GA3, tToon)
            Call AssignEffect(Index, GS4, GE4, GA4, tToon)
        
            If TEMPLATE_LOADING = False Then
                Call CalculateAttributeTotals(TOON)
                If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
            End If
            
            If lErr = False Then Error.Caption = vbNullString
        
        End If
        
    End If

Value_Error:
    
    bHereAlready = False
    
End Sub

Private Sub cmb_GemSelectSC1_Click(Index As Integer)
    
    Static bHereAlready As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
        If cmb_GemSelectSC1(Index).ListIndex <= 0 Then
            lbl_GemNameSC1(Index).Tag = vbNullString
            lbl_GemNameSC1(Index).Caption = vbNullString
            cmb_GemEffectSC1(Index).Clear
            cmb_GemAmountSC1(Index).Clear
            lbl_GemPtsSC1(Index).Tag = 0
            cmb_GemSelectSC1(Index).Tag = 0
            lbl_GemNameSC1(Index).Tag = 0
            
            Call CalculateImbue(Index)
            Call SetItemCost(Index)
                    
            If chk_Equip_SC(Index).Value = vbChecked Then
                Call AssignEffect(Index, cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), cmb_GemAmountSC1(Index), TOON)
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
        Else
            Call LoadSCGemSelection(TOON, cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), cmb_GemAmountSC1(Index))
            
            cmb_GemAmountSC1(Index).ListIndex = 0
            cmb_GemEffectSC1(Index).ListIndex = 0
        End If
        
        Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    End If
    
    bHereAlready = False
    
End Sub

Private Sub cmb_GemSelectSC2_Click(Index As Integer)
    
    Static bHereAlready As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
        If cmb_GemSelectSC2(Index).ListIndex <= 0 Then
            lbl_GemNameSC2(Index).Tag = vbNullString
            lbl_GemNameSC2(Index).Caption = vbNullString
            cmb_GemEffectSC2(Index).Clear
            cmb_GemAmountSC2(Index).Clear
            lbl_GemPtsSC2(Index).Tag = 0
            cmb_GemSelectSC2(Index).Tag = 0
            lbl_GemNameSC2(Index).Tag = 0
            
            Call CalculateImbue(Index)
            Call SetItemCost(Index)
            
            If chk_Equip_SC(Index).Value = vbChecked Then
                Call AssignEffect(Index, cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), cmb_GemAmountSC2(Index), TOON)
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
        Else
            Call LoadSCGemSelection(TOON, cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), cmb_GemAmountSC2(Index))
            
            cmb_GemAmountSC2(Index).ListIndex = 0
            cmb_GemEffectSC2(Index).ListIndex = 0

        End If
        
        Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    End If
    
    bHereAlready = False
    
End Sub

Private Sub cmb_GemSelectSC3_Click(Index As Integer)
    
    Static bHereAlready As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
        If cmb_GemSelectSC3(Index).ListIndex <= 0 Then
            lbl_GemNameSC3(Index).Tag = vbNullString
            lbl_GemNameSC3(Index).Caption = vbNullString
            cmb_GemEffectSC3(Index).Clear
            cmb_GemAmountSC3(Index).Clear
            lbl_GemPtsSC3(Index).Tag = 0
            cmb_GemSelectSC3(Index).Tag = 0
            lbl_GemNameSC3(Index).Tag = 0
            
            Call CalculateImbue(Index)
            Call SetItemCost(Index)
            
            If chk_Equip_SC(Index).Value = vbChecked Then
                Call AssignEffect(Index, cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), cmb_GemAmountSC3(Index), TOON)
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
        Else
            Call LoadSCGemSelection(TOON, cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), cmb_GemAmountSC3(Index))
            
            cmb_GemAmountSC3(Index).ListIndex = 0
            cmb_GemEffectSC3(Index).ListIndex = 0

        End If
        
        Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    End If
    
    bHereAlready = False
    
End Sub

Private Sub cmb_GemSelectSC4_Click(Index As Integer)
    
    Static bHereAlready As Boolean
    
    If Not bHereAlready Then
        bHereAlready = True
            
        If cmb_GemSelectSC4(Index).ListIndex <= 0 Then
            lbl_GemNameSC4(Index).Tag = vbNullString
            lbl_GemNameSC4(Index).Caption = vbNullString
            cmb_GemEffectSC4(Index).Clear
            cmb_GemAmountSC4(Index).Clear
            lbl_GemPtsSC4(Index).Tag = 0
            cmb_GemSelectSC4(Index).Tag = 0
            lbl_GemNameSC4(Index).Tag = 0
            
            Call CalculateImbue(Index)
            Call SetItemCost(Index)
            
            If chk_Equip_SC(Index).Value = vbChecked Then
                Call AssignEffect(Index, cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), cmb_GemAmountSC4(Index), TOON)
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
            End If
        Else
            Call LoadSCGemSelection(TOON, cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), cmb_GemAmountSC4(Index))
        
            cmb_GemAmountSC4(Index).ListIndex = 0
            cmb_GemEffectSC4(Index).ListIndex = 0

        End If
        
        Call SCClick(Index, lbl_Multipurpose, TOON, chk_Equip_SC(Index), _
            cmb_GemSelectSC1(Index), cmb_GemSelectSC2(Index), cmb_GemSelectSC3(Index), cmb_GemSelectSC4(Index), _
            cmb_GemAmountSC1(Index), cmb_GemAmountSC2(Index), cmb_GemAmountSC3(Index), cmb_GemAmountSC4(Index), _
            cmb_GemEffectSC1(Index), cmb_GemEffectSC2(Index), cmb_GemEffectSC3(Index), cmb_GemEffectSC4(Index), _
            lbl_GemNameSC1(Index), lbl_GemNameSC2(Index), lbl_GemNameSC3(Index), lbl_GemNameSC4(Index), _
            lbl_GemPtsSC1(Index), lbl_GemPtsSC2(Index), lbl_GemPtsSC3(Index), lbl_GemPtsSC4(Index))
    End If
    
    bHereAlready = False
End Sub

Private Function SetGemName(GemSelection As ComboBox, GemAmount As ComboBox, GemEffect As ComboBox, REALM As Long) As String
'working as intended 10/23/06
'function expectation:
'returns the name of the gem requested

    Dim sName As String
    
    If GemAmount.Text <> vbNullString Then
        If GemEffect.Text <> vbNullString Then
            sName = GetGemName(GemSelection.Text, GemAmount.ListIndex, GemEffect.Text, REALM)
        End If
    End If
    
    SetGemName = sName
    
End Function

Private Sub cmb_ItemQuality_Click(Index As Integer)

    Dim PTS As Long
    Dim LVL As Long
    Dim QUA As Long
    
    LVL = Val(txt_ItemLevel_SC(Index).Text)
    QUA = cmb_ItemQuality(Index).ListIndex
    
    If LVL > 0 And LVL < 52 Then
       PTS = GetImbuePoints(LVL, QUA)
       lbl_ImbuePTS_Avail_SC(Index).Caption = " " & PTS
    End If
    
    Call CalculateImbue(Index)
    
End Sub

Public Sub LoadFrames(ByRef ProgressBar As Label, ByRef Status As Label)
    
    With ProgressBar
        'armor and weapon slots, sc frames - Index 0 is loaded at design
        LoadSCFrame (WS_DOLL_ARMS)
            chk_Equip_SC(WS_DOLL_ARMS).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_LEGS)
            chk_Equip_SC(WS_DOLL_LEGS).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_RHAND)
            chk_Equip_SC(WS_DOLL_RHAND).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_LHAND)
            chk_Equip_SC(WS_DOLL_LHAND).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_2HAND)
            chk_Equip_SC(WS_DOLL_2HAND).Value = vbUnchecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_RANGED)
            chk_Equip_SC(WS_DOLL_RANGED).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_FEET)
            chk_Equip_SC(WS_DOLL_FEET).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_HANDS)
            chk_Equip_SC(WS_DOLL_HANDS).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_HEAD)
            chk_Equip_SC(WS_DOLL_HEAD).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        
        LoadSCFrame (WS_DOLL_RIGHTSPARE)
            chk_Equip_SC(WS_DOLL_RIGHTSPARE).Value = vbUnchecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_LEFTSPARE)
            chk_Equip_SC(WS_DOLL_LEFTSPARE).Value = vbUnchecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_2HANDSPARE)
            chk_Equip_SC(WS_DOLL_2HANDSPARE).Value = vbUnchecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadSCFrame (WS_DOLL_RANGEDSPARE)
            chk_Equip_SC(WS_DOLL_RANGEDSPARE).Value = vbUnchecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
            
        'armor and weapon slots, drop frames - Index 0 is loaded at design
        LoadDPFrame (WS_DOLL_ARMS)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_LEGS)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_RHAND)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_LHAND)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_2HAND)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_RANGED)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_FEET)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_HANDS)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_HEAD)
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        
        LoadDPFrame (WS_DOLL_RIGHTSPARE)
            chk_Equip_DP(WS_DOLL_RIGHTSPARE).Value = 0
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_LEFTSPARE)
            chk_Equip_DP(WS_DOLL_LEFTSPARE).Value = 0
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_2HANDSPARE)
            chk_Equip_DP(WS_DOLL_2HANDSPARE).Value = 0
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_RANGEDSPARE)
            chk_Equip_DP(WS_DOLL_RANGEDSPARE).Value = 0
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        
        'accessory slots can only be drops
        LoadDPFrame (WS_DOLL_GEM)
            chk_Equip_DP(WS_DOLL_GEM).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_LRING)
            chk_Equip_DP(WS_DOLL_LRING).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_LWRIST)
            chk_Equip_DP(WS_DOLL_LWRIST).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_RWRIST)
            chk_Equip_DP(WS_DOLL_RWRIST).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_RRING)
            chk_Equip_DP(WS_DOLL_RRING).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_WAIST)
            chk_Equip_DP(WS_DOLL_WAIST).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_CLOAK)
            chk_Equip_DP(WS_DOLL_CLOAK).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_NECK)
            chk_Equip_DP(WS_DOLL_NECK).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
        LoadDPFrame (WS_DOLL_MYTHICAL)
            chk_Equip_DP(WS_DOLL_MYTHICAL).Value = vbChecked
            .Width = .Width + SP_MD_PROGRESS_CHANGE
    End With
    
End Sub

Private Sub LoadSCFrameGemTypes(GemSelect As ComboBox)

    Dim idx As Long

    For idx = 0 To 6
        GemSelect.AddItem tGemType(idx)
    Next idx
    
End Sub

Private Sub LoadDPGemTypes(GemSelect As ComboBox)
        
    GemSelect.AddItem ""
    GemSelect.AddItem "Focus"
    GemSelect.AddItem "Hits"
    GemSelect.AddItem "Power"
    GemSelect.AddItem "Resist"
    GemSelect.AddItem "Skill"
    GemSelect.AddItem "Stat"
    GemSelect.AddItem "Cap Increase"
    GemSelect.AddItem "ToA Bonus"
    GemSelect.AddItem "PvE Bonus"
    GemSelect.AddItem "LotM Bonus"
    GemSelect.AddItem "Charged Effect"
    GemSelect.AddItem "Reactive Effect"
    GemSelect.AddItem "Offensive Effect"
    GemSelect.AddItem "Use Ability"

End Sub

Private Sub cmd_ItemQuality_DOWN_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_ItemQuality_DOWN(Index).Picture = LoadResPicture("SDOWN_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_ItemQuality_DOWN_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_ItemQuality_DOWN(Index).Picture = LoadResPicture("SDOWN_UP", vbResBitmap)
    
    Dim lQuality As Long
    
    lQuality = Val(txt_ItemQuality(Index).Text)
    If lQuality > 80 Then
        lQuality = lQuality - 1
    Else
        lQuality = 80
    End If
    
    txt_ItemQuality(Index).Text = lQuality
    
End Sub

Private Sub cmd_ItemQuality_UP_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_ItemQuality_UP(Index).Picture = LoadResPicture("SUP_DOWN", vbResBitmap)
    
End Sub

Private Sub cmd_ItemQuality_UP_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    Set cmd_ItemQuality_UP(Index).Picture = LoadResPicture("SUP_UP", vbResBitmap)
    

    Dim l_quality As Long
    
    l_quality = Val(txt_ItemQuality(Index).Text)
    If l_quality < 100 Then
        l_quality = l_quality + 1
    End If
    
    txt_ItemQuality(Index).Text = l_quality
    
End Sub

Private Sub cmd_SetItemLevel_SC_MouseDown(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    If WORKSHOP_ENABLED Then
    
        With cmd_SetItemLevel_SC(Index)
        
        If .Tag = vbNullString Then
            .Picture = LoadResPicture("SRIGHT_DOWN", vbResBitmap)
            .Tag = "wait"
        Else
            .Picture = LoadResPicture("SLEFT_DOWN", vbResBitmap)
        End If
        
        End With
    End If
    
End Sub

Private Sub cmd_SetItemLevel_SC_MouseUp(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    If WORKSHOP_ENABLED Then
        With cmd_SetItemLevel_SC(Index)
        
            If .Tag = "wait" Then
                Set .Picture = LoadResPicture("SLEFT_UP", vbResBitmap)
                
                frame_ConfigItemSCA.Left = .Left + (.Width)
                frame_ConfigItemSCA.Top = .Top '(Height / 2) - (frame_ConfigItemSCA.Height / 3)
                
                frame_ConfigItemSCA.Visible = True
                frame_ConfigItemSCA.ZOrder 0
                
                .Tag = "set"
            ElseIf .Tag = "set" Then
                If Not (lbl_ConfigItem_Level.Caption = vbNullString) And (Val(lbl_ConfigItem_Level.Caption) < 52) Then txt_ItemLevel_SC(Index).Text = lbl_ConfigItem_Level.Caption
                frame_ConfigItemSCA.Visible = False
                .Tag = vbNullString
                .Picture = LoadResPicture("SRIGHT_UP", vbResBitmap)
            End If
        
        End With
    End If
    
End Sub

Private Sub lbl_Attribute_Cap_Value_Click(Index As Integer)

    If Index >= WS_ATTR_STR And Index <= WS_ATTR_CHA Then
        Call Stat_Locations.Populate_CapView(Index)
        
    ElseIf Index = WS_ATTR_HIT Then
        Call Stat_Locations.Populate_HitsCapView
        
    ElseIf Index = WS_ATTR_POW Then
        Call Stat_Locations.Populate_PowerCapView
        
    End If
    
End Sub

Private Sub lbl_Attribute_Cap_Value_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)

    lbl_Attribute_Cap_Value(Index).ToolTipText = "+Cap"
    
End Sub

Private Sub lbl_Attribute_Name_Click(Index As Integer)
    
    If Index >= WS_ATTR_STR And Index <= WS_ATTR_CHA Then
        Call Stat_Locations.Populate_StatView(Index)
    ElseIf Index = WS_ATTR_HIT Then
        Call Stat_Locations.Populate_HitsView
    ElseIf Index = WS_ATTR_POW Then
        Call Stat_Locations.Populate_PowerView
    ElseIf Index >= WS_ATTR_CRUSH And Index <= WS_ATTR_ENERGY Then
        Call Stat_Locations.Populate_ResistView(Index)
    End If
    
End Sub

Private Sub lbl_Attribute_Usable_MouseMove(Index As Integer, Button As Integer, Shift As Integer, X As Single, Y As Single)
    
    lbl_Attribute_Usable(Index).ToolTipText = "Maximum Possible"
    
End Sub

Private Sub lbl_Attribute_Value_Click(Index As Integer)

    If Index >= WS_ATTR_STR And Index <= WS_ATTR_CHA Then
        Call Stat_Locations.Populate_StatView(Index)
        
    ElseIf Index = WS_ATTR_HIT Then
        Call Stat_Locations.Populate_HitsView
        
    ElseIf Index = WS_ATTR_POW Then
        Call Stat_Locations.Populate_PowerView
    
    ElseIf Index >= WS_ATTR_CRUSH And Index <= WS_ATTR_ENERGY Then
        Call Stat_Locations.Populate_ResistView(Index)
        
    End If
        
End Sub

Private Sub lbl_GemNameSC1_Click(Index As Integer)

    If lbl_GemNameSC1(Index).Caption <> vbNullString Then
        Call Material_List.MatsDisplay_ONE(TOON.REALM, lbl_GemNameSC1(Index).Caption, cmb_GemAmountSC1(Index).ListIndex, cmb_GemSelectSC1(Index).Text)
    End If
        
End Sub

Private Sub lbl_GemNameSC2_Click(Index As Integer)

    If lbl_GemNameSC2(Index).Caption <> vbNullString Then
        Call Material_List.MatsDisplay_ONE(TOON.REALM, lbl_GemNameSC2(Index).Caption, cmb_GemAmountSC2(Index).ListIndex, cmb_GemSelectSC2(Index).Text)
    End If
    
End Sub

Private Sub lbl_GemNameSC3_Click(Index As Integer)

    If lbl_GemNameSC3(Index).Caption <> vbNullString Then
        Call Material_List.MatsDisplay_ONE(TOON.REALM, lbl_GemNameSC3(Index).Caption, cmb_GemAmountSC3(Index).ListIndex, cmb_GemSelectSC3(Index).Text)
    End If
    
End Sub

Private Sub lbl_GemNameSC4_Click(Index As Integer)

    If lbl_GemNameSC4(Index).Caption <> vbNullString Then
        Call Material_List.MatsDisplay_ONE(TOON.REALM, lbl_GemNameSC4(Index).Caption, cmb_GemAmountSC4(Index).ListIndex, cmb_GemSelectSC4(Index).Text)
    End If
    
End Sub

Private Sub mnuAbout_Click()
    
    AboutBox.Show vbModal
    
End Sub

Private Sub mnuBonusDisplay_Click(Index As Integer)
    
    Dim i As Long
    
    Select Case Index
        Case 0
            i = BO_SCBONUS
        Case 1
            i = BO_TOCAP
    End Select
    
    SC_SETTINGS.BONUS_OPTION = i
    Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, NUM_VAL, "BONUS_OPT", STR(i))
    
    If APPLICATION_PRE_START = False Then
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If
    End If
    
    For i = 0 To mnuBonusDisplay.UBound
        mnuBonusDisplay(i).Checked = False
    Next i
    
    mnuBonusDisplay(Index).Checked = True
    
End Sub

Private Sub mnuConfiguration_Click()
    
    Suit_Configuration.Show vbModal
    
End Sub

Private Sub mnuExit_Click()

    Call ExitNice
    
End Sub

Public Sub ClickPiece(Index As Integer)
'working as intended 10/23/06

    Call img_DollButton_MouseUp(Index, 1, 0, 0, 0)
    
End Sub

Private Sub LoadLokiCraftItem(Index As Integer, sBuffer As String, FromTemplate As Boolean)

    Dim lCtr As Long
    Dim lIdx As Long
    
    Dim lPosLo As Long
    Dim lPosHi As Long
    
    Dim sQ As String
    Dim sBuf As String
    Dim sSlotBuf As String
    
    Dim sTemp As String
    
    sQ = Chr$(34)
    
    sBuf = sBuffer
    
    '<SLOT NAME="Arms">
    '    <UNDESIRABLES>
    '    </UNDESIRABLES>
    '    <ITEMLIST>
    '        <ITEM NAME="">
    '            <EQUIPPED>true</EQUIPPED>
    '            <REALM>All</REALM>
    '            <ORIGIN>Crafted</ORIGIN>
    '            <LEVEL>51</LEVEL>
    '            <QUALITY>99</QUALITY>
    '            <ITEM_BONUS>0</ITEM_BONUS>
    '            <EQUIPLIST>
    '                <SLOT NAME="Arms">true</SLOT>
    '            </EQUIPLIST>
    '            <CLASSLIST>
    '            </CLASSLIST>
    '            <SOURCE>LOKI</SOURCE>
    '            <ARMOURTYPE>Cloth</ARMOURTYPE>
    '            <ARMOURFACTOR>0</ARMOURFACTOR>
    '            <IS_UNIQUE>false</IS_UNIQUE>
    '            <ORACLE_IGNORE>false</ORACLE_IGNORE>
    '            <USER_VALUE>0</USER_VALUE>
    '            <VARIANT></VARIANT>
    '            <ASSOCIATE PARENT="false"></ASSOCIATE>
    '            <BONUSLIST>
    '                <BONUS TYPE="TOA Bonus" NAME="Armour Factor" LOCK="None">10</BONUS>
    '                <BONUS TYPE="Statistic" NAME="Quickness" LOCK="None">1</BONUS>
    '            </BONUSLIST>
    '        </ITEM>
    '    </ITEMLIST>
    '</SLOT>

    If FromTemplate Then
        
        'check to see if its an item from importlokitemplate routine call, if it is, then we convert it to the craft item format (:D)
        If InStr(sBuffer, "<slot name=") <> 0 Then
            sBuf = vbNullString
            sBuf = "<scitem>"
            
            If InStr(sBuffer, "<item name=") <> 0 Then
                sTemp = ""
                lPosLo = InStr(sBuffer, "<item name=") + 12
                lPosHi = InStr(lPosLo, sBuffer, sQ)
                sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                sBuf = sBuf & "<itemname>" & sTemp & "</itemname>"
                sTemp = ""
            End If
            
            If InStr(sBuffer, "<quality>") <> 0 Then
                sTemp = ""
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<quality>") + 9, _
                            InStr(sBuffer, "</quality>") - InStr(sBuffer, "<quality>") - 9)
                sBuf = sBuf & "<itemquality>" & sTemp & "</itemquality>"
                sTemp = ""
            End If
                    
            If InStr(sBuffer, "<level>") <> 0 Then
                sTemp = ""
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<level>") + 7, _
                            InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
                sBuf = sBuf & "<level>" & sTemp & "</level>"
                sTemp = ""
            End If
            
            If InStr(sBuffer, "<armourfactor>") <> 0 Then
                sTemp = ""
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<armourfactor>") + 14, _
                            InStr(sBuffer, "</armourfactor>") - InStr(sBuffer, "<armourfactor>") - 14)
                sBuf = sBuf & "<afdps>" & sTemp & "</afdps>"
                sTemp = ""
            End If
                            
            If InStr(sBuffer, "<dps>") <> 0 Then
                sTemp = ""
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<dps>") + 5, _
                            InStr(sBuffer, "</dps>") - InStr(sBuffer, "<dps>") - 5)
                sBuf = sBuf & "<afdps>" & sTemp & "</afdps>"
                sTemp = ""
            End If
            
            lCtr = 0
            While InStr(sBuffer, "<bonus type=") <> 0 And InStr(sBuffer, "</bonus>") <> 0
                
                sBuf = sBuf & "<slot number=" & sQ & lCtr & sQ & ">"
                If InStr(sBuffer, "<bonus type=") <> 0 Then
                    sTemp = ""
                    lPosLo = InStr(sBuffer, "<bonus type=") + 13
                    lPosHi = InStr(lPosLo, sBuffer, sQ)
                    sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                    
                    'translate the bonus types that don't directly translate over
                    Select Case (sTemp)
                        Case "statistic"
                            sTemp = "stat"
                            
                        Case "resistance"
                            sTemp = "resist"
                           
                        Case "toa bonus"
                            sTemp = "other bonus"
                            
                        Case "pve bonus"
                            sTemp = "pve"
                    End Select
                    
                    sBuf = sBuf & "<type>" & sTemp & "</type>"
                                    
                    lPosLo = InStr(lPosHi, sBuffer, "name=") + 6
                    lPosHi = InStr(lPosLo, sBuffer, sQ)
                    sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                    
                    sBuf = sBuf & "<effect>" & sTemp & "</effect>"
                    
                    lPosLo = InStr(lPosHi, sBuffer, ">") + 1
                    lPosHi = InStr(sBuffer, "</bonus>")
                    sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                                    
                    sBuf = sBuf & "<amount>" & sTemp & "</amount>"
                    
                    sBuffer = StripTag(sBuffer, "<bonus type=", "</bonus>", 1)
    
                    '<BONUSLIST>
                    '    <BONUS TYPE="Statistic" NAME="Strength" LOCK="None">0</BONUS>
                    '    <BONUS TYPE="Resistance" NAME="Body" LOCK="None">0</BONUS>
                    '    <BONUS TYPE="Skill" NAME="Aura Manipulation" LOCK="None">0</BONUS>
                    '    <BONUS TYPE="Cap Increase" NAME="Strength" LOCK="None">0</BONUS>
                    '    <BONUS TYPE="TOA Bonus" NAME="Armour Factor" LOCK="None">0</BONUS>
                    '    <BONUS TYPE="PvE Bonus" NAME="Bladeturn Reinforcement" LOCK="None">0</BONUS>
                    '</BONUSLIST>
                    
                End If
                
                lCtr = lCtr + 1
                            
                sBuf = sBuf & "</slot>"
            Wend
            sBuf = sBuf & "</scitem>"
        End If
    End If
    
    'now lets load it up
    If InStr(sBuf, "<itemquality>") <> 0 And InStr(sBuf, "</itemquality>") <> 0 Then
    
        sTemp = Mid$(sBuf, _
                     InStr(sBuf, "<itemquality>") + 13, _
                     InStr(sBuf, "</itemquality>") - InStr(sBuf, "<itemquality>") - 13)
                     
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_ItemQuality(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_ItemQuality(Index).ListIndex = lIdx
        End If
        
    End If
    
    If InStr(sBuf, "<level>") <> 0 And InStr(sBuf, "</level>") <> 0 Then
        txt_ItemLevel_SC(Index).Text = Mid$(sBuf, _
                                            InStr(sBuf, "<level>") + 7, _
                                            InStr(sBuf, "</level>") - InStr(sBuf, "<level>") - 7)
    End If
    
    lCtr = 0
    For lCtr = 0 To 4   'loki 2.0 doesn't have 5th slot ' oh yes it does
        If InStr(sBuf, "<slot number=" & sQ & lCtr & sQ) <> 0 Then
            
            sTemp = "<slot number=" & sQ & lCtr & sQ & ">"
            
            sSlotBuf = Mid$(sBuf, _
                            InStr(sBuf, sTemp), _
                            InStr(sBuf, "</slot>") + 7)
                            
            If InStr(sSlotBuf, "toa bonus") <> 0 Or _
                InStr(sSlotBuf, "other bonus") <> 0 Or _
                InStr(sSlotBuf, "cap increase") <> 0 Then
            
                Call LoadLokiCraftSlot(sSlotBuf, lCtr, cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), , txt_GemAmountSC5(Index))
                
            Else
            
                Select Case lCtr
                    Case 0
                        Call LoadLokiCraftSlot(sSlotBuf, lCtr, cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), cmb_GemAmountSC1(Index))
                    Case 1
                        Call LoadLokiCraftSlot(sSlotBuf, lCtr, cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), cmb_GemAmountSC2(Index))
                    Case 2
                        Call LoadLokiCraftSlot(sSlotBuf, lCtr, cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), cmb_GemAmountSC3(Index))
                    Case 3
                        Call LoadLokiCraftSlot(sSlotBuf, lCtr, cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), cmb_GemAmountSC4(Index))
                End Select
                
            End If
            'remove the current slot from the item
            sBuf = Trim(Mid$(sBuf, InStr(sBuf, "</slot>") + 7))

        End If
    Next lCtr

End Sub

Private Sub LoadLokiCraftSlot(sBuf As String, _
                              SlotNum As Long, _
                              GemSelect As ComboBox, _
                              GemEffect As ComboBox, _
                              Optional cmbGemAmount As ComboBox, _
                              Optional txtGemAmount As TextBox)

    Dim sType As String
    Dim sEffect As String
    Dim sAmount As String
    
    Dim sSlotBuf As String
    Dim Quote As String
    
    Dim lIdx As Long
    
    Dim sTemp As String
    
    Quote = Chr$(34)    'one double quote character
    
    If InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote) <> 0 Then
    
        sSlotBuf = Mid$(sBuf, InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote))
        
        If InStr(sSlotBuf, "<type>") <> 0 And InStr(sSlotBuf, "</type>") <> 0 Then
            sType = Mid$(sSlotBuf, _
                        InStr(sSlotBuf, "<type>") + 6, _
                        InStr(sSlotBuf, "</type>") - InStr(sSlotBuf, "<type>") - 6)
        End If
        
        If InStr(sSlotBuf, "<effect>") <> 0 And InStr(sSlotBuf, "</effect>") <> 0 Then
            sEffect = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<effect>") + 8, _
                         InStr(sSlotBuf, "</effect>") - InStr(sSlotBuf, "<effect>") - 8)
        End If
        
        If (Len(sType) <> 0) And (Len(sEffect) <> 0) Then
        
            If LCase$(sType) = "stat" And LCase$(sEffect) = "hits" Then sType = "hits" 'fix for loki 2.0+
            If LCase$(sType) = "stat" And LCase$(sEffect) = "power" Then sType = "power" 'fix for loki 2.0+
            
            lIdx = GetListindexByString(sType, GemSelect)
            If lIdx <> LISTINDEX_NOT_FOUND Then
                GemSelect.ListIndex = lIdx
            
                lIdx = TranslateGemEffectName(sEffect, GemEffect)
                If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
            ElseIf sType = "other bonus" Or sType = "toa bonus" Then
                lIdx = TranslateGemSelectName(sType, GemSelect)
                If lIdx <> LISTINDEX_NOT_FOUND Then
                    GemSelect.ListIndex = lIdx
                    
                    lIdx = TranslateGemEffectName(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                End If
            End If
        End If
        
        If InStr(sSlotBuf, "<amount>") <> 0 And InStr(sSlotBuf, "</amount>") <> 0 Then
            sAmount = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<amount>") + 8, _
                         InStr(sSlotBuf, "</amount>") - InStr(sSlotBuf, "<amount>") - 8)
               
            If Len(sAmount) <> 0 And (Not cmbGemAmount Is Nothing) Then
                lIdx = GetListindexByString(sAmount, cmbGemAmount)
                If lIdx <> LISTINDEX_NOT_FOUND Then cmbGemAmount.ListIndex = lIdx
            ElseIf Len(sAmount) <> 0 And (Not txtGemAmount Is Nothing) Then
                txtGemAmount.Text = STR$(Val(sAmount))
                
            End If
        End If
    
    End If

End Sub

Private Sub LoadLokiDropSlot(sBuf As String, _
                            SlotNum As Long, _
                            GemSelect As ComboBox, _
                            GemEffect As ComboBox, _
                            GemAmount As TextBox)
                            
    Dim sType As String
    Dim sEffect As String
    Dim sAmount As String
    
    Dim sTemp As String
    Dim lIdx As Long
        
    Dim sSlotBuf As String
    Dim Quote As String
    
    'one double quote character
    Quote = Chr$(34)
    
    If InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote) <> 0 Then
        sSlotBuf = Mid$(sBuf, InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote))
    
        If InStr(sSlotBuf, "<type>") <> 0 And InStr(sSlotBuf, "</type>") <> 0 Then
            sType = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<type>") + 6, _
                         InStr(sSlotBuf, "</type>") - InStr(sSlotBuf, "<type>") - 6)
            
            If LCase(sType) <> "unused" Then
                If InStr(sSlotBuf, "<effect>") <> 0 And InStr(sSlotBuf, "</effect>") <> 0 Then
                    
                    sEffect = Mid$(sSlotBuf, _
                                 InStr(sSlotBuf, "<effect>") + 8, _
                                 InStr(sSlotBuf, "</effect>") - InStr(sSlotBuf, "<effect>") - 8)
                        
                    If LCase$(sType) = "stat" And LCase$(sEffect) = "hits" Then sType = "hits" 'fix for loki 2.0+
                    If LCase$(sType) = "stat" And LCase$(sEffect) = "power" Then sType = "power" 'fix for loki 2.0+
                                    
                    If Len(sType) <> 0 Then
                        lIdx = TranslateGemSelectName(sType, GemSelect)
                        If lIdx <> LISTINDEX_NOT_FOUND Then
                            GemSelect.ListIndex = lIdx
                            
                            If Len(sEffect) <> 0 Then
                                    
                                lIdx = TranslateGemEffectName(sEffect, GemEffect)
                                If lIdx <> LISTINDEX_NOT_FOUND Then
                                    GemEffect.ListIndex = lIdx
                                Else
                                
                                    If GemSelect.ListIndex = GetListindexByString("toa bonus", GemSelect) Then
                                        lIdx = GetListindexByString("pve bonus", GemSelect)
                                        If lIdx <> LISTINDEX_NOT_FOUND Then
                                            GemSelect.ListIndex = lIdx
                                            lIdx = TranslateGemEffectName(sEffect, GemEffect)
                                            If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                                        End If
                                    ElseIf GemSelect.ListIndex = GetListindexByString("pve bonus", GemSelect) Then
                                        lIdx = GetListindexByString("toa bonus", GemSelect)
                                        If lIdx <> LISTINDEX_NOT_FOUND Then
                                            GemSelect.ListIndex = lIdx
                                            lIdx = TranslateGemEffectName(sEffect, GemEffect)
                                            If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
                    If InStr(sSlotBuf, "<amount>") <> 0 And InStr(sSlotBuf, "</amount>") <> 0 Then
                    
                    GemAmount.Text = Mid$(sSlotBuf, _
                                          InStr(sSlotBuf, "<amount>") + 8, _
                                          InStr(sSlotBuf, "</amount>") - InStr(sSlotBuf, "<amount>") - 8)
                    End If
            End If
        End If
    End If
    
End Sub

Private Sub LoadLokiDropItem(Index As Integer, sBuffer As String)

    Dim lCtr As Long
    Dim lIdx As Long
    Dim lPosLo As Long
    Dim lPosHi As Long
    
    Dim sQ As String
    Dim sBuf As String
    
    Dim sTemp As String
    
    sBuf = sBuffer
    
    sQ = Chr$(34)
            
    'check to see if its an item from importlokitemplate routine call, if it is, then we convert it to the drop item format (:D)
    If InStr(sBuffer, "<slot name=") <> 0 And InStr(sBuffer, "<scitem>") = 0 Then
        sBuf = vbNullString
        sBuf = "<scitem>"
        
        If InStr(sBuffer, "<item name=") <> 0 Then
            sTemp = ""
            lPosLo = InStr(sBuffer, "<item name=") + 12
            lPosHi = InStr(lPosLo, sBuffer, sQ)
            sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
            sBuf = sBuf & "<itemname>" & sTemp & "</itemname>"
            sTemp = ""
        End If
        
        If InStr(sBuffer, "<quality>") <> 0 Then
            sTemp = ""
            sTemp = Mid$(sBuffer, _
                        InStr(sBuffer, "<quality>") + 9, _
                        InStr(sBuffer, "</quality>") - InStr(sBuffer, "<quality>") - 9)
            sBuf = sBuf & "<itemquality>" & sTemp & "</itemquality>"
            sTemp = ""
        End If
                
        If InStr(sBuffer, "<level>") <> 0 Then
            sTemp = ""
            sTemp = Mid$(sBuffer, _
                        InStr(sBuffer, "<level>") + 7, _
                        InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
            sBuf = sBuf & "<level>" & sTemp & "</level>"
            sTemp = ""
        End If
        
        If InStr(sBuffer, "<armourfactor>") <> 0 Then
            sTemp = ""
            sTemp = Mid$(sBuffer, _
                        InStr(sBuffer, "<armourfactor>") + 14, _
                        InStr(sBuffer, "</armourfactor>") - InStr(sBuffer, "<armourfactor>") - 14)
            sBuf = sBuf & "<afdps>" & sTemp & "</afdps>"
            sTemp = ""
        End If
                        
        If InStr(sBuffer, "<dps>") <> 0 Then
            sTemp = ""
            sTemp = Mid$(sBuffer, _
                        InStr(sBuffer, "<dps>") + 5, _
                        InStr(sBuffer, "</dps>") - InStr(sBuffer, "<dps>") - 5)
            sBuf = sBuf & "<afdps>" & sTemp & "</afdps>"
            sTemp = ""
        End If
        
        lCtr = 0
        While InStr(sBuffer, "<bonus type=") <> 0 And InStr(sBuffer, "</bonus>") <> 0
            
            sBuf = sBuf & "<slot number=" & sQ & lCtr & sQ & ">"
            If InStr(sBuffer, "<bonus type=") <> 0 Then
                sTemp = ""
                lPosLo = InStr(sBuffer, "<bonus type=") + 13
                lPosHi = InStr(lPosLo, sBuffer, sQ)
                sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                
                'translate the bonus types that don't directly translate over
                Select Case (sTemp)
                    Case "statistic"
                        sTemp = "stat"
                        
                    Case "resistance"
                        sTemp = "resist"
                       
                    Case "toa bonus"
                        sTemp = "other bonus"
                        
                    Case "pve bonus"
                        sTemp = "pve"
                End Select
                
                sBuf = sBuf & "<type>" & sTemp & "</type>"
                                
                lPosLo = InStr(lPosHi, sBuffer, "name=") + 6
                lPosHi = InStr(lPosLo, sBuffer, sQ)
                sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                
                sBuf = sBuf & "<effect>" & sTemp & "</effect>"
                
                lPosLo = InStr(lPosHi, sBuffer, ">") + 1
                lPosHi = InStr(sBuffer, "</bonus>")
                sTemp = Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo))
                                
                sBuf = sBuf & "<amount>" & sTemp & "</amount>"
                
                sBuffer = StripTag(sBuffer, "<bonus type=", "</bonus>", 1)
                
                '<BONUSLIST>
                '    <BONUS TYPE="Statistic" NAME="Strength" LOCK="None">0</BONUS>
                '    <BONUS TYPE="Resistance" NAME="Body" LOCK="None">0</BONUS>
                '    <BONUS TYPE="Skill" NAME="Aura Manipulation" LOCK="None">0</BONUS>
                '    <BONUS TYPE="Cap Increase" NAME="Strength" LOCK="None">0</BONUS>
                '    <BONUS TYPE="TOA Bonus" NAME="Armour Factor" LOCK="None">0</BONUS>
                '    <BONUS TYPE="PvE Bonus" NAME="Bladeturn Reinforcement" LOCK="None">0</BONUS>
                '</BONUSLIST>
                
            End If
                
            lCtr = lCtr + 1
                        
            sBuf = sBuf & "</slot>"
        Wend
        sBuf = sBuf & "</scitem>"
    End If
    
    
    If InStr(sBuf, "<itemname>") <> 0 And InStr(sBuf, "</itemname>") <> 0 Then
        txt_ItemName_DP(Index).Text = InitCap(Mid$(sBuf, _
                                           InStr(sBuf, "<itemname>") + 10, _
                                           InStr(sBuf, "</itemname>") - InStr(sBuf, "<itemname>") - 10))
    End If
    
    If InStr(sBuf, "<itemquality>") <> 0 And InStr(sBuf, "</itemquality>") <> 0 Then
        txt_ItemQuality(Index).Text = Mid$(sBuf, _
                                           InStr(sBuf, "<itemquality>") + 13, _
                                           InStr(sBuf, "</itemquality>") - InStr(sBuf, "<itemquality>") - 13)
    End If
    
    If InStr(sBuf, "<level>") <> 0 And InStr(sBuf, "</level>") <> 0 Then
        txt_ItemLevel_DP(Index).Text = Mid$(sBuf, _
                                            InStr(sBuf, "<level>") + 7, _
                                            InStr(sBuf, "</level>") - InStr(sBuf, "<level>") - 7)
    End If
    
    If InStr(sBuf, "<afdps>") <> 0 And InStr(sBuf, "</afdps>") <> 0 Then
        txt_AFDPS_DP(Index).Text = Mid$(sBuf, _
                                        InStr(sBuf, "<afdps>") + 7, _
                                        InStr(sBuf, "</afdps>") - InStr(sBuf, "<afdps>") - 7)
    End If
   
    lCtr = 0
    For lCtr = 0 To 9
        If InStr(sBuf, "<slot number=" & sQ & lCtr & sQ) <> 0 Then
                
            Select Case lCtr
                Case 0
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index))
                Case 1
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index))
                Case 2
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index))
                Case 3
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index))
                Case 4
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index))
                Case 5
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index))
                Case 6
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index))
                Case 7
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index))
                Case 8
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index))
                Case 9
                    Call LoadLokiDropSlot(sBuf, lCtr, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index))
            End Select
            
            'remove the current slot from the item
            sBuf = Mid$(sBuf, InStr(sBuf, "</slot>") + 7)
                                    
        End If
        
    Next lCtr
    
End Sub

Private Sub LoadEthinargDropSlot(sBuf As String, _
                                 SlotNum As Long, _
                                 GemSelect As ComboBox, _
                                 GemEffect As ComboBox, _
                                 GemAmount As TextBox)
                                 
    Dim sTemp As String
    Dim lIdx As Long
    
    Dim sSlotBuf As String
    Dim Quote As String
    
    Quote = Chr$(34)
    
    If InStr(sBuf, "<slot" & SlotNum & ">") <> 0 Then
        sSlotBuf = Trim(Mid$(sBuf, _
                        InStr(sBuf, "<slot" & SlotNum & ">"), _
                        InStr(sBuf, "</slot" & SlotNum & ">") + Len("</slot" & SlotNum & ">") - InStr(sBuf, "<slot" & SlotNum & ">")))
    
        If InStr(sSlotBuf, "<type>") <> 0 And InStr(sSlotBuf, "</type>") <> 0 Then
            sTemp = Mid$(sSlotBuf, _
                            InStr(sSlotBuf, "<type>") + 6, _
                            InStr(sSlotBuf, "</type>") - InStr(sSlotBuf, "<type>") - 6)
            If Len(sTemp) <> 0 Then
                lIdx = TranslateGemSelectName(sTemp, GemSelect)
                If lIdx <> LISTINDEX_NOT_FOUND Then
                    GemSelect.ListIndex = lIdx
                Else
                    WriteError ("Load Ethinarg: Type Not Matched -" & sTemp & vbCrLf)
                End If
            End If
        End If
        
        If InStr(sSlotBuf, "<effect>") <> 0 And InStr(sSlotBuf, "</effect>") <> 0 Then
            sTemp = Mid$(sSlotBuf, _
                            InStr(sSlotBuf, "<effect>") + 8, _
                            InStr(sSlotBuf, "</effect>") - InStr(sSlotBuf, "<effect>") - 8)
            If Len(sTemp) <> 0 Then
                lIdx = TranslateGemEffectName(sTemp, GemEffect)
                If lIdx <> LISTINDEX_NOT_FOUND Then
                    GemEffect.ListIndex = lIdx
                Else
                    WriteError ("Load Ethinarg: Effect Not Matched -" & sTemp & vbCrLf)
                End If
            End If
        End If
        
        If InStr(sSlotBuf, "<amount>") <> 0 And InStr(sSlotBuf, "</amount>") <> 0 Then
            sTemp = Mid$(sSlotBuf, _
                            InStr(sSlotBuf, "<amount>") + 8, _
                            InStr(sSlotBuf, "</amount>") - InStr(sSlotBuf, "<amount>") - 8)
            If Len(sTemp) <> 0 Then GemAmount.Text = Val(Trim(sTemp))
        End If
            
    End If

End Sub

Private Sub LoadEthinargDropItem(Index As Integer, sBuffer As String)

    Dim lCtr As Long
    Dim lIdx As Long
    
    Dim sQ As String
    Dim sBuf As String
    
    Dim sTemp As String
    
    sQ = Chr$(34)
    
    If InStr(sBuffer, "<itemname>") <> 0 And InStr(sBuffer, "</itemname>") <> 0 Then
        txt_ItemName_DP(Index).Text = InitCap(Mid$(sBuffer, _
                                           InStr(sBuffer, "<itemname>") + 10, _
                                           InStr(sBuffer, "</itemname>") - InStr(sBuffer, "<itemname>") - 10))
    End If
    
    If InStr(sBuffer, "<itemquality>") <> 0 And InStr(sBuffer, "</itemquality>") <> 0 Then
        txt_ItemQuality(Index).Text = Mid$(sBuffer, _
                                           InStr(sBuffer, "<itemquality>") + 13, _
                                           InStr(sBuffer, "</itemquality>") - InStr(sBuffer, "<itemquality>") - 13)
    End If
    
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        txt_ItemLevel_DP(Index).Text = Mid$(sBuffer, _
                                            InStr(sBuffer, "<level>") + 7, _
                                            InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
    End If
    
    If InStr(sBuffer, "<afdps>") <> 0 And InStr(sBuffer, "</afdps>") <> 0 Then
        txt_AFDPS_DP(Index).Text = Mid$(sBuffer, _
                                        InStr(sBuffer, "<afdps>") + 7, _
                                        InStr(sBuffer, "</afdps>") - InStr(sBuffer, "<afdps>") - 7)
    End If
    
    If InStr(sBuffer, "<speed>") <> 0 And InStr(sBuffer, "</speed>") <> 0 Then
        txt_ItemSPD_DP(Index).Text = Mid$(sBuffer, _
                                          InStr(sBuffer, "<speed>") + 7, _
                                          InStr(sBuffer, "</speed>") - InStr(sBuffer, "<speed>") - 7)
    End If

    If InStr(sBuffer, "<realm>") <> 0 And InStr(sBuffer, "</realm>") <> 0 Then
        sTemp = Mid$(sBuffer, _
                     InStr(sBuffer, "<realm>") + 7, _
                     InStr(sBuffer, "</realm>") - InStr(sBuffer, "<realm>") - 7)
                     
        Select Case LCase$(sTemp)
            Case "albion"
                opt_Alb(Index).Value = True
            Case "hibernia"
                opt_Hib(Index).Value = True
            Case "midgard"
                opt_Mid(Index).Value = True
        End Select
        
    End If
    
    lCtr = 0
    For lCtr = 0 To 11
        If InStr(sBuffer, "<slot" & lCtr & ">") <> 0 Then
                
            Select Case lCtr
                Case 0
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index))
                Case 1
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index))
                Case 2
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index))
                Case 3
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index))
                Case 4
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index))
                Case 5
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index))
                Case 6
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index))
                Case 7
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index))
                Case 8
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index))
                Case 9
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index))
                Case 10
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index))
                Case 11
                    Call LoadEthinargDropSlot(sBuffer, lCtr, cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index))
            End Select
            
            'remove the current slot from the item
            sBuffer = Mid$(sBuffer, InStr(sBuffer, "</slot" & lCtr & ">") + Len("</slot" & lCtr & ">"))
                                    
        End If
        
    Next lCtr
    
End Sub

Private Sub LoadKortDropSlot(sBuf As String, _
                             SlotNum As Long, _
                             GemSelect As ComboBox, _
                             GemEffect As ComboBox, _
                             GemAmount As TextBox)
'working as intended 11/17/06

    Dim sType As String
    Dim sEffect As String
    Dim sAmount As String
    
    Dim sTemp As String
    Dim lIdx As Long
    
    
    Dim sSlotBuf As String
    Dim Quote As String
    
    'one double quote character
    Quote = Chr$(34)
    
    If InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote) <> 0 Then
        sSlotBuf = Mid$(sBuf, InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote))
    
        If InStr(sSlotBuf, "<type>") <> 0 And InStr(sSlotBuf, "</type>") <> 0 Then
            sType = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<type>") + 6, _
                         InStr(sSlotBuf, "</type>") - InStr(sSlotBuf, "<type>") - 6)
        End If
            
        If InStr(sSlotBuf, "<effect>") <> 0 And InStr(sSlotBuf, "</effect>") <> 0 Then
            
            sEffect = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<effect>") + 8, _
                         InStr(sSlotBuf, "</effect>") - InStr(sSlotBuf, "<effect>") - 8)
            
            If LCase$(sType) = "stat" And LCase$(sEffect) = "hits" Then sType = "hits" 'fix for korts 1.92+
            If LCase$(sType) = "stat" And LCase$(sEffect) = "power" Then sType = "power" 'fix for korts 1.92+
            
            If Len(sType) <> 0 Then
                lIdx = TranslateGemSelectName(sType, GemSelect)
                If lIdx <> LISTINDEX_NOT_FOUND Then GemSelect.ListIndex = lIdx
            End If
        
            If Len(sEffect) <> 0 Then
                If GemSelect.ListIndex > 0 And GemSelect.ListIndex <= 6 Then
                
                    sEffect = RemoveString(sEffect, "weapon ")  'safety check for "all melee weapon skills" yes the space has to be there
                    
                    lIdx = GetListindexByString(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                
                ElseIf GemSelect.ListIndex = GetListindexByString("cap increase", GemSelect) Then
                    
                    lIdx = TranslateKortCap(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                    
                ElseIf GemSelect.ListIndex = GetListindexByString("toa bonus", GemSelect) Then
                    
                    lIdx = TranslateKortToa(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                
                ElseIf GemSelect.ListIndex = GetListindexByString("pve bonus", GemSelect) Then
                
                    lIdx = TranslateKortPve(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                    
                ElseIf GemSelect.ListIndex = GetListindexByString("charged effect", GemSelect) Then
                    
                    lIdx = TranslateKortProc(sEffect, GemEffect)
                    If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
                End If
            End If
        End If
        
        If InStr(sSlotBuf, "<amount>") <> 0 And InStr(sSlotBuf, "</amount>") <> 0 Then
            
            GemAmount.Text = Mid$(sSlotBuf, _
                                  InStr(sSlotBuf, "<amount>") + 8, _
                                  InStr(sSlotBuf, "</amount>") - InStr(sSlotBuf, "<amount>") - 8)
            If GemAmount.Text = 0 Then GemAmount.Text = vbNullString
            
        End If
        
    End If
                
End Sub

Private Sub LoadKortCraftItem(Index As Integer, sBuffer As String)

    Dim lCtr As Long
    Dim lIdx As Long
    
    Dim sQ As String
    Dim sBuf As String
    
    Dim sTemp As String
    
    sQ = Chr$(34)
    
    If InStr(sBuffer, "<itemquality>") <> 0 And InStr(sBuffer, "</itemquality>") <> 0 Then
    
        lIdx = GetListindexByString(Mid$(sBuffer, _
                                    InStr(sBuffer, "<itemquality>") + 13, _
                                    InStr(sBuffer, "</itemquality>") - InStr(sBuffer, "<itemquality>") - 13), cmb_ItemQuality(Index))
        If lIdx <> LISTINDEX_NOT_FOUND Then cmb_ItemQuality(Index).ListIndex = lIdx
        
    End If
    
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        txt_ItemLevel_SC(Index).Text = Mid$(sBuffer, _
                                            InStr(sBuffer, "<level>") + 7, _
                                            InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
    End If
    
    
    'fix for new kort item
    If InStr(sBuffer, "<playeritem>") <> 0 And InStr(sBuffer, "</playeritem>") <> 0 Then
        sBuffer = Mid$(sBuffer, _
                        InStr(sBuffer, "<playeritem>") + 12, _
                        InStr(sBuffer, "</playeritem>") - InStr(sBuffer, "<playeritem>") - 12)
    End If
    
    lCtr = 0
    For lCtr = 0 To 5
        If InStr(sBuffer, "<slot number=" & sQ & lCtr & sQ) <> 0 Then
                
            Select Case lCtr
                Case 0
                    Call LoadKortCraftSlot(sBuffer, lCtr, cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), cmb_GemAmountSC1(Index))
                Case 1
                    Call LoadKortCraftSlot(sBuffer, lCtr, cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), cmb_GemAmountSC2(Index))
                Case 2
                    Call LoadKortCraftSlot(sBuffer, lCtr, cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), cmb_GemAmountSC3(Index))
                Case 3
                    Call LoadKortCraftSlot(sBuffer, lCtr, cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), cmb_GemAmountSC4(Index))
                Case 4
                    Call LoadKortCraftSlot(sBuffer, lCtr, cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), , txt_GemAmountSC5(Index))
            End Select
            
            'remove the current slot from the item
            sBuffer = Trim(Mid$(sBuffer, InStr(sBuffer, "</slot>") + 7))

        End If
    Next lCtr
    
End Sub

Private Sub LoadKortDropItem(Index As Integer, sBuffer As String)
'working as intended 11/17/06

    Dim lCtr As Long
    Dim lIdx As Long
    
    Dim sQ As String
    Dim sBuf As String
    
    Dim sTemp As String
    
    sQ = Chr$(34)
        
    If InStr(sBuffer, "<itemname>") <> 0 And InStr(sBuffer, "</itemname>") <> 0 Then
        txt_ItemName_DP(Index).Text = InitCap(Mid$(sBuffer, _
                                           InStr(sBuffer, "<itemname>") + 10, _
                                           InStr(sBuffer, "</itemname>") - InStr(sBuffer, "<itemname>") - 10))
    End If
    
    If InStr(sBuffer, "<itemquality>") <> 0 And InStr(sBuffer, "</itemquality>") <> 0 Then
        txt_ItemQuality(Index).Text = Val(Mid$(sBuffer, _
                                           InStr(sBuffer, "<itemquality>") + 13, _
                                           InStr(sBuffer, "</itemquality>") - InStr(sBuffer, "<itemquality>") - 13))
    End If
    
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        txt_ItemLevel_DP(Index).Text = Val(Mid$(sBuffer, _
                                            InStr(sBuffer, "<level>") + 7, _
                                            InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7))
    End If
    
    If InStr(sBuffer, "<afdps>") <> 0 And InStr(sBuffer, "</afdps>") <> 0 Then
        txt_AFDPS_DP(Index).Text = Val(Mid$(sBuffer, _
                                        InStr(sBuffer, "<afdps>") + 7, _
                                        InStr(sBuffer, "</afdps>") - InStr(sBuffer, "<afdps>") - 7))
    End If
    
    If InStr(sBuffer, "<speed>") <> 0 And InStr(sBuffer, "</speed>") <> 0 Then
        txt_ItemSPD_DP(Index).Text = Val(Mid$(sBuffer, _
                                          InStr(sBuffer, "<speed>") + 7, _
                                          InStr(sBuffer, "</speed>") - InStr(sBuffer, "<speed>") - 7))
    End If

    If InStr(sBuffer, "<realm>") <> 0 And InStr(sBuffer, "</realm>") <> 0 Then
        sTemp = Mid$(sBuffer, _
                     InStr(sBuffer, "<realm>") + 7, _
                     InStr(sBuffer, "</realm>") - InStr(sBuffer, "<realm>") - 7)
                     
        Select Case LCase$(sTemp)
            Case "albion"
                opt_Alb(Index).Value = True
            Case "hibernia"
                opt_Hib(Index).Value = True
            Case "midgard"
                opt_Mid(Index).Value = True
            Case "all"
                opt_All(Index).Value = True
        End Select
        
    End If
    
    'fix for new kort item
    If InStr(sBuffer, "<dropitem>") <> 0 And InStr(sBuffer, "</dropitem>") <> 0 Then
        sBuffer = Mid$(sBuffer, _
                        InStr(sBuffer, "<dropitem>") + 10, _
                        InStr(sBuffer, "</dropitem>") - InStr(sBuffer, "<dropitem>") - 10)
    End If
    
    lCtr = 0
    For lCtr = 0 To 11
        If InStr(sBuffer, "<slot number=" & sQ & lCtr & sQ) <> 0 Then
                
            Select Case lCtr
                Case 0
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index))
                Case 1
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index))
                Case 2
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index))
                Case 3
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index))
                Case 4
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index))
                Case 5
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index))
                Case 6
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index))
                Case 7
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index))
                Case 8
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index))
                Case 9
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index))
                Case 10
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index))
                Case 11
                    Call LoadKortDropSlot(sBuffer, lCtr, cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index))
            End Select
            
            'remove the current slot from the item
            sBuffer = Mid$(sBuffer, InStr(sBuffer, "</slot>") + 7)
                                    
        End If
        
    Next lCtr
    
End Sub

Private Sub LoadKortCraftSlot(sBuf As String, _
                              SlotNum As Long, _
                              GemSelect As ComboBox, _
                              GemEffect As ComboBox, _
                              Optional cmbGemAmount As ComboBox, _
                              Optional txtGemAmount As TextBox)

    Dim sType As String
    Dim sEffect As String
    Dim sAmount As String
    
    Dim sSlotBuf As String
    Dim Quote As String
    
    Dim lIdx As Long
    
    Dim sTemp As String
    
    Quote = Chr$(34)    'one double quote character
    
    If InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote) <> 0 Then
    
        sSlotBuf = Mid$(sBuf, InStr(sBuf, "<slot number=" & Quote & SlotNum & Quote))
        
        If InStr(sSlotBuf, "<type>") <> 0 And InStr(sSlotBuf, "</type>") <> 0 Then
            sType = Mid$(sSlotBuf, _
                        InStr(sSlotBuf, "<type>") + 6, _
                        InStr(sSlotBuf, "</type>") - InStr(sSlotBuf, "<type>") - 6)
        End If
        
        If InStr(sSlotBuf, "<effect>") <> 0 And InStr(sSlotBuf, "</effect>") <> 0 Then
            sEffect = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<effect>") + 8, _
                         InStr(sSlotBuf, "</effect>") - InStr(sSlotBuf, "<effect>") - 8)
        End If
        
        If (Len(sType) <> 0) And (Len(sEffect) <> 0) Then
        
            If LCase$(sType) = "stat" And LCase$(sEffect) = "hits" Then sType = "hits" 'fix for korts 1.92+
            If LCase$(sType) = "stat" And LCase$(sEffect) = "power" Then sType = "power" 'fix for korts 1.92+
            
            sEffect = RemoveString(sEffect, "weapon ")  'fix for korts "all melee weapon skill"
            
            lIdx = GetListindexByString(sType, GemSelect)
            If lIdx <> LISTINDEX_NOT_FOUND Then GemSelect.ListIndex = lIdx
            
            lIdx = GetListindexByString(sEffect, GemEffect)
            If lIdx <> LISTINDEX_NOT_FOUND Then GemEffect.ListIndex = lIdx
            
        End If
        
        If InStr(sSlotBuf, "<amount>") <> 0 And InStr(sSlotBuf, "</amount>") <> 0 Then
            sAmount = Mid$(sSlotBuf, _
                         InStr(sSlotBuf, "<amount>") + 8, _
                         InStr(sSlotBuf, "</amount>") - InStr(sSlotBuf, "<amount>") - 8)
        End If
        
        If Len(sAmount) <> 0 Then
            If SlotNum = 4 Then
                If Not txtGemAmount Is Nothing Then txtGemAmount.Text = sAmount
            Else
                If Not cmbGemAmount Is Nothing Then
                    lIdx = GetListindexByString(sAmount, cmbGemAmount)
                    If lIdx <> LISTINDEX_NOT_FOUND Then cmbGemAmount.ListIndex = lIdx
                End If
            End If
        End If
        
    End If
    
End Sub

Private Sub ImportLokiTemplate(sBuffer As String)

    Dim sItem As String         'item buffer
    
    Dim sSlotBuf As String
    
    Dim lPosLo As Long
    Dim lPosHi As Long
    
    Dim lIdx As Long
    Dim lRet As Long
    
    Dim sLevel As String
    Dim sRealm As String
    Dim sRace As String
    Dim sClass As String
    
    Dim sActive As String
    Dim sEquip As String
    Dim sTemp As String
    Dim sTemp1 As String
    Dim sTemp2 As String
    Dim sQ As String
    
    Dim lLoc As Integer
    
    sQ = Chr$(34)
    
    'extract the character name
    '<CHARACTER NAME="Loto" LEVEL="50" REALM="Hibernia" RACE="Elf" CLASS="Eldritch">
    If InStr(sBuffer, "<character name=") <> 0 Then
        lPosLo = InStr(sBuffer, "<character name=") + 17
        lPosHi = InStr(lPosLo, sBuffer, sQ)
        
        txt_CharacterName.Text = InitCap(Trim$(Mid$(sBuffer, lPosLo, lPosHi - lPosLo)))
        
        'lets get the level and store it for later
        lPosLo = InStr(lPosHi + 1, sBuffer, "level=") + 7
        lPosHi = InStr(lPosLo, sBuffer, sQ)
        sLevel = STR$(Val(Mid$(sBuffer, lPosLo, lPosHi - lPosLo)))
        
        'get the realm info and set it
        lPosLo = InStr(lPosHi + 1, sBuffer, "realm=") + 7
        lPosHi = InStr(lPosLo, sBuffer, sQ)
        sRealm = Mid$(sBuffer, lPosLo, lPosHi - lPosLo)
        If Len(sRealm) <> 0 Then
            lIdx = GetListindexByString(sRealm, cmb_Realm)
            If lIdx <> LISTINDEX_NOT_FOUND Then
                cmb_Realm.ListIndex = lIdx
            Else
                MsgBox "Template cannot be loaded! Failed to match the character's realm", vbCritical
                Exit Sub
            End If
            
            'now get the race and hold onto it
            lPosLo = InStr(lPosHi + 1, sBuffer, "race=") + 6
            lPosHi = InStr(lPosLo, sBuffer, sQ)
            sRace = Mid$(sBuffer, lPosLo, lPosHi - lPosLo)
            If Len(sRace) <> 0 Then
                
                'check for the Graoch Deifrang Korazh
                If LCase$(sTemp) = "graoch" Or _
                   LCase$(sTemp) = "deifrang" Or _
                   LCase$(sTemp) = "korazh" Then sRace = "minotaur"
                               
                'now get the class
                lPosLo = InStr(lPosHi + 1, sBuffer, "class=") + 7
                lPosHi = InStr(lPosLo, sBuffer, sQ)
                sClass = Mid$(sBuffer, lPosLo, lPosHi - lPosLo)
                If Len(sClass) <> 0 Then
                
                    'now lets set the gender stuff since we have a race and class to go on
                    If LCase$(sClass) = "bainshee" Or LCase$(sClass) = "valkyrie" Then
                        Call opt_Gender_Click(GENDER_FEMALE)
                        opt_Gender(GENDER_FEMALE).Value = True
                    Else
                        Call opt_Gender_Click(GENDER_MALE)
                        opt_Gender(GENDER_MALE).Value = True
                    End If
                    
                    lIdx = GetListindexByString(sRace, cmb_Race)
                    If lIdx <> LISTINDEX_NOT_FOUND Then
                        If lIdx = cmb_Race.ListIndex Then
                            Call cmb_Race_Click
                        Else
                            cmb_Race.ListIndex = lIdx
                        End If
                    Else
                        MsgBox "Template cannot be loaded! Failed to match the character's race", vbCritical
                        Exit Sub
                    End If
                    
                    lIdx = GetListindexByString(sClass, cmb_Class)
                    If lIdx <> LISTINDEX_NOT_FOUND Then
                        If lIdx = cmb_Class.ListIndex Then
                            Call cmb_Class_Click
                        Else
                            cmb_Class.ListIndex = lIdx
                        End If
                    Else
                        MsgBox "Template cannot be loaded! Failed to match the character's class", vbCritical
                        Exit Sub
                    End If
                    
                Else
                    MsgBox "Template cannot be loaded! Class is not defined", vbCritical
                    Exit Sub
                End If
            Else
                MsgBox "Template cannot be loaded! Race is not defined", vbCritical
                Exit Sub
            End If
        Else
            MsgBox "Template cannot be loaded! Realm is not defined", vbCritical
            Exit Sub
        End If
        
        'we've made it thru getting the character set up, now lets do the items
        'we strip off everything preceding the <SLOTLIST> tag
        sBuffer = Mid$(sBuffer, InStr(sBuffer, "<slotlist>"))
        
        While InStr(sBuffer, "<slot name=") <> 0
            
            DoEvents
            'we need to first strip out the <equiplist> 
            'and strip a couple others just because
            
            sBuffer = StripTag(sBuffer, "<equiplist>", "</equiplist>")
            sBuffer = StripTag(sBuffer, "<undesirables>", "</undesirables>")
            sBuffer = StripTag(sBuffer, "<classlist>", "</classlist>")
            
            'extract the item
            '------------------------------------------------------------------------
            lPosLo = InStr(sBuffer, "<slot name=")
            lPosHi = InStr(lPosLo, sBuffer, "</slot>") + 7
            
            sItem = Mid$(sBuffer, lPosLo, lPosHi - lPosLo)
            sBuffer = Mid$(sBuffer, lPosHi)
            '------------------------------------------------------------------------
            
            'get the slot location name and translate it to the correct location index
            '------------------------------------------------------------------------
            lPosLo = InStr(sItem, "<slot name=") + 12
            lPosHi = InStr(lPosLo, sItem, sQ)
        
            sTemp = Trim$(Mid$(sItem, lPosLo, lPosHi - lPosLo))
            lLoc = TranslateLocationName(sTemp)
            '------------------------------------------------------------------------
            
            'and we're left with something that looks like this
            
            '<SLOT NAME="Chest">

            '    <ITEMLIST>
            '        <ITEM NAME="">
            '            <EQUIPPED>true</EQUIPPED>
            '            <REALM>All</REALM>
            '            <ORIGIN>Artifact</ORIGIN>
            '            <LEVEL>51</LEVEL>
            '            <QUALITY>99</QUALITY>
            '            <ITEM_BONUS>0</ITEM_BONUS>


            '            <SOURCE>LOKI</SOURCE>
            '            <ARMOURTYPE>Cloth</ARMOURTYPE>
            '            <ARMOURFACTOR>0</ARMOURFACTOR>
            '            <IS_UNIQUE>false</IS_UNIQUE>
            '            <ORACLE_IGNORE>false</ORACLE_IGNORE>
            '            <USER_VALUE>0</USER_VALUE>
            '            <VARIANT></VARIANT>
            '            <ASSOCIATE PARENT="false"></ASSOCIATE>
            '            <BONUSLIST>
            '                <BONUS TYPE="TOA Bonus" NAME="Armour Factor" LOCK="None">0</BONUS>
            '            </BONUSLIST>
            '        </ITEM>
            '    </ITEMLIST>
            '</SLOT>
                        
            sActive = ""
            If InStr(sItem, "<origin>") <> 0 And InStr(sItem, "</origin>") <> 0 Then
                sActive = Mid$(sItem, _
                                InStr(sItem, "<origin>") + 8, _
                                InStr(sItem, "</origin>") - InStr(sItem, "<origin>") - 8)
                            
                If sActive = "artifact" Then sActive = "drop"
                If sActive = "quest" Then sActive = "drop"
            End If
                        
            If InStr(sItem, "<equipped>") <> 0 And InStr(sItem, "</equipped>") <> 0 Then
                'get the equipped status (true/false)
                sEquip = Mid$(sItem, _
                         InStr(sItem, "<equipped>") + 10, _
                         InStr(sItem, "</equipped>") - InStr(sItem, "<equipped>") - 10)
            End If
            
                   'determine which state the item is in so we can load the correct location
            If LCase$(sActive) = "drop" Then
            
                If lLoc <> WS_DOLL_GEM And _
                    lLoc <> WS_DOLL_RRING And _
                    lLoc <> WS_DOLL_LRING And _
                    lLoc <> WS_DOLL_RWRIST And _
                    lLoc <> WS_DOLL_LWRIST And _
                    lLoc <> WS_DOLL_WAIST And _
                    lLoc <> WS_DOLL_CLOAK And _
                    lLoc <> WS_DOLL_MYTHICAL And _
                    lLoc <> WS_DOLL_NECK Then
    
                    opt_Drop(lLoc).Value = True
                End If
                
                'set the equip flag on the form
                If LCase$(sEquip) = "true" Then
                    chk_Equip_DP(lLoc).Value = vbChecked
                Else
                    chk_Equip_DP(lLoc).Value = vbUnchecked
                End If
                
                Call LoadLokiDropItem(lLoc, sItem)
            
        'so it's not a drop here we go
        ElseIf LCase$(sActive) = "crafted" Then
            
            'set the equipped flag on the form
            If LCase$(sEquip) = "true" Then
                chk_Equip_SC(lLoc).Value = vbChecked
            Else
                chk_Equip_SC(lLoc).Value = vbUnchecked
            End If
            
            Call LoadLokiCraftItem(lLoc, sItem, True)
            
        End If
            
        Wend
    Else
        MsgBox "Not a valid LOKI template!", vbCritical
    End If
    
End Sub

Private Sub ImportKortsTemplate(sBuffer As String)
    
    Dim sItem As String         'item buffer
    
    Dim sSlotBuf As String
    
    Dim lIdx As Long
    Dim lRet As Long
    
    Dim sActive As String
    Dim sEquip As String
    Dim sTemp As String
    
    Dim sRace As String
    Dim sClass As String
    
    Dim lLoc As Integer
    
    'extract character info
    If InStr(sBuffer, "<name>") <> 0 And InStr(sBuffer, "</name>") <> 0 Then
        txt_CharacterName.Text = InitCap(Trim$(Mid$(sBuffer, InStr(sBuffer, "<name>") + 6, _
                                                    InStr(sBuffer, "</name>") - InStr(sBuffer, "<name>") - 6)))
    End If
    
    If InStr(sBuffer, "<realm>") <> 0 And InStr(sBuffer, "</realm>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<realm>") + 7, _
                                        InStr(sBuffer, "</realm>") - InStr(sBuffer, "<realm>") - 7)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_Realm)
            If lIdx <> LISTINDEX_NOT_FOUND Then
                If lIdx = cmb_Realm.ListIndex Then
                    Call cmb_Realm_Click
                Else
                    cmb_Realm.ListIndex = lIdx
                End If
            Else
                MsgBox "Template cannot be loaded! Failed to match character's realm", vbCritical
                Exit Sub
            End If
        End If
    End If

    'grab the race type first and save it for later
    If InStr(sBuffer, "<race>") <> 0 And InStr(sBuffer, "</race>") <> 0 Then
        sTemp = Mid$(sBuffer, _
                     InStr(sBuffer, "<race>") + 6, _
                     InStr(sBuffer, "</race>") - InStr(sBuffer, "<race>") - 6)
        If Len(sTemp) <> 0 Then
            'check for the Graoch Deifrang Korazh
            If LCase$(sTemp) = "graoch" Or _
               LCase$(sTemp) = "deifrang" Or _
               LCase$(sTemp) = "korazh" Then sTemp = "minotaur" 
               
            sRace = LCase$(sTemp)
        End If
    End If
    
    'now grab the class and hold on to it
    If InStr(sBuffer, "<class>") <> 0 And InStr(sBuffer, "</class>") <> 0 Then
        sTemp = Mid$(sBuffer, _
                     InStr(sBuffer, "<class>") + 7, _
                     InStr(sBuffer, "</class>") - InStr(sBuffer, "<class>") - 7)
        If Len(sTemp) <> 0 Then
            sClass = LCase$(sTemp)
        End If
    End If
    
    'set the gender before we load up the race/class combo
    'the default behavior will be to set it to male if the class is not a valkyrie or bainshee
    'this will also have the side effect of catching the minotaur constraint as well
    If sClass = "bainshee" Or sClass = "valkyrie" Then
        Call opt_Gender_Click(GENDER_FEMALE)
        opt_Gender(GENDER_FEMALE).Value = True
    Else
        Call opt_Gender_Click(GENDER_MALE)
        opt_Gender(GENDER_MALE).Value = True
    End If
    
    If Len(sRace) <> 0 Then
        lIdx = GetListindexByString(sRace, cmb_Race)
        If lIdx <> LISTINDEX_NOT_FOUND Then
            If lIdx = cmb_Race.ListIndex Then
                Call cmb_Race_Click
            Else
                cmb_Race.ListIndex = lIdx
            End If
        Else
            MsgBox "Template cannot be loaded! Failed to match the character's race", vbCritical
            Exit Sub
        End If
    
        If Len(sClass) <> 0 Then
            lIdx = GetListindexByString(sClass, cmb_Class)
            If lIdx <> LISTINDEX_NOT_FOUND Then
                If lIdx = cmb_Class.ListIndex Then
                    Call cmb_Class_Click
                Else
                    cmb_Class.ListIndex = lIdx
                End If
            Else
                MsgBox "Template cannot be loaded! Failed to match the character's class", vbCritical
                Exit Sub
            End If
        Else
            MsgBox "Template cannot be loaded! Class is not defined", vbCritical
            Exit Sub
        End If
    Else
        MsgBox "Template cannot be loaded! Race is not defined", vbCritical
        Exit Sub
    End If
      
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        sTemp = Mid$(sBuffer, _
                        InStr(sBuffer, "<level>") + 7, _
                        InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
        If Len(sTemp) <> 0 Then
            txt_Level.Text = sTemp
        Else
            txt_Level.Text = "50"
        End If
    End If

    'strip off character information, we're done with it
    If InStr(sBuffer, "<scitem>") Then sBuffer = Mid$(sBuffer, InStr(sBuffer, "<scitem>"))

    While InStr(sBuffer, "<scitem>") <> 0

        'do queued system events so things refresh nicely
        DoEvents
        'cut out a buffer to use from <scitem>...</scitem> (inclusive of the tags)
        sItem = Trim$(Mid$(sBuffer, _
                  InStr(sBuffer, "<scitem>"), _
                  InStr(sBuffer, "</scitem>") + 9))
        
        'refresh the import text without the buffer we just cut out above
        sBuffer = Trim$(Mid$(sBuffer, InStr(sBuffer, "</scitem>") + 9))
        
        'get the active state craft/drop
        If InStr(sItem, "<activestate>") <> 0 And InStr(sItem, "</activestate>") <> 0 Then
            sActive = Mid$(sItem, _
                      InStr(sItem, "<activestate>") + 13, _
                      InStr(sItem, "</activestate>") - InStr(sItem, "<activestate>") - 13)
        End If
        
        If InStr(sItem, "<equipped>") <> 0 And InStr(sItem, "</equipped>") <> 0 Then
            'get the equipped status
            sEquip = Mid$(sItem, _
                     InStr(sItem, "<equipped>") + 10, _
                     InStr(sItem, "</equipped>") - InStr(sItem, "<equipped>") - 10)
        End If
        
        'if it's equipped then let's load it up!
        If sEquip = 1 Then
            'get the location name from the file and translate it to our index system
            If InStr(sItem, "<location>") <> 0 And InStr(sItem, "</location>") <> 0 Then
                lLoc = TranslateLocationName(Mid$(sItem, _
                                         InStr(sItem, "<location>") + 10, _
                                         InStr(sItem, "</location>") - InStr(sItem, "<location>") - 10))
            End If
                            
            'determine which state the item is in so we can load the correct location
            If LCase$(sActive) = "drop" Then
                
                If lLoc <> WS_DOLL_GEM And _
                   lLoc <> WS_DOLL_RRING And _
                   lLoc <> WS_DOLL_LRING And _
                   lLoc <> WS_DOLL_RWRIST And _
                   lLoc <> WS_DOLL_LWRIST And _
                   lLoc <> WS_DOLL_WAIST And _
                   lLoc <> WS_DOLL_CLOAK And _
                   lLoc <> WS_DOLL_MYTHICAL And _
                   lLoc <> WS_DOLL_NECK Then
    
                    opt_Drop(lLoc).Value = True
                End If
                
                'set the equip flag on the form
                If Val(sEquip) = vbChecked Then
                    chk_Equip_DP(lLoc).Value = vbChecked
                Else
                    chk_Equip_DP(lLoc).Value = vbUnchecked
                End If
                
                Call LoadKortDropItem(lLoc, sItem)
                
            'so it's not a drop here we go
            ElseIf LCase$(sActive) = "player" Then
                
                'set the equipped flag on the form
                If Val(sEquip) = 1 Then
                    chk_Equip_SC(lLoc).Value = vbChecked
                Else
                    chk_Equip_SC(lLoc).Value = vbUnchecked
                End If
                
                Call LoadKortCraftItem(lLoc, sItem)
                
            End If
        End If
    Wend
End Sub

Private Sub mnuImport_Click()

    Dim hFile As Long
    
    Dim sBuf As String * 1000   '1000 byte chunk to read in korts xml (ugh)
    Dim sItem As String         'item buffer
    
    Dim sBuffer As String       'main buffer

    Dim lRet As Long
    
    Dim lRead As Long
    
    Dim sPath As String
    Dim sSubPath As String
    
    Dim cmdFlags As Long
    Dim cmdFilter As String
    Dim cmdMessage As String
    
    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
    cmdFilter = "Kort Template Files (*.xml)" & vbNullChar & "*.xml" & vbNullChar
    cmdFilter = cmdFilter & "Loki Template Files (*.mmr)" & vbNullChar & "*.mmr" & vbNullChar
    
    cmdMessage = "Import Kort's and Loki's Spellcrafting Templates"
    
    If TEMPLATE_RECENT_PATH = vbNullString Then TEMPLATE_RECENT_PATH = App.Path & "\templates\"

    sPath = CMD_OpenSave(lOpen, Me.hwnd, cmdFilter, 1, TEMPLATE_RECENT_PATH, cmdMessage, cmdFlags)
    
    If sPath <> vbNullString Then
    
        Call mnuNew_Click

        hFile = CreateFile(sPath, GENERIC_WRITE Or GENERIC_READ, _
                FILE_SHARE_WRITE Or FILE_SHARE_READ, ByVal CLng(0), _
                OPEN_EXISTING, FILE_ATTRIBUTE_ARCHIVE, 0)
    
        If hFile = -1 Then Exit Sub 'If hFile is -1 the file is not there and there has been an error
        
        Do
            sBuf = vbNullString
            lRet = ReadFile(hFile, ByVal sBuf, Len(sBuf), lRead, ByVal CLng(0))   'Read chars into sBuf
            sBuffer = sBuffer & RemoveString(sBuf, vbNullChar) 'strip the UTF-16
        Loop Until lRead = 0
        
        lRet = CloseHandle(hFile)       'Close the file it's not needed anymore
        
        'trim start/end spacing off of buffer
        sBuffer = LCase$(Trim$(sBuffer))
        
        'strip off xml header crap
        If InStr(sBuffer, "<sctemplate>") <> 0 Then
            TEMPLATE_LOADING = True
            sBuffer = Mid$(sBuffer, InStr(sBuffer, "<sctemplate>"))
        
            Call ImportKortsTemplate(sBuffer)
            
        ElseIf InStr(sBuffer, "<version number=") <> 0 And _
                InStr(sBuffer, "<character name=") <> 0 And _
                InStr(sBuffer, "<configurations>") <> 0 Then
                
                'by this point i'm pretty sure its a loki template...god this thing sucks peepee
            TEMPLATE_LOADING = True
            sBuffer = Mid$(sBuffer, InStr(sBuffer, "<character"))
            
            Call ImportLokiTemplate(sBuffer)
            
        End If
        
        CURRENT_LOCATION = ClickDollButton(WS_DOLL_HEAD, CURRENT_LOCATION, img_DollButton(WS_DOLL_HEAD), lbl_LocationName)
        CURRENT_LOCATION = ClickDollButton(WS_DOLL_CHEST, CURRENT_LOCATION, img_DollButton(WS_DOLL_CHEST), lbl_LocationName)
        
        TEMPLATE_LOADING = False
        
        If TEMPLATE_LOADING = False Then
            Call RefreshAttributeLabels
            Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
            Call SetTotalCost
            If opt_Drop(WS_DOLL_CHEST).Tag = True Then
                Call SetControlTabstops(WS_DOLL_CHEST, True)
            Else
                Call SetControlTabstops(WS_DOLL_CHEST, False)
            End If
            
        End If
    End If
    
End Sub

Private Sub mnuMaterials_Click()

    Call Material_List.MatsDisplay_ALL(TOON.REALM)
    
End Sub

Private Sub mnuNew_Click()
    
    Dim Ctr As Long
    Dim CtrI As Long
    Dim i As Long
    Dim j As Long
    Dim lSpellDetailIndex As Long
    
    For Ctr = 0 To 22
        
        If (Ctr <> WS_DOLL_GEM) And _
           (Ctr <> WS_DOLL_LRING) And _
           (Ctr <> WS_DOLL_LWRIST) And _
           (Ctr <> WS_DOLL_RWRIST) And _
           (Ctr <> WS_DOLL_RRING) And _
           (Ctr <> WS_DOLL_WAIST) And _
           (Ctr <> WS_DOLL_CLOAK) And _
           (Ctr <> WS_DOLL_NECK) And _
           (Ctr <> WS_DOLL_MYTHICAL) Then
            Call cmd_ClearItem_SC_Click(CInt(Ctr))
            Call cmd_ClearItem_DP_Click(CInt(Ctr))
            opt_PlayerCraft(Ctr).Value = True
        End If
        
        Call cmd_ClearItem_DP_Click(CInt(Ctr))
    Next Ctr
    
    Call UnLoadSkillTrainer(TOON)
    
    lbl_SpecPoints(0).Caption = ""
    'lbl_SpecPoints(1).Caption = "None"
    'lbl_SpecPoints(1).Tag = 0
    
    For i = 0 To shapeSpellClass.UBound
        If i > 0 Then
        
            Unload lbl_SpellClass(i)
            Unload shapeSpellClass(i)
            
            For j = 0 To 15
                lSpellDetailIndex = ((i * 100) + j)
                
                Unload lbl_SpellDetail(lSpellDetailIndex)
            Next j
            
        Else
            lbl_SpecSpent(i).Tag = "0"
            lbl_SpecSpent(i).Caption = "Spent: 0"
            
            lbl_SpellClass(i).Caption = ""
            lbl_SpellClass(i).Tag = ""
            lbl_SpellClass(i).ToolTipText = ""
            
            lbl_SpellClass(i).Visible = False
            shapeSpellClass(i).Visible = False
            
            For j = 0 To 15
                lbl_SpellDetail(j).Caption = ""
                lbl_SpellDetail(j).Tag = ""
                lbl_SpellDetail(j).ToolTipText = ""
                lbl_SpellDetail(j).Visible = False
            Next j
        End If
    Next i
    
    txt_CharacterName.Text = vbNullString
    
    Call cmb_Realm_Click
    
    For Ctr = 0 To 7
        If lbl_StatValue(Ctr).Tag <> 0 Then Call ClickSubStat(CInt(Ctr), Val(lbl_StatValue(Ctr).Tag))
    Next Ctr
    
    txt_RealmPoints.Text = "0"
    Call txt_RealmPoints_KeyPress(vbKeyReturn)
    
    WorkshopLabel(7).Caption = "Character Attributes (Points: " & TOON.CREATION_POINTS & ")"
    
    mnuSave.Enabled = False
    TEMPLATE_RECENT_FILENAME = vbNullString
        
    Call ClickDollButton(WS_DOLL_CHEST, CURRENT_LOCATION, img_DollButton(WS_DOLL_CHEST), lbl_LocationName)
    Call RefreshAttributeLabels
    
    txt_Level.Text = "50"
    
    WS.Caption = WORKSHOP_TITLE & " - New Template"
    If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
       
End Sub

Private Sub mnuOpen_Click()
    
    Dim sPath As String
    
    Dim cmdFlags As Long
    Dim cmdFilter As String
    Dim cmdMessage As String
    
    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
    cmdFilter = "Loto's Workshop Template (*.lwt)" & vbNullChar & "*.lwt" & vbNullChar
    cmdMessage = "Open Workshop Template"
    
    If TEMPLATE_RECENT_PATH = vbNullString Then TEMPLATE_RECENT_PATH = App.Path & "\templates\"
    
    sPath = CMD_OpenSave(lOpen, Me.hwnd, cmdFilter, 1, TEMPLATE_RECENT_PATH, cmdMessage, cmdFlags)
    
    TEMPLATE_LOADING = True
    
    Call mnuNew_Click
    Call OpenTemplate(sPath, 0)
    
    WS.Caption = WORKSHOP_TITLE & " - " & TEMPLATE_RECENT_FILENAME
    If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
    
    TEMPLATE_LOADING = False
    
    If TEMPLATE_LOADING = False Then
        Call RefreshAttributeLabels
        Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        Call CalculateAttributeTotals(TOON)
        If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
        If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
        If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        Call SetTotalCost
        If opt_Drop(WS_DOLL_CHEST).Tag = True Then
            Call SetControlTabstops(WS_DOLL_CHEST, True)
        Else
            Call SetControlTabstops(WS_DOLL_CHEST, False)
        End If
            
    End If
    
End Sub

Private Sub mnuPatchNotes_Click()

    PatchNotes.Show vbModal
    
End Sub

Private Sub mnuRecentFile_Click(Index As Integer)

    Dim sBuffer As String
    
    TEMPLATE_LOADING = True
    
    Call mnuNew_Click
    
    sBuffer = GetRegValue(HKEY_LOCAL_MACHINE, REGKEY, "RECENT_FILE_" & Index)
    If (sBuffer <> vbNullString) And (Right$(sBuffer, 4) = TEMPLATE_EXTENSION) Then Call OpenTemplate(sBuffer, 1)
    
    WS.Caption = WORKSHOP_TITLE & " - " & TEMPLATE_RECENT_FILENAME
    If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
    
    TEMPLATE_LOADING = False
    
    If TEMPLATE_LOADING = False Then
        Call RefreshAttributeLabels
        Call RefreshDisplay(SC_SETTINGS.BONUS_OPTION)
        Call CalculateAttributeTotals(TOON)
        If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
        If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
        If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        Call SetTotalCost
        If opt_Drop(WS_DOLL_CHEST).Tag = True Then
            Call SetControlTabstops(WS_DOLL_CHEST, True)
        Else
            Call SetControlTabstops(WS_DOLL_CHEST, False)
        End If
    End If
    
End Sub

Private Sub mnuSave_Click()

    Call SaveTemplate(WS_SAVE_FLAG, TEMPLATE_RECENT_PATH, TEMPLATE_RECENT_FILENAME)

    WS.Caption = WORKSHOP_TITLE & " - " & TEMPLATE_RECENT_FILENAME
    If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
    
End Sub

Private Sub mnuSaveAs_Click()

    Call SaveTemplate(WS_SAVEAS_FLAG, TEMPLATE_RECENT_PATH, TEMPLATE_RECENT_FILENAME)
    
    WS.Caption = WORKSHOP_TITLE & " - " & TEMPLATE_RECENT_FILENAME
    If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
    
End Sub

Private Sub SwapGems(CurLocation As Integer, NewLocation As Integer)
'working as intended 10/23/06
'there are no known issues with this procedure

    Dim GS As Long
    Dim GE As Long
    Dim GA As Long
    
    On Error Resume Next
    'swap sc1
    GS = cmb_GemSelectSC1(NewLocation).ListIndex
    GE = cmb_GemEffectSC1(NewLocation).ListIndex
    GA = cmb_GemAmountSC1(NewLocation).ListIndex
    
    If cmb_GemSelectSC1(CurLocation).ListIndex = 0 Then
        cmb_GemSelectSC1(NewLocation).ListIndex = cmb_GemSelectSC1(CurLocation).ListIndex
    Else
        cmb_GemSelectSC1(NewLocation).ListIndex = cmb_GemSelectSC1(CurLocation).ListIndex
        cmb_GemEffectSC1(NewLocation).ListIndex = cmb_GemEffectSC1(CurLocation).ListIndex
        cmb_GemAmountSC1(NewLocation).ListIndex = cmb_GemAmountSC1(CurLocation).ListIndex
    End If
    
    If GS = 0 Then
        cmb_GemSelectSC1(CurLocation).ListIndex = GS
    Else
        cmb_GemSelectSC1(CurLocation).ListIndex = GS
        cmb_GemEffectSC1(CurLocation).ListIndex = GE
        cmb_GemAmountSC1(CurLocation).ListIndex = GA

    End If
    
    'swap sc2
    GS = cmb_GemSelectSC2(NewLocation).ListIndex
    GE = cmb_GemEffectSC2(NewLocation).ListIndex
    GA = cmb_GemAmountSC2(NewLocation).ListIndex
    
    If cmb_GemSelectSC2(CurLocation).ListIndex = 0 Then
        cmb_GemSelectSC2(NewLocation).ListIndex = cmb_GemSelectSC2(CurLocation).ListIndex
    Else
        cmb_GemSelectSC2(NewLocation).ListIndex = cmb_GemSelectSC2(CurLocation).ListIndex
        cmb_GemEffectSC2(NewLocation).ListIndex = cmb_GemEffectSC2(CurLocation).ListIndex
        cmb_GemAmountSC2(NewLocation).ListIndex = cmb_GemAmountSC2(CurLocation).ListIndex
    End If
        
    If GS = 0 Then
        cmb_GemSelectSC2(CurLocation).ListIndex = GS
    Else
        cmb_GemSelectSC2(CurLocation).ListIndex = GS
        cmb_GemEffectSC2(CurLocation).ListIndex = GE
        cmb_GemAmountSC2(CurLocation).ListIndex = GA
    End If
    
    'swap sc3
    GS = cmb_GemSelectSC3(NewLocation).ListIndex
    GE = cmb_GemEffectSC3(NewLocation).ListIndex
    GA = cmb_GemAmountSC3(NewLocation).ListIndex
    
    If cmb_GemSelectSC3(CurLocation).ListIndex = 0 Then
        cmb_GemSelectSC3(NewLocation).ListIndex = cmb_GemSelectSC3(CurLocation).ListIndex
    Else
        cmb_GemSelectSC3(NewLocation).ListIndex = cmb_GemSelectSC3(CurLocation).ListIndex
        cmb_GemEffectSC3(NewLocation).ListIndex = cmb_GemEffectSC3(CurLocation).ListIndex
        cmb_GemAmountSC3(NewLocation).ListIndex = cmb_GemAmountSC3(CurLocation).ListIndex
    End If
    
    If GS = 0 Then
        cmb_GemSelectSC3(CurLocation).ListIndex = GS
    Else
        cmb_GemSelectSC3(CurLocation).ListIndex = GS
        cmb_GemEffectSC3(CurLocation).ListIndex = GE
        cmb_GemAmountSC3(CurLocation).ListIndex = GA
    End If
    
    'swap sc4
    GS = cmb_GemSelectSC4(NewLocation).ListIndex
    GE = cmb_GemEffectSC4(NewLocation).ListIndex
    GA = cmb_GemAmountSC4(NewLocation).ListIndex
    
    If cmb_GemSelectSC4(CurLocation).ListIndex = 0 Then
        cmb_GemSelectSC4(NewLocation).ListIndex = cmb_GemSelectSC4(CurLocation).ListIndex
    Else
        cmb_GemSelectSC4(NewLocation).ListIndex = cmb_GemSelectSC4(CurLocation).ListIndex
        cmb_GemEffectSC4(NewLocation).ListIndex = cmb_GemEffectSC4(CurLocation).ListIndex
        cmb_GemAmountSC4(NewLocation).ListIndex = cmb_GemAmountSC4(CurLocation).ListIndex
    End If
    
    If GS = 0 Then
        cmb_GemSelectSC4(CurLocation).ListIndex = GS
    Else
        cmb_GemSelectSC4(CurLocation).ListIndex = GS
        cmb_GemEffectSC4(CurLocation).ListIndex = GE
        cmb_GemAmountSC4(CurLocation).ListIndex = GA
    End If

End Sub

Private Sub mnuSettings_Click()

    Options.Show vbModal
    
End Sub

Private Sub opt_ConfigureItem_Armor_Click()

    'show label according to armor option
    lbl_ConfigItem_AFDPS.Caption = LoadResString(1)
    txt_ConfigItem_AFDPS.Enabled = True
    lbl_ConfigItem_Level.Tag = 1
    txt_ConfigItem_AFDPS.Text = vbNullString
    lbl_ConfigItem_Level.Caption = vbNullString
    
    cmb_ShieldType.Enabled = False
    
End Sub

Private Sub opt_ConfigureItem_Cloth_Click()

    'show label according to armor option
    lbl_ConfigItem_AFDPS.Caption = LoadResString(1)
    txt_ConfigItem_AFDPS.Enabled = True
    lbl_ConfigItem_Level.Tag = 2
    txt_ConfigItem_AFDPS.Text = vbNullString
    lbl_ConfigItem_Level.Caption = vbNullString
    
    cmb_ShieldType.Enabled = False
    
End Sub

Private Sub opt_ConfigureItem_Weapon_Click()

    'show label according to weapon option
    lbl_ConfigItem_AFDPS.Caption = LoadResString(2)
    txt_ConfigItem_AFDPS.Enabled = True
    lbl_ConfigItem_Level.Tag = 3
    txt_ConfigItem_AFDPS.Text = vbNullString
    lbl_ConfigItem_Level.Caption = vbNullString
    
    cmb_ShieldType.Enabled = False
    
End Sub

Private Sub opt_ConfigureItem_Shield_Click()

    cmb_ShieldType.Enabled = True
    
    'show label according to shield option
    lbl_ConfigItem_Level.Tag = 4
    lbl_ConfigItem_AFDPS.Caption = LoadResString(2)
    
    'Rowan
    'Elm
    'Oak
    'Ironwood
    'Heartwood
    'Runewood
    'Stonewood
    'Ebonwood
    'Dyrwood
    'Duskwood
    
    cmb_ShieldType.Enabled = True
    cmb_ShieldType.Clear
    
    cmb_ShieldType.AddItem "Rowan"
    cmb_ShieldType.AddItem "Elm"
    cmb_ShieldType.AddItem "Oak"
    cmb_ShieldType.AddItem "Ironwood"
    cmb_ShieldType.AddItem "Heartwood"
    cmb_ShieldType.AddItem "Runewood"
    cmb_ShieldType.AddItem "Stonewood"
    cmb_ShieldType.AddItem "Ebonwood"
    cmb_ShieldType.AddItem "Dyrwood"
    cmb_ShieldType.AddItem "Duskwood"
    
    cmb_ShieldType.ListIndex = 0
    txt_ConfigItem_AFDPS.Enabled = False
    txt_ConfigItem_AFDPS.Text = vbNullString
    lbl_ConfigItem_Level.Caption = vbNullString
    
End Sub

Private Sub opt_ConfigureItem_RFShield_Click()

    cmb_ShieldType.Enabled = True
    
    'show label according to reinforced shield option
    lbl_ConfigItem_Level.Tag = 5
    cmb_ShieldType.ListIndex = 0
    
    lbl_ConfigItem_AFDPS.Caption = LoadResString(2)
    txt_ConfigItem_AFDPS.Enabled = False
    txt_ConfigItem_AFDPS.Text = vbNullString
    
    'Heartwood
    'Runewood
    'Stonewood
    'Ebonwood
    'Dyrwood
    'Duskwood
    
    cmb_ShieldType.Enabled = True
    cmb_ShieldType.Clear
    
    cmb_ShieldType.AddItem "Heartwood"
    cmb_ShieldType.AddItem "Runewood"
    cmb_ShieldType.AddItem "Stonewood"
    cmb_ShieldType.AddItem "Ebonwood"
    cmb_ShieldType.AddItem "Dyrwood"
    cmb_ShieldType.AddItem "Duskwood"
    
    lbl_ConfigItem_Level.Caption = vbNullString
        
End Sub

Private Sub opt_Gender_Click(Index As Integer)

    TOON.GENDER = CLng(Index)
    
    Call PopulateRaceSelection(cmb_Race, TOON)
    Call PopulateClassSelection(cmb_Class, TOON)
    Call cmd_RecalculateRealmRankInfo_MouseUp(1, 1, 0, 0, 0)
    
End Sub

Private Sub opt_Drop_Click(Index As Integer)
    
    'show/hide frames for drop/sc
    
    If APPLICATION_PRE_START = False Then
    
        If TEMPLATE_LOADING = False Then
            Call HideSCLabels
            Call HideSCLocation(Index)
                
            Call ShowDPLabels
            Call ShowDPLocation(Index)
        End If
        
        opt_Drop(Index).Tag = True
        opt_PlayerCraft(Index).Tag = False
        
        If ((Index < WS_DOLL_RIGHTSPARE) And (Index > WS_DOLL_RANGED)) Or (Index < WS_DOLL_RHAND) Then
            chk_Equip_DP(Index).Value = vbChecked
        End If
        
        
        Call SetControlTabstops(Index, True)
    End If
    
End Sub

Private Sub opt_PlayerCraft_Click(Index As Integer)
    
    'show/hide frames for sc/drop
    On Error Resume Next
    
    If APPLICATION_PRE_START = False Then
    
        If TEMPLATE_LOADING = False Then
            Call HideDPLabels
            Call HideDPLocation(Index)
            
            Call ShowSCLabels
            Call ShowSCLocation(Index)
        End If
        
        opt_PlayerCraft(Index).Tag = True
        opt_Drop(Index).Tag = False
        
        If ((Index < WS_DOLL_RIGHTSPARE) And (Index > WS_DOLL_RANGED)) Or (Index < WS_DOLL_RHAND) Then
            chk_Equip_SC(Index).Value = vbChecked
        End If
        
        
        Call SetControlTabstops(Index, False)
    End If
    
End Sub

Private Sub txt_CharacterName_Change()

    TOON.Name = txt_CharacterName.Text
    
End Sub

Private Sub txt_ConfigItem_AFDPS_Change()

    'calculate item level
    Dim iLVL As Long
    
    With lbl_ConfigItem_Level
    
        If lbl_ConfigItem_Level.Tag > 3 Then
            .Caption = ItemLevel(.Tag, cmb_ShieldType.ListIndex)
        Else
            iLVL = ItemLevel(.Tag, Val(txt_ConfigItem_AFDPS.Text))
            If iLVL > 51 Then
                txt_ConfigItem_AFDPS.Text = vbNullString
                .Caption = vbNullString
            Else
                .Caption = iLVL
            End If
        End If
        
    End With
    
End Sub

Private Sub txt_ConfigItem_AFDPS_KeyPress(KeyAscii As Integer)

    If KeyAscii = 13 Then
        Call cmd_SetItemLevel_SC_MouseUp(CURRENT_LOCATION, 0, 0, 0, 0)
    End If
    
End Sub

Private Sub DP_AmountChange(Index As Integer, EQ As CheckBox, GS As ComboBox, GE As ComboBox, GA As TextBox, tToon As TOON_TYPE)

    If EQ.Value = 1 Then
        If (GS.Text <> vbNullString) And (GE.Text <> vbNullString) Then
            Call AssignEffect(Index, GS, GE, GA, tToon)
                If TEMPLATE_LOADING = False Then
                    Call CalculateAttributeTotals(TOON)
                    'Call CalculateItemUtilityDP(Index)
                    'Call CalculateTotalUtility
                    If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
                    If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
                    If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
                End If
        End If
    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
    
End Sub

Private Sub txt_GemAmount_DP1_Change(Index As Integer)
            
    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP10_Change(Index As Integer)
    
    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP11_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP12_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP2_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP3_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP4_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP5_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP6_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP7_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP8_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmount_DP9_Change(Index As Integer)

    Call DP_AmountChange(Index, chk_Equip_DP(Index), cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index), TOON)
    
    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_GemAmountSC5_Change(Index As Integer)

    txt_GemAmountSC5(Index).Text = Val(txt_GemAmountSC5(Index).Text)
        
    Call DP_AmountChange(Index, chk_Equip_SC(Index), cmb_GemSelectSC5(Index), cmb_GemEffectSC5(Index), txt_GemAmountSC5(Index), TOON)

    'Call CalculateItemUtilityDP(Index)
    'Call CalculateTotalUtility
    
End Sub

Private Sub txt_ItemLevel_SC_Change(Index As Integer)

    Dim PTS As Long
    Dim LVL As Long
    Dim QUA As Long
    
    LVL = Val(txt_ItemLevel_SC(Index).Text)
    QUA = cmb_ItemQuality(Index).ListIndex
    
    If LVL > 0 And LVL < 52 Then
       PTS = GetImbuePoints(LVL, QUA)
       lbl_ImbuePTS_Avail_SC(Index).Caption = " " & PTS
    Else
        txt_ItemLevel_SC(Index).Text = vbNullString
    End If
    
    Call CalculateImbue(Index)
    
End Sub

Private Sub LoadSCFrame(Index As Integer)

    Dim Ctr As Long
    
    On Error Resume Next
    
    Load cmb_ItemQuality(Index)
    Load txt_ItemLevel_SC(Index)
    Load cmd_SetItemLevel_SC(Index)
    Load lbl_ImbuePTS_Total_SC(Index)
    Load lbl_ImbuePTS_Avail_SC(Index)
    
    Load lbl_Overcharge_SC(Index)
    Load lbl_ItemUtility_Value(Index)
    Load chk_Equip_SC(Index)
    
    Load cmb_GemSelectSC1(Index)
    Load cmb_GemSelectSC2(Index)
    Load cmb_GemSelectSC3(Index)
    Load cmb_GemSelectSC4(Index)
    
    Load cmb_GemAmountSC1(Index)
    Load cmb_GemAmountSC2(Index)
    Load cmb_GemAmountSC3(Index)
    Load cmb_GemAmountSC4(Index)
    
    Load cmb_GemEffectSC1(Index)
    Load cmb_GemEffectSC2(Index)
    Load cmb_GemEffectSC3(Index)
    Load cmb_GemEffectSC4(Index)
      
    Load lbl_GemPtsSC1(Index)
    Load lbl_GemPtsSC2(Index)
    Load lbl_GemPtsSC3(Index)
    Load lbl_GemPtsSC4(Index)
    
    Load lbl_GemNameSC1(Index)
    Load lbl_GemNameSC2(Index)
    Load lbl_GemNameSC3(Index)
    Load lbl_GemNameSC4(Index)
    
    Load cmb_GemSelectSC5(Index)
    Load cmb_GemEffectSC5(Index)
    Load txt_GemAmountSC5(Index)
    
    Load cmb_TinctureSelectSC(Index)
    Load cmb_TinctureEffectSC(Index)
    Load lbl_TinctureCostSC(Index)
    Load lbl_TinctureNameSC(Index)
    
    Load lbl_ItemCostSC(Index)
    
    Load cmd_SaveItem_SC(Index)
    Load cmd_LoadItem_SC(Index)
    Load cmd_ClearItem_SC(Index)
       
    Call LoadSCFrameGemTypes(cmb_GemSelectSC1(Index))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC2(Index))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC3(Index))
    Call LoadSCFrameGemTypes(cmb_GemSelectSC4(Index))
    
    Call LoadSC5GemTypes(cmb_GemSelectSC5(Index))
      
    For Ctr = 0 To 4
        cmb_ItemQuality(Index).AddItem STR(96 + Ctr)
    Next Ctr
    
    Call LoadSCProcTypes(Index)
    
    'set default values for quality and level for high end spellcraft
    cmb_ItemQuality(Index).ListIndex = 4
    txt_ItemLevel_SC(Index).Text = "51"
    
End Sub

Private Sub LoadSC5GemTypes(SC5 As ComboBox)
    
    SC5.AddItem ""
    SC5.AddItem "Focus"
    SC5.AddItem "Hits"
    SC5.AddItem "Power"
    SC5.AddItem "Resist"
    SC5.AddItem "Stat"
    SC5.AddItem "Skill"
    SC5.AddItem "PvE Bonus"
    SC5.AddItem "ToA Bonus"
    SC5.AddItem "Cap Increase"
    
End Sub

Private Sub LoadSCProcTypes(Index As Integer)

    cmb_TinctureSelectSC(Index).AddItem ""
    cmb_TinctureSelectSC(Index).AddItem AlchemyEffects(AE_DROPS).AlchType
    cmb_TinctureSelectSC(Index).AddItem AlchemyEffects(AE_PROCS).AlchType
    cmb_TinctureSelectSC(Index).AddItem AlchemyEffects(AE_CHARGES).AlchType
    cmb_TinctureSelectSC(Index).AddItem AlchemyEffects(AE_REACTIVES).AlchType
    
End Sub

Private Sub LoadSCProcEffects(Index As Integer, ProcType As String)
    
    Dim i As Long

    cmb_TinctureEffectSC(Index).Clear
    
    Select Case LCase$(ProcType)
        Case ""
            
        Case LCase$(AlchemyEffects(AE_DROPS).AlchType)  'drops

        Case LCase$(AlchemyEffects(AE_PROCS).AlchType)  'procs
            
            For i = 0 To 36
                cmb_TinctureEffectSC(Index).AddItem AlchemyEffects(AE_PROCS).AlchDetails(AD_EFFECT, i)
            Next i
            
        Case LCase$(AlchemyEffects(AE_CHARGES).AlchType)  'charges
        
            For i = 0 To 37
                cmb_TinctureEffectSC(Index).AddItem AlchemyEffects(AE_CHARGES).AlchDetails(AD_EFFECT, i)
            Next i
            
        Case LCase$(AlchemyEffects(AE_REACTIVES).AlchType)  'reactives
        
            For i = 0 To 28
                cmb_TinctureEffectSC(Index).AddItem AlchemyEffects(AE_REACTIVES).AlchDetails(AD_EFFECT, i)
            Next i
    End Select
        
End Sub

Private Sub LoadSkillSet(Index As Integer, isSpell As Boolean)

    Dim i As Long
    Dim offsetIndex As Long
    
    '---------------------------------------------------------------------------------
    'load the main controls that are base indicies
    If Index > 0 Then
        Load shape_Skill(Index)
        shape_Skill(Index).Top = shape_Skill(Index - 1).Top + 525
        
        Load lbl_SkillName(Index)
        lbl_SkillName(Index).ZOrder 0
        lbl_SkillName(Index).Top = lbl_SkillName(Index - 1).Top + 525
        
        Load cmd_subSkillLevel(Index)
        cmd_subSkillLevel(Index).ZOrder 0
        cmd_subSkillLevel(Index).Top = lbl_SkillName(Index).Top
        
        Load lbl_SkillLevel(Index)
        lbl_SkillLevel(Index).ZOrder 0
        lbl_SkillLevel(Index).Top = lbl_SkillName(Index).Top
        
        Load txt_SkillLevel(Index)
        txt_SkillLevel(Index).ZOrder 0
        txt_SkillLevel(Index).Top = lbl_SkillName(Index).Top - 10
        txt_SkillLevel(Index).Visible = False
        
        Load cmd_addSkillLevel(Index)
        cmd_addSkillLevel(Index).ZOrder 0
        cmd_addSkillLevel(Index).Top = lbl_SkillName(Index).Top
        
        Load lbl_SpecSpent(Index)
        lbl_SpecSpent(Index).ZOrder 0
        lbl_SpecSpent(Index).Top = lbl_SkillName(Index).Top
        
        Load lbl_SkillSpecial(Index)
        lbl_SkillSpecial(Index).ZOrder 0
        lbl_SkillSpecial(Index).Top = lbl_SkillName(Index).Top
        lbl_SkillSpecial(Index).Visible = False
        
    End If
    '---------------------------------------------------------------------------------
    'load the controls that are a composite of the base ((index * 100) + i)
    For i = 0 To 21
        
        offsetIndex = ((Index * 100) + i)
        
        If Index > 0 Then
            Load lbl_Skill(offsetIndex)
            lbl_Skill(offsetIndex).Top = lbl_Skill(offsetIndex - 100).Top + 525
            lbl_Skill(offsetIndex).Left = lbl_Skill(i).Left
        Else
            If Not isSpell Then
                lbl_Skill(offsetIndex).Visible = True
                lbl_Skill(offsetIndex).ZOrder 0
            End If
        End If
        
    Next i
    
    If Index > 0 Then Load shape_SpellBar(Index * 100)
        
    shape_SpellBar(Index * 100).Top = lbl_Skill(Index * 100).Top
    shape_SpellBar(Index * 100).Left = lbl_Skill(Index * 100).Left
    shape_SpellBar(Index * 100).Width = ((2 / 100) * 5940)
    
    If isSpell Then
        shape_SpellBar(Index * 100).Visible = True
        shape_SpellBar(Index * 100).ZOrder 0
    Else
        shape_SpellBar(Index * 100).Visible = False
    End If
        
End Sub

Private Sub UnloadSkillSet(Index As Integer)

    Dim i As Long
    
    If Index > 0 Then
        
        Unload shape_Skill(Index)
        Unload lbl_SkillName(Index)
        
        Unload cmd_subSkillLevel(Index)
        Unload lbl_SkillLevel(Index)
        Unload txt_SkillLevel(Index)
        Unload cmd_addSkillLevel(Index)
        Unload lbl_SpecSpent(Index)
        Unload lbl_SkillSpecial(Index)
        
        For i = 0 To 21
        
            Unload lbl_Skill((Index * 100) + i)
            
        Next i
        
        Unload shape_SpellBar(Index * 100)

    Else
    
        lbl_SkillName(Index).Caption = ""
        lbl_SkillName(Index).Visible = False
        lbl_SkillName(Index).FontBold = False
        lbl_SkillName(Index).Tag = ""
        
        lbl_SkillLevel(Index).Caption = "1"
        lbl_SkillLevel(Index).Visible = False
        lbl_SkillLevel(Index).Tag = ""
        
        txt_SkillLevel(Index).Text = "1"
        txt_SkillLevel(Index).Visible = False
        
        lbl_SpecSpent(Index).Tag = 0
        lbl_SpecSpent(Index).Caption = "Spent: 0"
        lbl_SpecSpent(Index).Visible = False
        
        lbl_SkillSpecial(Index).Caption = ""
        lbl_SkillSpecial(Index).Visible = False
        
        cmd_addSkillLevel(Index).Visible = False
        cmd_subSkillLevel(Index).Visible = False
                
        shape_Skill(Index).Visible = False
        shape_SpellBar(Index * 100).Visible = False
                
        For i = 0 To 21
        
            lbl_Skill((Index * 100) + i).Caption = ""
            lbl_Skill((Index * 100) + i).FontBold = False
            lbl_Skill((Index * 100) + i).Tag = ""
            lbl_Skill((Index * 100) + i).ToolTipText = ""
            lbl_Skill((Index * 100) + i).Visible = False
            
        Next i
        
    End If
    
End Sub

Private Sub UnLoadSkillTrainer(tToon As TOON_TYPE)


    Dim lCtr As Integer
    Dim idx As Long
    Dim lCnt As Long
    
    With tToon
    
        lCnt = CURRENT_SPELL_COUNT + CURRENT_STYLE_COUNT
        
        For lCtr = 0 To lCnt - 1
            Call UnloadSkillSet(lCtr)
        Next lCtr
        
        CURRENT_STYLE_COUNT = 0
        CURRENT_SPELL_COUNT = 0
    
    End With
    
End Sub

Private Sub LoadSkillTrainer(tToon As TOON_TYPE)

    Dim lCtr As Integer 'style loop index
    Dim i As Long       'another loop index
    Dim j As Long       'auto train loop index
    
    TRAINER_LOADING = True
    
    'load spells
    With tToon
        If .STYLE_COUNT <> 0 Then
        
            For lCtr = 0 To .STYLE_COUNT - 1
                
                CURRENT_STYLE_COUNT = CURRENT_STYLE_COUNT + 1
                
                If lCtr > 0 Then Call LoadSkillSet(lCtr, False)
                
                If STYLES(lCtr).STYLE_PATH_NAME <> vbNullString Then
                
                    lbl_SkillName(lCtr).Visible = True
                    lbl_SkillName(lCtr).Tag = "melee"
                    lbl_SkillLevel(lCtr).Visible = True
                    lbl_SkillLevel(lCtr).Caption = "1"
                    lbl_SkillLevel(lCtr).Tag = False
                    txt_SkillLevel(lCtr).Text = "1"
                    txt_SkillLevel(lCtr).Visible = True
                    txt_SkillLevel(lCtr).ZOrder 0
                    cmd_subSkillLevel(lCtr).Visible = True
                    cmd_addSkillLevel(lCtr).Visible = True
                    lbl_SpecSpent(lCtr).Visible = True
                    lbl_SkillSpecial(lCtr).Visible = False
                    shape_Skill(lCtr).Visible = True
                    
                    If STYLES(lCtr).AUTO_TRAIN = True Then
                        For j = 0 To 10
                            If STYLES(lCtr).AUTO_TRAIN_CLASS(j) = .CLASS Then
                                lbl_SkillLevel(lCtr).Tag = True
                                Exit For
                            End If
                        Next j
                    End If
                    
                    lbl_SkillName(lCtr).Caption = STYLES(lCtr).STYLE_PATH_NAME
                    
                    For i = 0 To 21
                    
                        If STYLES(lCtr).STYLE(i).STYLE_DETAILS(STYLE_LEVEL) <> vbNullString Then
                            lbl_Skill((lCtr * 100) + i).Visible = True
                            lbl_Skill((lCtr * 100) + i).Caption = STYLES(lCtr).STYLE(i).STYLE_DETAILS(STYLE_LEVEL)
                            lbl_Skill((lCtr * 100) + i).ToolTipText = STYLES(lCtr).STYLE(i).STYLE_DETAILS(STYLE_NAME)
                        End If
                    
                    Next i
                    
                End If
                
                If STYLES(lCtr).STYLE_NO_STYLES Then
                   shape_SpellBar(lCtr * 100).Visible = True
                   shape_SpellBar(lCtr * 100).ZOrder 0
                Else
                   shape_SpellBar(lCtr * 100).Visible = False
                End If
                
            Next lCtr
        
        End If
        
        If .SPELL_COUNT <> 0 Then
        
            For lCtr = 0 To .SPELL_COUNT - 1
            
                CURRENT_SPELL_COUNT = CURRENT_SPELL_COUNT + 1
                
                If CURRENT_STYLE_COUNT > 0 Then
                    Call LoadSkillSet((shape_Skill.UBound + 1), True)
                Else
                    Call LoadSkillSet(lCtr, True)
                End If
                
                lbl_SkillName(shape_Skill.UBound).Visible = True
                lbl_SkillLevel(shape_Skill.UBound).Visible = True
                lbl_SkillSpecial(shape_Skill.UBound).Visible = False
                shape_Skill(shape_Skill.UBound).Visible = True
                
                If SPELLS(lCtr).SPELL_PATH_CATEGORY = SPELL_PATH_SPECLINE Then
                    cmd_subSkillLevel(shape_Skill.UBound).Visible = True
                    cmd_addSkillLevel(shape_Skill.UBound).Visible = True
                    lbl_SpecSpent(shape_Skill.UBound).Visible = True
                    lbl_SkillLevel(shape_Skill.UBound).Caption = "1"
                    lbl_SkillLevel(shape_Skill.UBound).Visible = False
                    lbl_SkillLevel(shape_Skill.UBound).Tag = False
                    txt_SkillLevel(shape_Skill.UBound).Text = "1"
                    txt_SkillLevel(shape_Skill.UBound).Visible = True
                    txt_SkillLevel(shape_Skill.UBound).ZOrder 0
                    
                    If SPELLS(lCtr).AUTO_TRAIN = True Then
                        For j = 0 To 10
                            If SPELLS(lCtr).AUTO_TRAIN_CLASS(j) = .CLASS Then
                                lbl_SkillLevel(shape_Skill.UBound).Tag = True
                                Exit For
                            End If
                        Next j
                    End If
                    
                Else
                    'its baseline so lets set a few properties. like the level of the toon to spells
                    cmd_subSkillLevel(shape_Skill.UBound).Visible = False
                    cmd_addSkillLevel(shape_Skill.UBound).Visible = False
                    lbl_SpecSpent(shape_Skill.UBound).Visible = False
                    lbl_SkillLevel(shape_Skill.UBound).Caption = TOON.LEVEL
                    lbl_SkillLevel(shape_Skill.UBound).Visible = True
                    lbl_SkillLevel(shape_Skill.UBound).Tag = SPELLS(lCtr).AUTO_TRAIN
                    lbl_SkillLevel(shape_Skill.UBound).ZOrder 0
                    txt_SkillLevel(shape_Skill.UBound).Visible = False
                End If
                
                lbl_SkillName(shape_Skill.UBound).Caption = SPELLS(lCtr).SPELL_PATH_NAME
                lbl_SkillName(shape_Skill.UBound).Tag = "magic"
                
            Next lCtr
        
        End If
        
    End With

    TRAINER_LOADING = False
    
End Sub

Private Sub LoadDPFrame(Index As Integer)
    
    Load cmb_GemSelect_DP1(Index)
    Load cmb_GemSelect_DP2(Index)
    Load cmb_GemSelect_DP3(Index)
    Load cmb_GemSelect_DP4(Index)
    Load cmb_GemSelect_DP5(Index)
    Load cmb_GemSelect_DP6(Index)
    Load cmb_GemSelect_DP7(Index)
    Load cmb_GemSelect_DP8(Index)
    Load cmb_GemSelect_DP9(Index)
    Load cmb_GemSelect_DP10(Index)
    Load cmb_GemSelect_DP11(Index)
    Load cmb_GemSelect_DP12(Index)
    
    Load txt_GemAmount_DP1(Index)
    Load txt_GemAmount_DP2(Index)
    Load txt_GemAmount_DP3(Index)
    Load txt_GemAmount_DP4(Index)
    Load txt_GemAmount_DP5(Index)
    Load txt_GemAmount_DP6(Index)
    Load txt_GemAmount_DP7(Index)
    Load txt_GemAmount_DP8(Index)
    Load txt_GemAmount_DP9(Index)
    Load txt_GemAmount_DP10(Index)
    Load txt_GemAmount_DP11(Index)
    Load txt_GemAmount_DP12(Index)
    
    Load cmb_GemEffect_DP1(Index)
    Load cmb_GemEffect_DP2(Index)
    Load cmb_GemEffect_DP3(Index)
    Load cmb_GemEffect_DP4(Index)
    Load cmb_GemEffect_DP5(Index)
    Load cmb_GemEffect_DP6(Index)
    Load cmb_GemEffect_DP7(Index)
    Load cmb_GemEffect_DP8(Index)
    Load cmb_GemEffect_DP9(Index)
    Load cmb_GemEffect_DP10(Index)
    Load cmb_GemEffect_DP11(Index)
    Load cmb_GemEffect_DP12(Index)
    
    Load cmd_ItemQuality_UP(Index)
    Load cmd_ItemQuality_DOWN(Index)
    
    Set cmd_ItemQuality_UP(Index).Picture = LoadResPicture("SUP_UP", vbResBitmap)
    Set cmd_ItemQuality_DOWN(Index).Picture = LoadResPicture("SDOWN_UP", vbResBitmap)
                
    Load txt_ItemQuality(Index)
    Load txt_ItemLevel_DP(Index)
    Load txt_ItemName_DP(Index)
    Load txt_AFDPS_DP(Index)
    Load txt_ItemSPD_DP(Index)
    
    Load lbl_ItemUtilityDP_Value(Index)
    
    Load lbl_ItemStatusDP(Index)
    
    Load cmd_SaveItem_DP(Index)
    Load cmd_LoadItem_DP(Index)
    Load cmd_ClearItem_DP(Index)
    
    Load opt_Alb(Index)
    Load opt_Hib(Index)
    Load opt_Mid(Index)
    Load opt_All(Index)
    
    Call LoadDPGemTypes(cmb_GemSelect_DP1(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP2(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP3(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP4(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP5(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP6(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP7(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP8(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP9(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP10(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP11(Index))
    Call LoadDPGemTypes(cmb_GemSelect_DP12(Index))
    
    Load chk_Equip_DP(Index)
    
End Sub

Private Sub HideDPLabels()

    Dim idx As Long
    
    On Error Resume Next
    For idx = 0 To DP_Labels.UBound
        DP_Labels(idx).Visible = False
    Next idx

End Sub

Private Sub ShowDPLabels()
    
    Dim idx As Long
    
    On Error Resume Next
    For idx = 0 To DP_Labels.UBound
        DP_Labels(idx).Visible = True
    Next idx

End Sub

Private Sub HideSCLabels()

    Dim idx As Long

    On Error Resume Next
    For idx = 0 To SC_Labels.UBound
        SC_Labels(idx).Visible = False
    Next idx

End Sub

Private Sub ShowSCLabels()

    Dim idx As Long
      
    On Error Resume Next
    For idx = 0 To SC_Labels.UBound
        SC_Labels(idx).Visible = True
    Next idx

End Sub

Private Sub HideSCLocation(Index As Integer)

    Static bHereAlready As Boolean
    
    On Error Resume Next
    If Not bHereAlready Then
        bHereAlready = True
        'hide spellcraft specific windows
        
        cmb_ItemQuality(Index).Visible = False
        
        cmd_SetItemLevel_SC(Index).Visible = False
        
        chk_Equip_SC(Index).Visible = False
        
        txt_ItemLevel_SC(Index).Visible = False
        
        lbl_ImbuePTS_Total_SC(Index).Visible = False
        lbl_ImbuePTS_Avail_SC(Index).Visible = False
        lbl_Overcharge_SC(Index).Visible = False
        lbl_ItemUtility_Value(Index).Visible = False
        
        cmb_GemSelectSC1(Index).Visible = False
        cmb_GemSelectSC2(Index).Visible = False
        cmb_GemSelectSC3(Index).Visible = False
        cmb_GemSelectSC4(Index).Visible = False
        
        cmb_GemAmountSC1(Index).Visible = False
        cmb_GemAmountSC2(Index).Visible = False
        cmb_GemAmountSC3(Index).Visible = False
        cmb_GemAmountSC4(Index).Visible = False
        
        cmb_GemEffectSC1(Index).Visible = False
        cmb_GemEffectSC2(Index).Visible = False
        cmb_GemEffectSC3(Index).Visible = False
        cmb_GemEffectSC4(Index).Visible = False
               
        lbl_GemPtsSC1(Index).Visible = False
        lbl_GemPtsSC2(Index).Visible = False
        lbl_GemPtsSC3(Index).Visible = False
        lbl_GemPtsSC4(Index).Visible = False
        
        lbl_GemNameSC1(Index).Visible = False
        lbl_GemNameSC2(Index).Visible = False
        lbl_GemNameSC3(Index).Visible = False
        lbl_GemNameSC4(Index).Visible = False
        
        cmb_TinctureSelectSC(Index).Visible = False
        cmb_TinctureEffectSC(Index).Visible = False
        
        lbl_TinctureCostSC(Index).Visible = False
        lbl_TinctureNameSC(Index).Visible = False
        lbl_ItemCostSC(Index).Visible = False
        
        cmd_LoadItem_SC(Index).Visible = False
        cmd_ClearItem_SC(Index).Visible = False
        cmd_SaveItem_SC(Index).Visible = False
        
        cmb_GemSelectSC5(Index).Visible = False
        cmb_GemEffectSC5(Index).Visible = False
        txt_GemAmountSC5(Index).Visible = False
          
        frameTool(FRAME_SC).Visible = False
     End If

     bHereAlready = False
     
End Sub

Private Sub ShowSCLocation(Index As Integer)

    Static bHereAlready As Boolean
    
    On Error Resume Next
    If Not bHereAlready Then
        bHereAlready = True
        'show spellcraft specific windows
                
        frameTool(FRAME_SC).Visible = True
        
        cmb_ItemQuality(Index).Visible = True
        
        cmd_SetItemLevel_SC(Index).Visible = True
        
        chk_Equip_SC(Index).Visible = True
        
        txt_ItemLevel_SC(Index).Visible = True
        
        lbl_ImbuePTS_Total_SC(Index).Visible = True
        lbl_ImbuePTS_Avail_SC(Index).Visible = True
        lbl_Overcharge_SC(Index).Visible = True
        lbl_ItemUtility_Value(Index).Visible = True
        
        cmb_GemSelectSC1(Index).Visible = True
        cmb_GemSelectSC2(Index).Visible = True
        cmb_GemSelectSC3(Index).Visible = True
        cmb_GemSelectSC4(Index).Visible = True
        
        cmb_GemAmountSC1(Index).Visible = True
        cmb_GemAmountSC2(Index).Visible = True
        cmb_GemAmountSC3(Index).Visible = True
        cmb_GemAmountSC4(Index).Visible = True
        
        cmb_GemEffectSC1(Index).Visible = True
        cmb_GemEffectSC2(Index).Visible = True
        cmb_GemEffectSC3(Index).Visible = True
        cmb_GemEffectSC4(Index).Visible = True
       
        lbl_GemPtsSC1(Index).Visible = True
        lbl_GemPtsSC2(Index).Visible = True
        lbl_GemPtsSC3(Index).Visible = True
        lbl_GemPtsSC4(Index).Visible = True
        
        lbl_GemNameSC1(Index).Visible = True
        lbl_GemNameSC2(Index).Visible = True
        lbl_GemNameSC3(Index).Visible = True
        lbl_GemNameSC4(Index).Visible = True
        
        cmb_TinctureSelectSC(Index).Visible = True
        cmb_TinctureEffectSC(Index).Visible = True
        
        lbl_TinctureCostSC(Index).Visible = True
        lbl_TinctureNameSC(Index).Visible = True
        lbl_ItemCostSC(Index).Visible = True
        
        cmd_LoadItem_SC(Index).Visible = True
        cmd_ClearItem_SC(Index).Visible = True
        cmd_SaveItem_SC(Index).Visible = True
        
        cmb_GemSelectSC5(Index).Visible = True
        cmb_GemEffectSC5(Index).Visible = True
        txt_GemAmountSC5(Index).Visible = True
        
        'set zOrders to 0 
        cmb_ItemQuality(Index).ZOrder 0
        
        cmd_SetItemLevel_SC(Index).ZOrder 0
        
        chk_Equip_SC(Index).ZOrder 0
        
        txt_ItemLevel_SC(Index).ZOrder 0
        
        lbl_ImbuePTS_Total_SC(Index).ZOrder 0
        lbl_ImbuePTS_Avail_SC(Index).ZOrder 0
        lbl_Overcharge_SC(Index).ZOrder 0
        lbl_ItemUtility_Value(Index).ZOrder 0
        
        cmb_GemSelectSC1(Index).ZOrder 0
        cmb_GemSelectSC2(Index).ZOrder 0
        cmb_GemSelectSC3(Index).ZOrder 0
        cmb_GemSelectSC4(Index).ZOrder 0
        
        cmb_GemAmountSC1(Index).ZOrder 0
        cmb_GemAmountSC2(Index).ZOrder 0
        cmb_GemAmountSC3(Index).ZOrder 0
        cmb_GemAmountSC4(Index).ZOrder 0
        
        cmb_GemEffectSC1(Index).ZOrder 0
        cmb_GemEffectSC2(Index).ZOrder 0
        cmb_GemEffectSC3(Index).ZOrder 0
        cmb_GemEffectSC4(Index).ZOrder 0
        
        lbl_GemPtsSC1(Index).ZOrder 0
        lbl_GemPtsSC2(Index).ZOrder 0
        lbl_GemPtsSC3(Index).ZOrder 0
        lbl_GemPtsSC4(Index).ZOrder 0
        
        lbl_GemNameSC1(Index).ZOrder 0
        lbl_GemNameSC2(Index).ZOrder 0
        lbl_GemNameSC3(Index).ZOrder 0
        lbl_GemNameSC4(Index).ZOrder 0
        
        cmb_TinctureSelectSC(Index).ZOrder 0
        cmb_TinctureEffectSC(Index).ZOrder 0
        
        lbl_TinctureCostSC(Index).ZOrder 0
        lbl_TinctureNameSC(Index).ZOrder 0
        lbl_ItemCostSC(Index).ZOrder 0
        
        cmd_LoadItem_SC(Index).ZOrder 0
        cmd_ClearItem_SC(Index).ZOrder 0
        cmd_SaveItem_SC(Index).ZOrder 0
        
        cmb_GemSelectSC5(Index).ZOrder 0
        cmb_GemEffectSC5(Index).ZOrder 0
        txt_GemAmountSC5(Index).ZOrder 0
    End If

    bHereAlready = False
    
End Sub

Private Sub HideDPLocation(Index As Integer)

    Static bHereAlready As Boolean
    
    On Error Resume Next
    If Not bHereAlready Then
        bHereAlready = True
        
        'hide dropped item specific windows
        cmb_GemSelect_DP1(Index).Visible = False
        cmb_GemSelect_DP2(Index).Visible = False
        cmb_GemSelect_DP3(Index).Visible = False
        cmb_GemSelect_DP4(Index).Visible = False
        cmb_GemSelect_DP5(Index).Visible = False
        cmb_GemSelect_DP6(Index).Visible = False
        cmb_GemSelect_DP7(Index).Visible = False
        cmb_GemSelect_DP8(Index).Visible = False
        cmb_GemSelect_DP9(Index).Visible = False
        cmb_GemSelect_DP10(Index).Visible = False
        cmb_GemSelect_DP11(Index).Visible = False
        cmb_GemSelect_DP12(Index).Visible = False
        
        txt_GemAmount_DP1(Index).Visible = False
        txt_GemAmount_DP2(Index).Visible = False
        txt_GemAmount_DP3(Index).Visible = False
        txt_GemAmount_DP4(Index).Visible = False
        txt_GemAmount_DP5(Index).Visible = False
        txt_GemAmount_DP6(Index).Visible = False
        txt_GemAmount_DP7(Index).Visible = False
        txt_GemAmount_DP8(Index).Visible = False
        txt_GemAmount_DP9(Index).Visible = False
        txt_GemAmount_DP10(Index).Visible = False
        txt_GemAmount_DP11(Index).Visible = False
        txt_GemAmount_DP12(Index).Visible = False
        
        cmb_GemEffect_DP1(Index).Visible = False
        cmb_GemEffect_DP2(Index).Visible = False
        cmb_GemEffect_DP3(Index).Visible = False
        cmb_GemEffect_DP4(Index).Visible = False
        cmb_GemEffect_DP5(Index).Visible = False
        cmb_GemEffect_DP6(Index).Visible = False
        cmb_GemEffect_DP7(Index).Visible = False
        cmb_GemEffect_DP8(Index).Visible = False
        cmb_GemEffect_DP9(Index).Visible = False
        cmb_GemEffect_DP10(Index).Visible = False
        cmb_GemEffect_DP11(Index).Visible = False
        cmb_GemEffect_DP12(Index).Visible = False
        
        txt_ItemQuality(Index).Visible = False
        txt_ItemLevel_DP(Index).Visible = False
        txt_ItemName_DP(Index).Visible = False
        txt_AFDPS_DP(Index).Visible = False
        txt_ItemSPD_DP(Index).Visible = False
          
        opt_Alb(Index).Visible = False
        opt_Hib(Index).Visible = False
        opt_Mid(Index).Visible = False
        opt_All(Index).Visible = False
        
        lbl_ItemStatusDP(Index).Visible = False
        
        cmd_ItemQuality_UP(Index).Visible = False
        cmd_ItemQuality_DOWN(Index).Visible = False
                
        cmd_SaveItem_DP(Index).Visible = False
        cmd_LoadItem_DP(Index).Visible = False
        cmd_ClearItem_DP(Index).Visible = False
        
        chk_Equip_DP(Index).Visible = False
        
        frameTool(FRAME_DP).Visible = False
    End If

    bHereAlready = False
    
End Sub

Private Sub ShowDPLocation(Index As Integer)

    Static bHereAlready As Boolean
    
    On Error Resume Next
    If Not bHereAlready Then
        Dim lCode As Long
        
        bHereAlready = True
        'show dropped item specific windows
        frameTool(FRAME_DP).Visible = True
        
        cmb_GemSelect_DP1(Index).Visible = True
        cmb_GemSelect_DP2(Index).Visible = True
        cmb_GemSelect_DP3(Index).Visible = True
        cmb_GemSelect_DP4(Index).Visible = True
        cmb_GemSelect_DP5(Index).Visible = True
        cmb_GemSelect_DP6(Index).Visible = True
        cmb_GemSelect_DP7(Index).Visible = True
        cmb_GemSelect_DP8(Index).Visible = True
        cmb_GemSelect_DP9(Index).Visible = True
        cmb_GemSelect_DP10(Index).Visible = True
        cmb_GemSelect_DP11(Index).Visible = True
        cmb_GemSelect_DP12(Index).Visible = True
        
        txt_GemAmount_DP1(Index).Visible = True
        txt_GemAmount_DP2(Index).Visible = True
        txt_GemAmount_DP3(Index).Visible = True
        txt_GemAmount_DP4(Index).Visible = True
        txt_GemAmount_DP5(Index).Visible = True
        txt_GemAmount_DP6(Index).Visible = True
        txt_GemAmount_DP7(Index).Visible = True
        txt_GemAmount_DP8(Index).Visible = True
        txt_GemAmount_DP9(Index).Visible = True
        txt_GemAmount_DP10(Index).Visible = True
        txt_GemAmount_DP11(Index).Visible = True
        txt_GemAmount_DP12(Index).Visible = True
        
        cmb_GemEffect_DP1(Index).Visible = True
        cmb_GemEffect_DP2(Index).Visible = True
        cmb_GemEffect_DP3(Index).Visible = True
        cmb_GemEffect_DP4(Index).Visible = True
        cmb_GemEffect_DP5(Index).Visible = True
        cmb_GemEffect_DP6(Index).Visible = True
        cmb_GemEffect_DP7(Index).Visible = True
        cmb_GemEffect_DP8(Index).Visible = True
        cmb_GemEffect_DP9(Index).Visible = True
        cmb_GemEffect_DP10(Index).Visible = True
        cmb_GemEffect_DP11(Index).Visible = True
        cmb_GemEffect_DP12(Index).Visible = True
        
        txt_ItemQuality(Index).Visible = True
        txt_ItemLevel_DP(Index).Visible = True
        txt_ItemName_DP(Index).Visible = True
        txt_AFDPS_DP(Index).Visible = True
        txt_ItemSPD_DP(Index).Visible = True
        
        opt_Alb(Index).Visible = True
        opt_Hib(Index).Visible = True
        opt_Mid(Index).Visible = True
        opt_All(Index).Visible = True
        
        cmd_ItemQuality_UP(Index).Visible = True
        cmd_ItemQuality_DOWN(Index).Visible = True
        
        lbl_ItemStatusDP(Index).Visible = True
        
        cmd_SaveItem_DP(Index).Visible = True
        cmd_LoadItem_DP(Index).Visible = True
        cmd_ClearItem_DP(Index).Visible = True
        
        chk_Equip_DP(Index).Visible = True

        'set zOrder to 0
        cmb_GemSelect_DP1(Index).ZOrder 0
        cmb_GemSelect_DP2(Index).ZOrder 0
        cmb_GemSelect_DP3(Index).ZOrder 0
        cmb_GemSelect_DP4(Index).ZOrder 0
        cmb_GemSelect_DP5(Index).ZOrder 0
        cmb_GemSelect_DP6(Index).ZOrder 0
        cmb_GemSelect_DP7(Index).ZOrder 0
        cmb_GemSelect_DP8(Index).ZOrder 0
        cmb_GemSelect_DP9(Index).ZOrder 0
        cmb_GemSelect_DP10(Index).ZOrder 0
        cmb_GemSelect_DP11(Index).ZOrder 0
        cmb_GemSelect_DP12(Index).ZOrder 0
        
        txt_GemAmount_DP1(Index).ZOrder 0
        txt_GemAmount_DP2(Index).ZOrder 0
        txt_GemAmount_DP3(Index).ZOrder 0
        txt_GemAmount_DP4(Index).ZOrder 0
        txt_GemAmount_DP5(Index).ZOrder 0
        txt_GemAmount_DP6(Index).ZOrder 0
        txt_GemAmount_DP7(Index).ZOrder 0
        txt_GemAmount_DP8(Index).ZOrder 0
        txt_GemAmount_DP9(Index).ZOrder 0
        txt_GemAmount_DP10(Index).ZOrder 0
        txt_GemAmount_DP11(Index).ZOrder 0
        txt_GemAmount_DP12(Index).ZOrder 0
        
        cmb_GemEffect_DP1(Index).ZOrder 0
        cmb_GemEffect_DP2(Index).ZOrder 0
        cmb_GemEffect_DP3(Index).ZOrder 0
        cmb_GemEffect_DP4(Index).ZOrder 0
        cmb_GemEffect_DP5(Index).ZOrder 0
        cmb_GemEffect_DP6(Index).ZOrder 0
        cmb_GemEffect_DP7(Index).ZOrder 0
        cmb_GemEffect_DP8(Index).ZOrder 0
        cmb_GemEffect_DP9(Index).ZOrder 0
        cmb_GemEffect_DP10(Index).ZOrder 0
        cmb_GemEffect_DP11(Index).ZOrder 0
        cmb_GemEffect_DP12(Index).ZOrder 0
        
        txt_ItemQuality(Index).ZOrder 0
        txt_ItemLevel_DP(Index).ZOrder 0
        txt_ItemName_DP(Index).ZOrder 0
        txt_AFDPS_DP(Index).ZOrder 0
        txt_ItemSPD_DP(Index).ZOrder 0
        
        opt_Alb(Index).ZOrder 0
        opt_Hib(Index).ZOrder 0
        opt_Mid(Index).ZOrder 0
        opt_All(Index).ZOrder 0
        
        cmd_ItemQuality_UP(Index).ZOrder 0
        cmd_ItemQuality_DOWN(Index).ZOrder 0
                
        cmd_SaveItem_DP(Index).ZOrder 0
        cmd_LoadItem_DP(Index).ZOrder 0
        cmd_ClearItem_DP(Index).ZOrder 0
        
        lbl_ItemStatusDP(Index).ZOrder 0
        
        chk_Equip_DP(Index).ZOrder 0
        'set lcode to 1 to signify that it's boned and we need to set a value
        lCode = 1
        If Len(opt_Alb(Index).Tag) <> 0 Then
            If CBool(opt_Alb(Index).Tag) = True Then
                opt_Alb(Index).Value = True
                lCode = 0
            End If
        End If
        
        If Len(opt_Hib(Index).Tag) <> 0 Then
            If CBool(opt_Hib(Index).Tag) = True Then
                opt_Hib(Index).Value = True
                lCode = 0
            End If
        End If
        
        If Len(opt_Mid(Index).Tag) <> 0 Then
            If CBool(opt_Mid(Index).Tag) = True Then
                opt_Mid(Index).Value = True
                lCode = 0
            End If
        End If
        
        If Len(opt_All(Index).Tag) <> 0 Then
            If CBool(opt_All(Index).Tag) = True Then
                opt_All(Index).Value = True
                lCode = 0
            End If
        End If
        
        If lCode <> 0 Then
            Select Case TOON.REALM
                Case 0
                    opt_Alb(Index).Value = True
                Case 1
                    opt_Hib(Index).Value = True
                Case 2
                    opt_Mid(Index).Value = True
            End Select
        End If
        
    End If

    bHereAlready = False
    
End Sub

Private Sub cmb_ShieldType_Click()

    lbl_ConfigItem_Level.Caption = ItemLevel(lbl_ConfigItem_Level.Tag, cmb_ShieldType.ListIndex)
    
End Sub

Private Sub DPClick(Index As Integer, GS As ComboBox, GE As ComboBox, GA As TextBox, EQ As CheckBox, tToon As TOON_TYPE)

        
    Call LoadDPGemSelection(tToon.REALM, GS, GE, GA)
    
    If EQ.Value = 1 Then
        Call AssignEffect(Index, GS, GE, GA, tToon)
        If TEMPLATE_LOADING = False Then
            Call CalculateAttributeTotals(TOON)
            If TOON.REALM = REALM_ALBION Then Call CalculateSkillsAlb(TOON)
            If TOON.REALM = REALM_HIBERNIA Then Call CalculateSkillsHib(TOON)
            If TOON.REALM = REALM_MIDGARD Then Call CalculateSkillsMid(TOON)
        End If
    End If
    
    lbl_ItemStatusDP(Index).Caption = "Item Changed!"
        
End Sub

Private Sub cmb_GemSelect_DP1_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP10_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP11_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP12_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP2_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP3_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP4_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP5_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP6_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP7_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP8_Click(Index As Integer)
    
    Call DPClick(Index, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub cmb_GemSelect_DP9_Click(Index As Integer)

    Call DPClick(Index, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index), chk_Equip_DP(Index), TOON)
    
End Sub

Private Sub SaveTemplate(lSaveFlag As Long, sFilePath As String, sFilename As String)

    'lSaveFlag = 1 Save, = 0 SaveAs
    
    Dim lCtr As Long
    Dim i As Long
    
    Dim hFile As Long
    Dim sBuffer As String
    Dim sPath As String
    Dim lRet As Long
    
    Dim lWrite As Long
    Dim cmdFlags As Long
    Dim cmdFilter As String
    Dim cmdMessage As String
        
    'if SaveAs was selected then...cmdialog time!
    If lSaveFlag = WS_SAVEAS_FLAG Then
    
        cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
        cmdFilter = "Loto's Workshop Template (*.lwt)" & vbNullChar & "*.lwt" & vbNullChar
        cmdMessage = "Save Workshop Template"
        
        If TEMPLATE_RECENT_PATH = vbNullString Then TEMPLATE_RECENT_PATH = App.Path & "\templates\"
        
        sPath = CMD_OpenSave(lSave, Me.hwnd, cmdFilter, 1, TEMPLATE_RECENT_PATH, cmdMessage, cmdFlags)
        
    ElseIf lSaveFlag = WS_SAVE_FLAG Then
    
        'if for some reason the path and filename are null, don't do this
        If Len(TEMPLATE_RECENT_PATH) <> 0 And Len(TEMPLATE_RECENT_FILENAME) <> 0 Then
        
            'set the path
            sPath = RemoveString(TEMPLATE_RECENT_PATH, vbNullChar) & RemoveString(TEMPLATE_RECENT_FILENAME, vbNullChar)
        End If
        
    End If
    
    'get to saving stuff
    If sPath <> vbNullString Then
    
        'check to see if there's a valid filename, if not make it valid
        If Right$(sPath, 4) <> TEMPLATE_EXTENSION Then sPath = sPath & TEMPLATE_EXTENSION
        'create/overwrite the old save file
        hFile = CreateFile(sPath, _
                           GENERIC_WRITE Or GENERIC_READ, _
                           FILE_SHARE_WRITE Or FILE_SHARE_READ, _
                           ByVal CLng(0), CREATE_ALWAYS, FILE_ATTRIBUTE_ARCHIVE, 0)
    
        'If hFile is -1 the file is not there and there has been an error
        If hFile = -1 Then Exit Sub
    
        'show them we're doing something
        WS.Caption = WORKSHOP_TITLE & " - Saving Template: " & Mid$(sPath, InStrRev(sPath, "\") + 1)
        
        sBuffer = vbNullString
        
        sBuffer = "<template_lwt>"
        'toon header
        sBuffer = sBuffer & "<character>"
        
        sBuffer = sBuffer & "<toon_name>" & txt_CharacterName & "</toon_name>" & _
                            "<toon_realm>" & cmb_Realm.Text & "</toon_realm>" & _
                            "<toon_race>" & cmb_Race.Text & "</toon_race>" & _
                            "<toon_class>" & cmb_Class.Text & "</toon_class>" & _
                            "<toon_level>" & TOON.LEVEL & "</toon_level>" & _
                            "<toon_gender>" & TOON.GENDER & "</toon_gender>" & _
                            "<toon_rps>" & TOON.REALM_POINTS & "</toon_rps>" & _
                            "<toon_str>" & TOON.STAT_MATRIX(SM_STR, SM_LOC_CREATION) & "</toon_str>" & _
                            "<toon_con>" & TOON.STAT_MATRIX(SM_CON, SM_LOC_CREATION) & "</toon_con>" & _
                            "<toon_dex>" & TOON.STAT_MATRIX(SM_DEX, SM_LOC_CREATION) & "</toon_dex>" & _
                            "<toon_qui>" & TOON.STAT_MATRIX(SM_QUI, SM_LOC_CREATION) & "</toon_qui>" & _
                            "<toon_int>" & TOON.STAT_MATRIX(SM_INT, SM_LOC_CREATION) & "</toon_int>" & _
                            "<toon_emp>" & TOON.STAT_MATRIX(SM_EMP, SM_LOC_CREATION) & "</toon_emp>" & _
                            "<toon_pie>" & TOON.STAT_MATRIX(SM_PIE, SM_LOC_CREATION) & "</toon_pie>" & _
                            "<toon_cha>" & TOON.STAT_MATRIX(SM_CHA, SM_LOC_CREATION) & "</toon_cha>"
        'toon realm abilities
        sBuffer = sBuffer & "<realm_abilities><passive>"
        
        For lCtr = 0 To CURRENT_RA_PASSIVE_COUNT - 1
        
            If Val(lbl_RA_PassiveCostValue(lCtr).Tag) <> 0 Then
                sBuffer = sBuffer & "<ra_passive_" & Format(lCtr, "00") & ">"
                sBuffer = sBuffer & lbl_RA_PassiveCostValue(lCtr).Tag
                sBuffer = sBuffer & "</ra_passive_" & Format(lCtr, "00") & ">"
            End If
            
        Next lCtr
                
        sBuffer = sBuffer & "</passive>"
        
        sBuffer = sBuffer & "<active>"
        
        For lCtr = 0 To CURRENT_RA_ACTIVE_COUNT - 1
        
            If Val(lbl_RA_ActiveCostValue(lCtr).Tag) <> 0 Then
                sBuffer = sBuffer & "<ra_active_" & Format(lCtr, "00") & ">"
                sBuffer = sBuffer & lbl_RA_ActiveCostValue(lCtr).Tag
                sBuffer = sBuffer & "</ra_active_" & Format(lCtr, "00") & ">"
            End If
        
        Next lCtr
        
        sBuffer = sBuffer & "</active></realm_abilities></character>"
        
        sBuffer = sBuffer & "<items>"
        
        For lCtr = WS_DOLL_CHEST To WS_DOLL_MYTHICAL
            sBuffer = sBuffer & "<item_" & Format(lCtr, "00") & ">"
            
            If lCtr = WS_DOLL_GEM Or _
               lCtr = WS_DOLL_LRING Or _
               lCtr = WS_DOLL_LWRIST Or _
               lCtr = WS_DOLL_RWRIST Or _
               lCtr = WS_DOLL_RRING Or _
               lCtr = WS_DOLL_WAIST Or _
               lCtr = WS_DOLL_CLOAK Or _
               lCtr = WS_DOLL_NECK Or _
               lCtr = WS_DOLL_MYTHICAL Then
               
                'these indicies are drop only, a chk_equip_sc doesn't exist
                'and will cause a fault so set checked by default
                'the "e" signifies that the item is equipped
                sBuffer = sBuffer & "<de>"
                
                sBuffer = sBuffer & WriteDropLocation(lCtr)
                                    
                sBuffer = sBuffer & "</de>" & vbCrLf
                
            Else
                
                'set the correct flag on the crafted symbol
                If chk_Equip_SC(lCtr).Value = vbChecked Then
                    sBuffer = sBuffer & "<se>"
                Else
                    sBuffer = sBuffer & "<s>"
                End If
                
                sBuffer = sBuffer & WriteCraftLocation(lCtr)
                
                'set the correct flag on the crafted symbol
                If chk_Equip_SC(lCtr).Value = vbChecked Then
                    sBuffer = sBuffer & "</se>"
                Else
                    sBuffer = sBuffer & "</s>"
                End If
                                
                'set the correct flag on the drop symbol
                If chk_Equip_DP(lCtr).Value = vbChecked Then
                    sBuffer = sBuffer & "<de>"
                Else
                    sBuffer = sBuffer & "<d>"
                End If
                                
                sBuffer = sBuffer & WriteDropLocation(lCtr)
                    
                'set the correct flag on the drop symbol
                If chk_Equip_DP(lCtr).Value = vbChecked Then
                    sBuffer = sBuffer & "</de>"
                Else
                    sBuffer = sBuffer & "</d>"
                End If
                
            End If
        
            sBuffer = sBuffer & "</item_" & Format(lCtr, "00") & ">" & vbCrLf
        Next lCtr
        
        sBuffer = sBuffer & "</items>"
        
        sBuffer = sBuffer & "<spec_info>"
    
        'sBuffer = sBuffer & "<spec_auto>" & lbl_SpecPoints(1).Tag & "</spec_auto>"
        
        For lCtr = 0 To cmd_addSkillLevel.UBound
        
            If cmd_addSkillLevel(lCtr).Visible = True Then
            
                sBuffer = sBuffer & "<spec_line>"
                sBuffer = sBuffer & "<spec_name>" & LCase$(lbl_SkillName(lCtr).Caption) & "</spec_name>"
                sBuffer = sBuffer & "<spec_level>" & lbl_SkillLevel(lCtr).Caption & "</spec_level>"
                sBuffer = sBuffer & "</spec_line>"
                
            End If
                
        Next lCtr
                
        sBuffer = sBuffer & "</spec_info>"
        
        sBuffer = sBuffer & "</template_lwt>"
        
        lRet = WriteFile(hFile, ByVal sBuffer, Len(sBuffer), lWrite, ByVal CLng(0))
        lRet = CloseHandle(hFile)
        
        WS.Caption = WORKSHOP_TITLE & " - Template " & Mid$(sPath, InStrRev(sPath, "\") + 1) & " Saved!"
        If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
                
        'if it was SaveAs then set the file history
        If lSaveFlag = 0 Then
            'fix registry entries and recent file history
            TEMPLATE_RECENT_PATH = Left$(sPath, InStrRev(sPath, "\"))
            TEMPLATE_RECENT_FILENAME = Mid$(sPath, InStrRev(sPath, "\") + 1)
            
            'set keys for the file and path locations
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, STR_VAL, "TEMPLATE_RECENT_PATH", TEMPLATE_RECENT_PATH)
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, STR_VAL, "TEMPLATE_RECENT_FILENAME", TEMPLATE_RECENT_FILENAME)
            
            'set up the file history
            Call PopulateRecentMenu(TEMPLATE_RECENT_PATH, TEMPLATE_RECENT_FILENAME)
            
            'activate the Save menu item since template was loaded correctly
            mnuSave.Enabled = True
        End If
    End If

End Sub

Private Function WriteCraftLocation(Index As Long) As String

    Dim sBuf As String
 
    sBuf = "<quality>" & cmb_ItemQuality(Index).Text & "</quality>" & _
            "<level>" & txt_ItemLevel_SC(Index).Text & "</level>" & _
            "<gs1>" & cmb_GemSelectSC1(Index).Text & "</gs1>" & _
            "<ge1>" & cmb_GemEffectSC1(Index).Text & "</ge1>" & _
            "<ga1>" & cmb_GemAmountSC1(Index).Text & "</ga1>" & _
            "<gs2>" & cmb_GemSelectSC2(Index).Text & "</gs2>" & _
            "<ge2>" & cmb_GemEffectSC2(Index).Text & "</ge2>" & _
            "<ga2>" & cmb_GemAmountSC2(Index).Text & "</ga2>" & _
            "<gs3>" & cmb_GemSelectSC3(Index).Text & "</gs3>" & _
            "<ge3>" & cmb_GemEffectSC3(Index).Text & "</ge3>" & _
            "<ga3>" & cmb_GemAmountSC3(Index).Text & "</ga3>" & _
            "<gs4>" & cmb_GemSelectSC4(Index).Text & "</gs4>" & _
            "<ge4>" & cmb_GemEffectSC4(Index).Text & "</ge4>" & _
            "<ga4>" & cmb_GemAmountSC4(Index).Text & "</ga4>" & _
            "<gs5>" & cmb_GemSelectSC5(Index).Text & "</gs5>" & _
            "<ge5>" & cmb_GemEffectSC5(Index).Text & "</ge5>" & _
            "<ga5>" & txt_GemAmountSC5(Index).Text & "</ga5>" & _
            "<ts1>" & cmb_TinctureSelectSC(Index).Text & "</ts1>" & _
            "<te1>" & cmb_TinctureEffectSC(Index).Text & "</te1>"
                  
    WriteCraftLocation = sBuf
    
End Function

Private Function WriteDropLocation(Index As Long) As String

    Dim sBuf As String
    
    sBuf = "<name>" & txt_ItemName_DP(Index).Text & "</name>" & _
           "<level>" & txt_ItemLevel_DP(Index).Text & "</level>" & _
           "<quality>" & txt_ItemQuality(Index).Text & "</quality>" & _
           "<dps>" & txt_AFDPS_DP(Index).Text & "</dps>" & _
           "<spd>" & txt_ItemSPD_DP(Index).Text & "</spd>"
            
    If txt_ItemName_DP(Index).Tag <> vbNullString Then sBuf = sBuf & "<workshop_database_id>" & txt_ItemName_DP(Index).Tag & "</workshop_database_id>"

    If opt_Alb(Index).Tag = "True" Then sBuf = sBuf & "<item_realm>alb</item_realm>"
    If opt_Hib(Index).Tag = "True" Then sBuf = sBuf & "<item_realm>hib</item_realm>"
    If opt_Mid(Index).Tag = "True" Then sBuf = sBuf & "<item_realm>mid</item_realm>"
    If opt_All(Index).Tag = "True" Then sBuf = sBuf & "<item_realm>all</item_realm>"
    
    
    sBuf = sBuf & "<ds1>" & cmb_GemSelect_DP1(Index).Text & "</ds1>" & _
                        "<de1>" & cmb_GemEffect_DP1(Index).Text & "</de1>" & _
                        "<da1>" & txt_GemAmount_DP1(Index).Text & "</da1>"
                                
    sBuf = sBuf & "<ds2>" & cmb_GemSelect_DP2(Index).Text & "</ds2>" & _
                        "<de2>" & cmb_GemEffect_DP2(Index).Text & "</de2>" & _
                        "<da2>" & txt_GemAmount_DP2(Index).Text & "</da2>"
                        
    sBuf = sBuf & "<ds3>" & cmb_GemSelect_DP3(Index).Text & "</ds3>" & _
                        "<de3>" & cmb_GemEffect_DP3(Index).Text & "</de3>" & _
                        "<da3>" & txt_GemAmount_DP3(Index).Text & "</da3>"
                        
    sBuf = sBuf & "<ds4>" & cmb_GemSelect_DP4(Index).Text & "</ds4>" & _
                        "<de4>" & cmb_GemEffect_DP4(Index).Text & "</de4>" & _
                        "<da4>" & txt_GemAmount_DP4(Index).Text & "</da4>"
                        
    sBuf = sBuf & "<ds5>" & cmb_GemSelect_DP5(Index).Text & "</ds5>" & _
                        "<de5>" & cmb_GemEffect_DP5(Index).Text & "</de5>" & _
                        "<da5>" & txt_GemAmount_DP5(Index).Text & "</da5>"
                        
    sBuf = sBuf & "<ds6>" & cmb_GemSelect_DP6(Index).Text & "</ds6>" & _
                        "<de6>" & cmb_GemEffect_DP6(Index).Text & "</de6>" & _
                        "<da6>" & txt_GemAmount_DP6(Index).Text & "</da6>"
                        
    sBuf = sBuf & "<ds7>" & cmb_GemSelect_DP7(Index).Text & "</ds7>" & _
                        "<de7>" & cmb_GemEffect_DP7(Index).Text & "</de7>" & _
                        "<da7>" & txt_GemAmount_DP7(Index).Text & "</da7>"
                        
    sBuf = sBuf & "<ds8>" & cmb_GemSelect_DP8(Index).Text & "</ds8>" & _
                        "<de8>" & cmb_GemEffect_DP8(Index).Text & "</de8>" & _
                        "<da8>" & txt_GemAmount_DP8(Index).Text & "</da8>"
                        
    sBuf = sBuf & "<ds9>" & cmb_GemSelect_DP9(Index).Text & "</ds9>" & _
                        "<de9>" & cmb_GemEffect_DP9(Index).Text & "</de9>" & _
                        "<da9>" & txt_GemAmount_DP9(Index).Text & "</da9>"
                        
    sBuf = sBuf & "<ds10>" & cmb_GemSelect_DP10(Index).Text & "</ds10>" & _
                        "<de10>" & cmb_GemEffect_DP10(Index).Text & "</de10>" & _
                        "<da10>" & txt_GemAmount_DP10(Index).Text & "</da10>"
                        
    sBuf = sBuf & "<ds11>" & cmb_GemSelect_DP11(Index).Text & "</ds11>" & _
                        "<de11>" & cmb_GemEffect_DP11(Index).Text & "</de11>" & _
                        "<da11>" & txt_GemAmount_DP11(Index).Text & "</da11>"
                        
    sBuf = sBuf & "<ds12>" & cmb_GemSelect_DP12(Index).Text & "</ds12>" & _
                        "<de12>" & cmb_GemEffect_DP12(Index).Text & "</de12>" & _
                        "<da12>" & txt_GemAmount_DP12(Index).Text & "</da12>"
    
    WriteDropLocation = sBuf
                            
End Function

Private Sub OpenTemplate(FILE_PATH As String, OPENED_FROM As Long)

    'opened_from flag if 0 then it was opened from a cmdialog, if it's 1 it was opened from the recent menu and we don't want to alter it
    Dim lRet As Long
    
    Dim lError As Long
       
    Dim lCtr As Integer
    
    Dim sBuf As String * 2048   'chunk
    Dim sBuffer As String
    Dim sTemp As String
    
    Dim sItemBuffer As String
    
    Dim sCraftBuffer As String
    Dim sDropBuffer As String
    Dim sRABuffer As String
    Dim sSpecBuffer As String
    Dim sSpecName As String
    
    Dim lSpecLevel As Long
    Dim hFile As Long
    Dim lRead As Long
    
    Dim lIdx As Long
    
    'check that the path and filename is valid before starting
    If (FILE_PATH <> vbNullString) And (Right$(FILE_PATH, 4) = TEMPLATE_EXTENSION) Then
                    
        hFile = CreateFile(FILE_PATH, GENERIC_WRITE Or GENERIC_READ, _
                           FILE_SHARE_WRITE Or FILE_SHARE_READ, _
                           ByVal CLng(0), OPEN_EXISTING, FILE_ATTRIBUTE_ARCHIVE, 0)
    
        'If hFile is -1 the file is not there and there has been an error
        If hFile = -1 Then Exit Sub
        
        sBuffer = vbNullString
        sBuf = vbNullString
        
        WS.Caption = WORKSHOP_TITLE & " - Loading Template: " & Trim$(Mid$(FILE_PATH, InStrRev(FILE_PATH, "\") + 1))
        
        Do
            sBuf = vbNullString
            
            lRet = ReadFile(hFile, ByVal sBuf, Len(sBuf), lRead, ByVal CLng(0))
            'exit if there was no more data to read
            If lRead = 0 Then Exit Do
            
            If sBuf <> vbNullString Then sBuffer = sBuffer & sBuf
        Loop
        
        lRet = CloseHandle(hFile)
        
        sBuffer = Trim$(sBuffer)
        If sBuffer = vbNullString Then Exit Sub
        
        If InStr(sBuffer, "<template_lwt>") <> 0 And _
           InStr(sBuffer, "</template_lwt>") <> 0 And _
           InStr(sBuffer, "<realm_abilities>") <> 0 And _
           InStr(sBuffer, "</realm_abilities>") <> 0 And _
           InStr(sBuffer, "<character>") <> 0 And _
           InStr(sBuffer, "</character>") <> 0 Then
        
            '---------------------------------------------------------------------------------------------------------
            'finished loading the template file into a buffer, now we can begin to process the buffer
            '---------------------------------------------------------------------------------------------------------
            'extract the character information
            '---------------------------------------------------------------------------------------------------------
            If InStr(sBuffer, "<toon_gender>") <> 0 And InStr(sBuffer, "</toon_gender>") <> 0 Then
                sTemp = Mid$(sBuffer, InStr(sBuffer, "<toon_gender>") + 13, InStr(sBuffer, "</toon_gender>") - InStr(sBuffer, "<toon_gender>") - 13)
                If Len(sTemp) = 0 Then sTemp = "0"
                opt_Gender(Val(sTemp)).Value = True
            End If
            
            If InStr(sBuffer, "<toon_name>") <> 0 And InStr(sBuffer, "</toon_name>") <> 0 Then
                txt_CharacterName = Mid$(sBuffer, _
                                         InStr(sBuffer, "<toon_name>") + 11, _
                                         InStr(sBuffer, "</toon_name>") - InStr(sBuffer, "<toon_name>") - 11)
            End If
            
            If InStr(sBuffer, "<toon_realm>") <> 0 And InStr(sBuffer, "</toon_realm>") <> 0 Then
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<toon_realm>") + 12, _
                            InStr(sBuffer, "</toon_realm>") - InStr(sBuffer, "<toon_realm>") - 12)
                If Len(sTemp) <> 0 Then lRet = GetListindexByString(sTemp, cmb_Realm)
                    If lRet <> LISTINDEX_NOT_FOUND Then
                        If lRet = cmb_Realm.ListIndex Then
                            Call cmb_Realm_Click
                        Else
                            cmb_Realm.ListIndex = lRet
                        End If
                    End If
            End If
            
            If InStr(sBuffer, "<toon_race>") <> 0 And InStr(sBuffer, "</toon_race>") <> 0 Then
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<toon_race>") + 11, _
                            InStr(sBuffer, "</toon_race>") - InStr(sBuffer, "<toon_race>") - 11)
                If Len(sTemp) <> 0 Then lRet = GetListindexByString(sTemp, cmb_Race)
                    If lRet <> LISTINDEX_NOT_FOUND Then
                        If lRet = cmb_Race.ListIndex Then
                            Call cmb_Race_Click
                        Else
                            cmb_Race.ListIndex = lRet
                        End If
                    End If
            End If
            
            While timer_RealmAbilities(WS_TIMER_UNLOAD).Enabled = True
                DoEvents
            Wend
            
            If InStr(sBuffer, "<toon_class>") <> 0 And InStr(sBuffer, "</toon_class>") <> 0 Then
                sTemp = Mid$(sBuffer, _
                            InStr(sBuffer, "<toon_class>") + 12, _
                            InStr(sBuffer, "</toon_class>") - InStr(sBuffer, "<toon_class>") - 12)
                If Len(sTemp) <> 0 Then lRet = GetListindexByString(sTemp, cmb_Class)
                    If lRet <> LISTINDEX_NOT_FOUND Then
                        If lRet = cmb_Class.ListIndex Then
                            Call cmb_Class_Click
                        Else
                            cmb_Class.ListIndex = lRet
                        End If
                    End If
            End If
            
            While timer_RealmAbilities(WS_TIMER_LOAD).Enabled = True
                DoEvents
            Wend
                  
            If InStr(sBuffer, "<toon_level>") <> 0 And InStr(sBuffer, "</toon_level>") <> 0 Then
                txt_Level.Text = Mid$(sBuffer, _
                                      InStr(sBuffer, "<toon_level>") + 12, _
                                      InStr(sBuffer, "</toon_level>") - InStr(sBuffer, "<toon_level>") - 12)
            End If
            
            If InStr(sBuffer, "<toon_rps>") <> 0 And InStr(sBuffer, "</toon_rps>") <> 0 Then
                txt_RealmPoints.Text = Mid$(sBuffer, _
                                            InStr(sBuffer, "<toon_rps>") + 10, _
                                            InStr(sBuffer, "</toon_rps>") - InStr(sBuffer, "<toon_rps>") - 10)
            End If
            
            '---------------------------------------------------------------------------------------------------------
            'update realm rank info
            Call cmd_RecalculateRealmRankInfo_MouseUp(1, 1, 0, 0, 0)
            
            '---------------------------------------------------------------------------------------------------------
            'load creation stats
            If InStr(sBuffer, "<toon_str>") <> 0 And InStr(sBuffer, "</toon_str>") <> 0 Then
                sTemp = Mid$(sBuffer, _
                             InStr(sBuffer, "<toon_str>") + 10, _
                             InStr(sBuffer, "</toon_str>") - InStr(sBuffer, "<toon_str>") - 10)
                If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_STR, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_con>") <> 0 And InStr(sBuffer, "</toon_con>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_con>") + 10, _
                         InStr(sBuffer, "</toon_con>") - InStr(sBuffer, "<toon_con>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_CON, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_dex>") <> 0 And InStr(sBuffer, "</toon_dex>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_dex>") + 10, _
                         InStr(sBuffer, "</toon_dex>") - InStr(sBuffer, "<toon_dex>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_DEX, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_qui>") <> 0 And InStr(sBuffer, "</toon_qui>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_qui>") + 10, _
                         InStr(sBuffer, "</toon_qui>") - InStr(sBuffer, "<toon_qui>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_QUI, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_int>") <> 0 And InStr(sBuffer, "</toon_int>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_int>") + 10, _
                         InStr(sBuffer, "</toon_int>") - InStr(sBuffer, "<toon_int>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_INT, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_emp>") <> 0 And InStr(sBuffer, "</toon_emp>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_emp>") + 10, _
                         InStr(sBuffer, "</toon_emp>") - InStr(sBuffer, "<toon_emp>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_EMP, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_pie>") <> 0 And InStr(sBuffer, "</toon_pie>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_pie>") + 10, _
                         InStr(sBuffer, "</toon_pie>") - InStr(sBuffer, "<toon_pie>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_PIE, Val(sTemp))
            End If
            
            If InStr(sBuffer, "<toon_cha>") <> 0 And InStr(sBuffer, "</toon_cha>") <> 0 Then
            sTemp = Mid$(sBuffer, _
                         InStr(sBuffer, "<toon_cha>") + 10, _
                         InStr(sBuffer, "</toon_cha>") - InStr(sBuffer, "<toon_cha>") - 10)
            If Len(sTemp) <> 0 Then Call ClickAddStat(WS_ATTR_CHA, Val(sTemp))
            End If
            
            '---------------------------------------------------------------------------------------------------------
            'now we can parse out the realm ability information.
            '---------------------------------------------------------------------------------------------------------
            If InStr(sBuffer, "<realm_abilities>") <> 0 And InStr(sBuffer, "</realm_abilities>") <> 0 Then
                sRABuffer = Mid$(sBuffer, _
                                 InStr(sBuffer, "<realm_abilities>") + 17, _
                                 InStr(sBuffer, "</realm_abilities>") - InStr(sBuffer, "<realm_abilities>") - 17)
                If Len(sRABuffer) <> 0 Then 'extract ra info
                
                    For lCtr = 0 To CURRENT_RA_PASSIVE_COUNT - 1
                        
                        If InStr(sRABuffer, "<ra_passive_" & Format(lCtr, "00") & ">") <> 0 Then
                        
                            sTemp = Mid$(sRABuffer, _
                                         InStr(sRABuffer, "<ra_passive_" & Format(lCtr, "00") & ">") + 15, _
                                         InStr(sRABuffer, "</ra_passive_" & Format(lCtr, "00") & ">") - InStr(sRABuffer, "<ra_passive_" & Format(lCtr, "00") & ">") - 15)
                                         
                            If Len(sTemp) <> 0 Then
                                While Val(sTemp) <> Val(lbl_RA_PassiveCostValue(lCtr).Tag)
                                    Call cmd_RA_PassiveInc_MouseUp(lCtr, 1, 0, 0, 0)
                                Wend
                            End If
                            
                        End If
                        
                    Next lCtr
                    
                    For lCtr = 0 To CURRENT_RA_ACTIVE_COUNT - 1
                    
                        If InStr(sRABuffer, "<ra_active_" & Format(lCtr, "00") & ">") <> 0 Then
                        
                            sTemp = Mid$(sRABuffer, _
                                InStr(sRABuffer, "<ra_active_" & Format(lCtr, "00") & ">") + 14, _
                                InStr(sRABuffer, "</ra_active_" & Format(lCtr, "00") & ">") - InStr(sRABuffer, "<ra_active_" & Format(lCtr, "00") & ">") - 14)
                                
                            If Len(sTemp) <> 0 Then
                                While Val(sTemp) <> Val(lbl_RA_ActiveCostValue(lCtr).Tag)
                                    Call cmd_RA_ActiveInc_MouseUp(lCtr, 1, 0, 0, 0)
                                Wend
                            End If
                            
                        End If
                        
                    Next lCtr
                        
                End If  'finished extracting ra info
            End If
            
            '---------------------------------------------------------------------------------------------------------
            'now we can parse out the item information.
            '---------------------------------------------------------------------------------------------------------
            For lCtr = WS_DOLL_CHEST To WS_DOLL_MYTHICAL  'loop through all the item locations
            
                DoEvents    'so everything refreshes and we don't hang the application for a few seconds
                
                sItemBuffer = vbNullString  'null out the itembuffer
                
                'grab a new item from the main buffer (sBuffer)
                If InStr(sBuffer, "<item_" & Format(lCtr, "00") & ">") <> 0 And InStr(sBuffer, "</item_" & Format(lCtr, "00") & ">") <> 0 Then
                    sItemBuffer = Mid$(sBuffer, _
                                       InStr(sBuffer, "<item_" & Format(lCtr, "00") & ">") + 9, _
                                       InStr(sBuffer, "</item_" & Format(lCtr, "00") & ">") - InStr(sBuffer, "<item_" & Format(lCtr, "00") & ">") - 9)
                End If
                
                If Len(sItemBuffer) > 0 Then    'check to make sure we actually have something
                
                    'these indicies are locations of drop-only
                    If (lCtr = WS_DOLL_GEM Or _
                        lCtr = WS_DOLL_LRING Or _
                        lCtr = WS_DOLL_LWRIST Or _
                        lCtr = WS_DOLL_RWRIST Or _
                        lCtr = WS_DOLL_RRING Or _
                        lCtr = WS_DOLL_WAIST Or _
                        lCtr = WS_DOLL_CLOAK Or _
                        lCtr = WS_DOLL_NECK Or _
                        lCtr = WS_DOLL_MYTHICAL) Then
                            If (InStr(sItemBuffer, "<de>") <> 0) Or (InStr(sItemBuffer, "<d>") <> 0) Then
                                'check the box
                                chk_Equip_DP(lCtr).Value = vbChecked
                            End If
                    Else    'if its not a drop-only then do this other stuff
                        
                        'check to see which should be equipped
                        If InStr(sItemBuffer, "<de>") <> 0 Then
                            
                            opt_Drop(lCtr).Value = True
                                                    
                            chk_Equip_DP(lCtr).Value = vbChecked
                            
                        ElseIf InStr(sItemBuffer, "<se>") <> 0 Then
                            
                            opt_PlayerCraft(lCtr).Value = True
                            
                            chk_Equip_SC(lCtr).Value = vbChecked
                                                        
                        End If
                        
                    End If  'we're done checking the drop/craft and equip status of the item
                    
                    If (InStr(sItemBuffer, "<d>") <> 0) Or (InStr(sItemBuffer, "<de>") <> 0) Then
                        
                        If InStr(sItemBuffer, "<d>") <> 0 Then
                            'grab the drop item
                            sDropBuffer = Mid$(sItemBuffer, _
                                                InStr(sItemBuffer, "<d>") + 3, _
                                                InStr(sItemBuffer, "</d>") - InStr(sItemBuffer, "<d>") - 3)
                        ElseIf InStr(sItemBuffer, "<de>") <> 0 Then
                            
                            sDropBuffer = Mid$(sItemBuffer, _
                                                InStr(sItemBuffer, "<de>") + 4, _
                                                InStr(sItemBuffer, "</de>") - InStr(sItemBuffer, "<de>") - 4)
                        End If  'done getting the dropbuffer
                        
                        Call LoadWorkshopDropItem(lCtr, sDropBuffer)
                        
                    End If  'finished with the drop item at ctr Index
                    
                    If InStr(sItemBuffer, "<s>") <> 0 Or InStr(sItemBuffer, "<se>") <> 0 Then
                        
                        If InStr(sItemBuffer, "<s>") <> 0 Then
                            'grab from s
                            sCraftBuffer = Mid$(sItemBuffer, _
                                               InStr(sItemBuffer, "<s>") + 3, _
                                               InStr(sItemBuffer, "</s>") - InStr(sItemBuffer, "<s>") - 3)
                                           
                        ElseIf InStr(sItemBuffer, "<se>") <> 0 Then
                            'grab from se
                            sCraftBuffer = Mid$(sItemBuffer, _
                                               InStr(sItemBuffer, "<se>") + 4, _
                                               InStr(sItemBuffer, "</se>") - InStr(sItemBuffer, "<se>") - 4)
                        End If
                        
                        Call LoadWorkshopCraftItem(lCtr, sCraftBuffer)
                        
                    End If  'finished with the playercrafted item info at ctr Index
                
                End If  'finished processing the item
                
            Next lCtr    'increment the counter for the next Index
            
            If InStr(sBuffer, "<spec_info>") <> 0 And InStr(sBuffer, "</spec_info>") <> 0 Then
            
                sSpecBuffer = Mid$(sBuffer, _
                                    InStr(sBuffer, "<spec_info>") + 11, _
                                    InStr(sBuffer, "</spec_info>") - InStr(sBuffer, "<spec_info>") - 11)
                                    
                
                'If InStr(sSpecBuffer, "<spec_auto>") <> 0 Then
                '
                '    lCtr = Val(Mid$(sSpecBuffer, _
                '                    InStr(sSpecBuffer, "<spec_auto>") + 11, _
                '                    InStr(sBuffer, "</spec_auto>") - InStr(sBuffer, "<spec_auto>") - 11))
                '
                '    While (Val(lbl_SpecPoints(1).Tag) <> lCtr)
                '
                '        Call cmd_AutoTrain_MouseUp(1, 1, 0, 0, 0)
                '
                '    Wend
                '
                '
                'End If
                
                If Len(sSpecBuffer) <> 0 Then
                
                    While InStr(sSpecBuffer, "<spec_line>")
                    
                        sTemp = Mid$(sSpecBuffer, _
                                    InStr(sSpecBuffer, "<spec_line>") + 11, _
                                    InStr(sSpecBuffer, "</spec_line>") - InStr(sSpecBuffer, "<spec_line>") - 11)
                                    
                        sSpecBuffer = Mid$(sSpecBuffer, InStr(sSpecBuffer, "</spec_line>") + 12)
                        
                        sSpecName = Mid$(sTemp, _
                                        InStr(sTemp, "<spec_name>") + 11, _
                                        InStr(sTemp, "</spec_name>") - InStr(sTemp, "<spec_name>") - 11)
                                        
                        lSpecLevel = Val(Mid$(sTemp, _
                                            InStr(sTemp, "<spec_level>") + 12, _
                                            InStr(sTemp, "</spec_level>") - InStr(sTemp, "<spec_level>") - 12))
                                            
                        For lCtr = 0 To cmd_addSkillLevel.UBound
                        
                            If LCase$(lbl_SkillName(lCtr).Caption) = LCase$(sSpecName) Then
                            
                                If (lSpecLevel > 0) And (lSpecLevel <= 50) Then
                                    While (Val(lbl_SkillLevel(lCtr).Caption) <> lSpecLevel)
                                        Call cmd_addSkillLevel_MouseUp(lCtr, 1, 0, 0, 0)
                                    Wend
                                End If
                                
                            End If
                        Next lCtr
                    Wend
                End If
                
                Call lbl_SkillName_Click(0)
                
            End If
            
        Else
            MsgBox "This is not a valid Workshop Template, or it is from an older version that is no longer supported.", vbCritical, "Invalid Template File"
            Exit Sub
        End If
    Else    'the filename and path was invalid so we need to exit gracefully
        lError = 1  
        GoTo Error_Handler  'i don't really need this here but just for good measure
    End If

    
Error_Handler:
       
        'if lError not equal to 1 then we opened the file without a problem
        If lError <> 1 Then
            'fix registry entries and recent file history
            TEMPLATE_RECENT_PATH = Trim$(Left$(FILE_PATH, InStrRev(FILE_PATH, "\")))
            TEMPLATE_RECENT_FILENAME = Trim$(Mid$(FILE_PATH, InStrRev(FILE_PATH, "\") + 1))
            
            'set keys for the file and path locations
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, STR_VAL, "TEMPLATE_RECENT_PATH", TEMPLATE_RECENT_PATH)
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, STR_VAL, "TEMPLATE_RECENT_FILENAME", TEMPLATE_RECENT_FILENAME)
            
            'set up the file history
            If OPENED_FROM = 0 Then Call PopulateRecentMenu(TEMPLATE_RECENT_PATH, TEMPLATE_RECENT_FILENAME)
            
            'activate the Save menu item since template was loaded correctly
            mnuSave.Enabled = True
            WS.Caption = WORKSHOP_TITLE & " - Template: " & Trim$(Mid$(FILE_PATH, InStrRev(FILE_PATH, "\") + 1)) & " Loaded"
            If UPDATE_AVAILABLE Then WS.Caption = WS.Caption & WORKSHOP_UPDATE_MESSAGE
        End If
        
        CURRENT_LOCATION = ClickDollButton(WS_DOLL_HEAD, CURRENT_LOCATION, img_DollButton(WS_DOLL_HEAD), lbl_LocationName)
        CURRENT_LOCATION = ClickDollButton(WS_DOLL_CHEST, CURRENT_LOCATION, img_DollButton(WS_DOLL_CHEST), lbl_LocationName)
            
End Sub

Private Sub ExitNice()

    Dim lRet As Long
    
    If EXIT_TO_SYSTRAY Then
        WS.WindowState = vbMinimized
    Else
        
        'prevent ws from saving a value of -480000 to the registry as x/y coords
        If WS.WindowState <> vbMinimized Then
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, NUM_VAL, "WSX", WS.Left)
            Call SetNewValue(HKEY_LOCAL_MACHINE, REGKEY, NUM_VAL, "WSY", WS.Top)
        End If
        
        WS.Hide
        
        'track usage
        Call TrackPatch(WORKSHOP_AGENT & "_STOP")
        
        If WORKSHOP_TRAY Then Call DestroySystrayIcon
            
        Set WS = Nothing
         
        End
        
    End If
    
End Sub

Private Sub txt_RealmPoints_KeyPress(KeyAscii As Integer)
    
    If KeyAscii <> vbKeyReturn Then
        If KeyAscii <> vbKeyDelete And KeyAscii <> vbKeyBack Then
            If KeyAscii > 47 Or KeyAscii < 58 Then
                txt_RealmPoints.SelStart = Len(txt_RealmPoints.Text)
                If (Len(txt_RealmPoints.Text) + 1) > 9 Then KeyAscii = 0
            Else
                KeyAscii = 0
            End If
        End If
    Else
        Call cmd_RecalculateRealmRankInfo_MouseUp(1, 1, 0, 0, 0)
    End If
    
End Sub

Private Function CalculateRealmSpecPointsSpent() As Long

    Dim i As Long
    Dim lTotal As Long
    
    lTotal = 0
    
    For i = 0 To CURRENT_RA_PASSIVE_COUNT - 1
        lTotal = lTotal + Val(lbl_RA_PassiveCostValue(i).Tag)
    Next i
    
    For i = 0 To CURRENT_RA_ACTIVE_COUNT - 1
        lTotal = lTotal + Val(lbl_RA_ActiveCostValue(i).Tag)
    Next i
    
    CalculateRealmSpecPointsSpent = lTotal
    
End Function

Private Sub LoadWorkshopCraftSlot(lSlot As Long, sBuffer As String, _
                                  cmbSelect As ComboBox, cmbEffect As ComboBox, _
                                  cmbAmount As ComboBox)
    
    Dim sTemp As String
    Dim lIdx As Long
    
    Dim gsOpenSlot As String, gsCloseSlot As String
    Dim geOpenSlot As String, geCloseSlot As String
    Dim gaOpenSlot As String, gaCloseSlot As String
   
    gsOpenSlot = "<gs" & lSlot & ">"
    geOpenSlot = "<ge" & lSlot & ">"
    gaOpenSlot = "<ga" & lSlot & ">"
   
    gsCloseSlot = "</gs" & lSlot & ">"
    geCloseSlot = "</ge" & lSlot & ">"
    gaCloseSlot = "</ga" & lSlot & ">"
    
    If InStr(sBuffer, gsOpenSlot) <> 0 And InStr(sBuffer, gsCloseSlot) <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, gsOpenSlot) + Len(gsOpenSlot), InStr(sBuffer, gsCloseSlot) - InStr(sBuffer, gsOpenSlot) - Len(gsOpenSlot))
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmbSelect)
            If lIdx <> LISTINDEX_NOT_FOUND Then cmbSelect.ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, geOpenSlot) <> 0 And InStr(sBuffer, geCloseSlot) <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, geOpenSlot) + Len(geOpenSlot), InStr(sBuffer, geCloseSlot) - InStr(sBuffer, geOpenSlot) - Len(geOpenSlot))
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmbEffect)
            If lIdx <> LISTINDEX_NOT_FOUND Then cmbEffect.ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, gaOpenSlot) <> 0 And InStr(sBuffer, gaCloseSlot) <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, gaOpenSlot) + Len(gaOpenSlot), InStr(sBuffer, gaCloseSlot) - InStr(sBuffer, gaOpenSlot) - Len(gaOpenSlot))
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmbAmount)
            If lIdx <> LISTINDEX_NOT_FOUND Then cmbAmount.ListIndex = lIdx
        End If
    End If
    
End Sub

Private Sub LoadWorkshopCraftItem(Index As Integer, sBuffer As String)

    Dim lIdx As Long
    Dim sTemp As String
    
    If InStr(sBuffer, "<quality>") <> 0 And InStr(sBuffer, "</quality>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<quality>") + 9, _
                     InStr(sBuffer, "</quality>") - InStr(sBuffer, "<quality>") - 9)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_ItemQuality(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_ItemQuality(Index).ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<level>") + 7, _
                     InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
        If Len(sTemp) <> 0 Then txt_ItemLevel_SC(Index).Text = sTemp
    End If
    '------------------------LOAD THE GEM SLOTS!--------------------------------------------------------------------------------------------------------------
    Call LoadWorkshopCraftSlot(1, sBuffer, cmb_GemSelectSC1(Index), cmb_GemEffectSC1(Index), cmb_GemAmountSC1(Index))
    Call LoadWorkshopCraftSlot(2, sBuffer, cmb_GemSelectSC2(Index), cmb_GemEffectSC2(Index), cmb_GemAmountSC2(Index))
    Call LoadWorkshopCraftSlot(3, sBuffer, cmb_GemSelectSC3(Index), cmb_GemEffectSC3(Index), cmb_GemAmountSC3(Index))
    Call LoadWorkshopCraftSlot(4, sBuffer, cmb_GemSelectSC4(Index), cmb_GemEffectSC4(Index), cmb_GemAmountSC4(Index))
    
    '-----------------------LOAD THE 5TH SLOT-----------------------------------------------------------------------------------------------------------------
    If InStr(sBuffer, "<gs5>") <> 0 And InStr(sBuffer, "</gs5>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<gs5>") + 5, InStr(sBuffer, "</gs5>") - InStr(sBuffer, "<gs5>") - 5)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_GemSelectSC5(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_GemSelectSC5(Index).ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, "<ge5>") <> 0 And InStr(sBuffer, "</ge5>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<ge5>") + 5, InStr(sBuffer, "</ge5>") - InStr(sBuffer, "<ge5>") - 5)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_GemEffectSC5(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_GemEffectSC5(Index).ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, "<ga5>") <> 0 And InStr(sBuffer, "</ga5>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<ga5>") + 5, InStr(sBuffer, "</ga5>") - InStr(sBuffer, "<ga5>") - 5)
        If Len(sTemp) <> 0 Then
            txt_GemAmountSC5(Index).Text = sTemp
        End If
    End If
    
    '--------------------------LOAD THE TINCTURE--------------------------------------------------------------------------------------------------------------
    If InStr(sBuffer, "<ts1>") <> 0 And InStr(sBuffer, "</ts1>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<ts1>") + 5, InStr(sBuffer, "</ts1>") - InStr(sBuffer, "<ts1>") - 5)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_TinctureSelectSC(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_TinctureSelectSC(Index).ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, "<te1>") <> 0 And InStr(sBuffer, "</te1>") <> 0 Then
        sTemp = Mid$(sBuffer, InStr(sBuffer, "<te1>") + 5, InStr(sBuffer, "</te1>") - InStr(sBuffer, "<te1>") - 5)
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmb_TinctureEffectSC(Index))
            If lIdx <> LISTINDEX_NOT_FOUND Then cmb_TinctureEffectSC(Index).ListIndex = lIdx
        End If
    End If

End Sub

Private Sub LoadWorkshopDropSlot(lSlot As Long, sBuffer As String, _
                                 cmbSelect As ComboBox, cmbEffect As ComboBox, _
                                 txtAmount As TextBox)
    Dim sTemp As String
    Dim lIdx As Long
    
    Dim dsOpenSlot As String, dsCloseSlot As String
    Dim deOpenSlot As String, deCloseSlot As String
    Dim daOpenSlot As String, daCloseSlot As String
    
    dsOpenSlot = "<ds" & lSlot & ">"
    deOpenSlot = "<de" & lSlot & ">"
    daOpenSlot = "<da" & lSlot & ">"
    
    dsCloseSlot = "</ds" & lSlot & ">"
    deCloseSlot = "</de" & lSlot & ">"
    daCloseSlot = "</da" & lSlot & ">"
    
    If InStr(sBuffer, dsOpenSlot) <> 0 And InStr(sBuffer, dsCloseSlot) <> 0 Then
        sTemp = Mid$(sBuffer, _
                     InStr(sBuffer, dsOpenSlot) + Len(dsOpenSlot), _
                     InStr(sBuffer, dsCloseSlot) - InStr(sBuffer, dsOpenSlot) - Len(dsOpenSlot))
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmbSelect)
            If lIdx <> LISTINDEX_NOT_FOUND Then cmbSelect.ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, deOpenSlot) <> 0 And InStr(sBuffer, deCloseSlot) <> 0 Then
        sTemp = Mid$(sBuffer, _
                    InStr(sBuffer, deOpenSlot) + Len(deOpenSlot), _
                    InStr(sBuffer, deCloseSlot) - InStr(sBuffer, deOpenSlot) - Len(deOpenSlot))
        If Len(sTemp) <> 0 Then
            lIdx = GetListindexByString(sTemp, cmbEffect)
            If lIdx <> LISTINDEX_NOT_FOUND Then cmbEffect.ListIndex = lIdx
        End If
    End If
    
    If InStr(sBuffer, daOpenSlot) <> 0 And InStr(sBuffer, daCloseSlot) <> 0 Then
        txtAmount.Text = Mid$(sBuffer, _
                            InStr(sBuffer, daOpenSlot) + Len(daOpenSlot), _
                            InStr(sBuffer, daCloseSlot) - InStr(sBuffer, daOpenSlot) - Len(daOpenSlot))
    End If
    
End Sub

Private Sub LoadWorkshopDropItem(Index As Integer, sBuffer As String)

    Dim sTemp As String
    Dim lIdx As Long
    
    If InStr(sBuffer, "<realm>alb</realm>") <> 0 Then
        opt_Alb(Index).Value = True
        opt_Alb(Index).Tag = opt_Alb(Index).Value
    ElseIf InStr(sBuffer, "<realm>hib</realm>") <> 0 Then
        opt_Hib(Index).Value = True
        opt_Hib(Index).Tag = opt_Hib(Index).Value
    ElseIf InStr(sBuffer, "<realm>mid</realm>") <> 0 Then
        opt_Mid(Index).Value = True
        opt_Mid(Index).Tag = opt_Mid(Index).Value
    ElseIf InStr(sBuffer, "<realm>all</realm>") <> 0 Then
        opt_All(Index).Value = True
        opt_All(Index).Tag = opt_All(Index).Value
    End If  'done setting items realm info
       
    If InStr(sBuffer, "<workshop_database_id>") <> 0 Then  'check to see if the item is a DB item
    
        sTemp = Mid$(sBuffer, _
                    InStr(sBuffer, "<workshop_database_id>") + 22, _
                    InStr(sBuffer, "</workshop_database_id>") - InStr(sBuffer, "<workshop_database_id>") - 22)
                    
        If Len(sTemp) <> 0 Then
                    
            txt_ItemName_DP(Index).Tag = sTemp
            
            opt_Alb(Index).Enabled = False
            opt_Hib(Index).Enabled = False
            opt_Mid(Index).Enabled = False
            opt_All(Index).Enabled = False
            cmd_SaveItem_DP(Index).Enabled = False
        Else
            MsgBox "Database item has become corrupted, aborting item load", vbCritical, "Item Error"
            Exit Sub
        End If
        
    Else    'it's not a db item so lets enable the realm selection for the user
        txt_ItemName_DP(Index).Tag = vbNullString
        opt_Alb(Index).Enabled = True
        opt_Hib(Index).Enabled = True
        opt_Mid(Index).Enabled = True
        cmd_SaveItem_DP(Index).Enabled = True
    End If  'finished with the DB item check
    
    
    'lets begin getting the item slots
    'get item info
    
    If InStr(sBuffer, "<name>") <> 0 And InStr(sBuffer, "</name>") <> 0 Then
        txt_ItemName_DP(Index).Text = Mid$(sBuffer, _
                                           InStr(sBuffer, "<name>") + 6, _
                                           InStr(sBuffer, "</name>") - InStr(sBuffer, "<name>") - 6)
    End If
    
    If InStr(sBuffer, "<level>") <> 0 And InStr(sBuffer, "</level>") <> 0 Then
        txt_ItemLevel_DP(Index).Text = Mid$(sBuffer, _
                                            InStr(sBuffer, "<level>") + 7, _
                                            InStr(sBuffer, "</level>") - InStr(sBuffer, "<level>") - 7)
    End If
    
    If InStr(sBuffer, "<quality>") <> 0 And InStr(sBuffer, "</quality>") <> 0 Then
        txt_ItemQuality(Index).Text = Mid$(sBuffer, _
                                           InStr(sBuffer, "<quality>") + 9, _
                                           InStr(sBuffer, "</quality>") - InStr(sBuffer, "<quality>") - 9)
    End If
    
    If InStr(sBuffer, "<dps>") <> 0 And InStr(sBuffer, "</dps>") <> 0 Then
        txt_AFDPS_DP(Index).Text = Mid$(sBuffer, _
                                        InStr(sBuffer, "<dps>") + 5, _
                                        InStr(sBuffer, "</dps>") - InStr(sBuffer, "<dps>") - 5)
    End If
    
    If InStr(sBuffer, "<spd>") <> 0 And InStr(sBuffer, "</spd>") <> 0 Then
        txt_ItemSPD_DP(Index).Text = Mid$(sBuffer, _
                                          InStr(sBuffer, "<spd>") + 5, _
                                          InStr(sBuffer, "</spd>") - InStr(sBuffer, "<spd>") - 5)
    End If
    
    Call LoadWorkshopDropSlot(1, sBuffer, cmb_GemSelect_DP1(Index), cmb_GemEffect_DP1(Index), txt_GemAmount_DP1(Index))
    Call LoadWorkshopDropSlot(2, sBuffer, cmb_GemSelect_DP2(Index), cmb_GemEffect_DP2(Index), txt_GemAmount_DP2(Index))
    Call LoadWorkshopDropSlot(3, sBuffer, cmb_GemSelect_DP3(Index), cmb_GemEffect_DP3(Index), txt_GemAmount_DP3(Index))
    Call LoadWorkshopDropSlot(4, sBuffer, cmb_GemSelect_DP4(Index), cmb_GemEffect_DP4(Index), txt_GemAmount_DP4(Index))
    Call LoadWorkshopDropSlot(5, sBuffer, cmb_GemSelect_DP5(Index), cmb_GemEffect_DP5(Index), txt_GemAmount_DP5(Index))
    Call LoadWorkshopDropSlot(6, sBuffer, cmb_GemSelect_DP6(Index), cmb_GemEffect_DP6(Index), txt_GemAmount_DP6(Index))
    Call LoadWorkshopDropSlot(7, sBuffer, cmb_GemSelect_DP7(Index), cmb_GemEffect_DP7(Index), txt_GemAmount_DP7(Index))
    Call LoadWorkshopDropSlot(8, sBuffer, cmb_GemSelect_DP8(Index), cmb_GemEffect_DP8(Index), txt_GemAmount_DP8(Index))
    Call LoadWorkshopDropSlot(9, sBuffer, cmb_GemSelect_DP9(Index), cmb_GemEffect_DP9(Index), txt_GemAmount_DP9(Index))
    Call LoadWorkshopDropSlot(10, sBuffer, cmb_GemSelect_DP10(Index), cmb_GemEffect_DP10(Index), txt_GemAmount_DP10(Index))
    Call LoadWorkshopDropSlot(11, sBuffer, cmb_GemSelect_DP11(Index), cmb_GemEffect_DP11(Index), txt_GemAmount_DP11(Index))
    Call LoadWorkshopDropSlot(12, sBuffer, cmb_GemSelect_DP12(Index), cmb_GemEffect_DP12(Index), txt_GemAmount_DP12(Index))
    
End Sub

Private Sub LoadItem(Index As Integer)

    Dim hFile As Long
        
    Dim sPath As String
    Dim sBuf As String * 1024
    Dim sBuffer As String
    Dim sTemp As String
    
    Dim lRet As Long
    
    Dim lRead As Long
    Dim cmdFlags As Long
    Dim cmdFilter As String
    Dim cmdMessage As String
    Dim sItemFolder As String
    
    cmdFlags = OFN_PATHMUSTEXIST Or OFN_FILEMUSTEXIST
    cmdFilter = "Item Files (*.xml)" & vbNullChar & "*.xml" & vbNullChar
    cmdMessage = "Load Item"
    
    sItemFolder = GetOpenSavePath(Index)
    
    sPath = LCase$(CMD_OpenSave(lOpen, Me.hwnd, cmdFilter, 1, sItemFolder, cmdMessage, cmdFlags))
    
    On Error Resume Next
    
    If sPath <> vbNullString Then
    
        hFile = CreateFile(sPath, GENERIC_WRITE Or GENERIC_READ, _
                           FILE_SHARE_WRITE Or FILE_SHARE_READ, _
                           ByVal CLng(0), OPEN_EXISTING, FILE_ATTRIBUTE_ARCHIVE, 0)
        
        If hFile = -1 Then Exit Sub
                
        Do
            sBuf = vbNullString
            
            lRet = ReadFile(hFile, ByVal sBuf, Len(sBuf), lRead, ByVal CLng(0))
            'exit if there was no more data to read
            If lRead = 0 Then Exit Do
            
            If sBuf <> vbNullString Then sBuffer = sBuffer & sBuf
        Loop
        
        lRet = CloseHandle(hFile)
        
        sBuffer = Trim$(sBuffer)
        sTemp = LCase$(sBuffer)
        
        'now we have the item file loaded into a buffer
        'we need to determine what type of item it is (drop/craft)
               
        '---begin item load code-----------------------------------------------------
        'determine who's item it is!
        If InStr(sTemp, "<scitem>") <> 0 And _
           InStr(sTemp, "</scitem>") <> 0 And _
           InStr(sTemp, "<dbsource>ethinarg</dbsource>") <> 0 And _
           InStr(sTemp, "<classrestrictions>") <> 0 And _
           InStr(sTemp, "</classrestrictions>") <> 0 And _
           InStr(sTemp, "<dropitem>") <> 0 And _
           InStr(sTemp, "</dropitem>") <> 0 Then
            'at this point i'm pretty sure its an ethinarg database item
            
            sBuffer = LCase$(sBuffer)
            
            If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
                       
            Call cmd_ClearItem_DP_Click(Index)
            Call LoadEthinargDropItem(Index, sBuffer)
                            
        ElseIf InStr(sTemp, "<scitem>") <> 0 And _
               InStr(sTemp, "</scitem>") <> 0 And _
               InStr(sTemp, "<slot number=") <> 0 And _
               InStr(sTemp, "</slot>") <> 0 Then
               
            sBuffer = LCase$(sBuffer)
            
            If InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 And _
                InStr(sBuffer, "<source>drop</source>") <> 0 Then
                'most likely a loki drop item
                
                If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
                
                Call cmd_ClearItem_DP_Click(Index)
                Call LoadLokiDropItem(Index, sBuffer)
            
            ElseIf InStr(sBuffer, "<activestate>drop</activestate>") <> 0 Then
                'probably a kort drop item
                
                If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
                
                Call cmd_ClearItem_DP_Click(Index)
                Call LoadKortDropItem(Index, sBuffer)
                        
            ElseIf InStr(sBuffer, "<source>crafted</source>") <> 0 And _
               InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 Then
                'probably a loki crafted item
                
                If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
                
                Call cmd_ClearItem_SC_Click(Index)
                Call LoadLokiCraftItem(Index, sBuffer, False)
            Else
                'nothing else it could be but a kort crafted item
                
                If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
                
                Call cmd_ClearItem_SC_Click(Index)
                Call LoadKortCraftItem(Index, sBuffer)
            End If
                                            
        ElseIf InStr(sTemp, "<workshop_drop_item>") <> 0 And _
               InStr(sTemp, "</workshop_drop_item>") <> 0 And _
               InStr(sTemp, "<ds1>") <> 0 And InStr(sTemp, "<de1>") <> 0 And InStr(sTemp, "<da1>") <> 0 Then
                'you can't lcase the buffer because you will have MD5 hash values in here that would be bad
                'moreover all of my items and templates are lowercase anyway except for the name and dbID
                'this should be enough to verify that it's mine
                
            If Not opt_Drop(Index).Value Then opt_Drop(Index).Value = True
            
            Call cmd_ClearItem_DP_Click(Index)
            Call LoadWorkshopDropItem(Index, sBuffer)
        
        ElseIf InStr(sTemp, "<workshop_craft_item>") <> 0 And _
               InStr(sTemp, "</workshop_craft_item>") <> 0 And _
               InStr(sTemp, "<gs1>") <> 0 And InStr(sTemp, "</gs1>") <> 0 Then
           
            sBuffer = LCase$(Trim$(Mid$(sBuffer, InStr(sBuffer, "<workshop_craft_item>"), InStr(sBuffer, "</workshop_craft_item>") + 21)))
            
            If Not opt_PlayerCraft(Index).Value Then opt_PlayerCraft(Index).Value = True
            
            Call cmd_ClearItem_SC_Click(Index)
            Call LoadWorkshopCraftItem(Index, sBuffer)
              
        End If  'whos item is it
        
        '---end item load code-------------------------------------------------------
        
        '---begin craft item load code----------------------------------------------------
        'If InStr(sBuffer, "<workshop_craft_item>") <> 0 And _
        '   InStr(sBuffer, "</workshop_craft_item>") <> 0 And _
        '   InStr(sBuffer, "<gs1>") <> 0 And InStr(sBuffer, "</gs1>") <> 0 Then
        '
        '   sBuffer = Trim$(Mid$(sBuffer, InStr(sBuffer, "<workshop_craft_item>"), InStr(sBuffer, "</workshop_craft_item>") + 21))
        '
        '   If Not opt_PlayerCraft(Index).Value Then Call opt_PlayerCraft_Click(Index)
        '
        '   Call cmd_ClearItem_SC_Click(Index)
        '   Call LoadWorkshopCraftItem(Index, sBuffer)
        '
        'ElseIf InStr(sBuffer, "<scitem>") <> 0 And _
        '       InStr(sBuffer, "</scitem>") <> 0 And _
        '       InStr(sBuffer, "<slot number=") <> 0 And _
        '       InStr(sBuffer, "</slot>") <> 0 Then
        '
        '       If InStr(sBuffer, "<source>crafted</source>") <> 0 And _
        '          InStr(sBuffer, "<dbsource>loki</dbsource>") <> 0 Then
        '
        '            Call cmd_ClearItem_SC_Click(Index)
        '            Call LoadLokiCraftItem(Index, sBuffer, False)
        '        Else
        '            Call cmd_ClearItem_SC_Click(Index)
        '            Call LoadKortCraftItem(Index, sBuffer)
        '        End If
        'End If
        '---end craft item load code------------------------------------------------------
        
    End If

End Sub

Private Sub txt_SkillLevel_Change(Index As Integer)


    Dim lCtr As Long
    
    If CLICKED_SKILL_UP = False And TRAINER_LOADING = False Then
        
        TYPED_SKILL_UP = True
        If Val(txt_SkillLevel(Index).Text) >= 1 And Val(txt_SkillLevel(Index).Text) <= 50 Then
            
            'take away all the points
            For lCtr = 1 To 51
                Call cmd_subSkillLevel_MouseUp(Index, 1, 0, 0, 0)
            Next lCtr
            
            For lCtr = 1 To Val(txt_SkillLevel(Index).Text) - 1
                Call cmd_addSkillLevel_MouseUp(Index, 1, 0, 0, 0)
            Next lCtr
            
        End If
        
        TYPED_SKILL_UP = False
    End If
    
End Sub

Private Sub vscroll_SpellClass_Change()

    vscroll_SpellClass_Scroll
    
End Sub

Private Sub vscroll_SpellClass_Scroll()

    frameTrainer(1).Top = -vscroll_SpellClass.Value + originPos '- originPos
    
End Sub

